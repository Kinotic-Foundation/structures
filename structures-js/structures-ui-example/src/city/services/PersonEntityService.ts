import {IEntitiesService, Query} from '@kinotic/structures-api'
import {CityCount} from './CityCount.js'
import { BasePersonEntityService } from './generated/BasePersonEntityService.js'

/**
 * Service for interacting with Person entities
 * This class was generated by the structures cli
 */
export class PersonEntityService extends BasePersonEntityService {

  constructor(entitiesService?: IEntitiesService) {
    super(false, entitiesService)
  }

    /**
     * Get a count of all people in a given city
     * @param city The city name to get the count for
     */
    @Query('select count(firstName) as count, address.city as city from "struct_city.person" where address.city = ? group by address.city')
    public async countByCity(city: string): Promise<CityCount[]> {
      /** Autogenerated code, changes will be overwritten. **/
      const parameters = [
        {key: 'city', value: city}
      ]
      return this.namedQuery('countByCity', parameters)
    }


}
