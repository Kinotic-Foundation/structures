import { EntityService, IEntitiesService } from '@kinotic/structures-api'
import { Prescription } from '../../../entity/domain/health/Prescription.js'


/**
 * Base Service for interacting with Prescription entities
 * This class was generated by the Structures CLI. And will be overwritten if the CLI is run again.
 */
export class BasePrescriptionEntityService extends EntityService<Prescription> {

  private readonly shouldValidate: boolean

  constructor(shouldValidate: boolean = true, entitiesService?: IEntitiesService) {
    super('healthcare', 'Prescription', entitiesService)
    this.shouldValidate = shouldValidate
  }

  protected async beforeSaveOrUpdate(entity: Prescription): Promise<Prescription> {
    if (this.shouldValidate) {
      return this.validate(entity)
    } else {
      return entity
    }
  }

  protected async beforeBulkSaveOrUpdate(entities: Prescription[]): Promise<Prescription[]> {
    if (this.shouldValidate) {
      const validatedEntities: Prescription[] = []
      for (let entity of entities) {
        validatedEntities.push(this.validate(entity))
      }
      return validatedEntities
    } else {
      return entities
    }
  }

  validate(entity: Prescription): Prescription {
    let ret: any
    if (entity) {
      ret = (ret ? ret : {})
      ret.id = entity.id
      ret.patientId = entity.patientId
      ret.providerId = entity.providerId
      ret.diagnosisId = entity.diagnosisId
      ret.medicationName = entity.medicationName
      ret.dosageForm = entity.dosageForm
      ret.strength = entity.strength
      ret.frequency = entity.frequency
      ret.quantity = entity.quantity
      ret.refillsRemaining = entity.refillsRemaining
      ret.startDate = entity.startDate
      ret.endDate = entity.endDate
      ret.instructions = entity.instructions
      ret.pharmacyName = entity.pharmacyName
      ret.pharmacyPhone = entity.pharmacyPhone
      ret.isActive = entity.isActive
      ret.notes = entity.notes
      ret.createdAt = entity.createdAt
      ret.updatedAt = entity.updatedAt
      ret.status = entity.status
    }

    return ret
  }

}
