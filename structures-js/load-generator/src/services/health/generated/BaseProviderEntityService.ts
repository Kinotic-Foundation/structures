import { EntityService, IEntitiesService } from '@kinotic/structures-api'
import { Provider } from '../../../entity/domain/health/Provider.js'
import {ClinicalResearch,
GrantFunding,
IndustryFunding,
FoundationFunding,
BasicScienceResearch,
TranslationalResearch,
EpidemiologicalResearch,
LeadershipActivity,
ServiceActivity,
ResearchActivity,
EducationActivity,
ClinicalEvaluation,
AcademicEvaluation,
AdministrativeEvaluation} from '../../../entity/domain/health/Qualifications.js'


/**
 * Base Service for interacting with Provider entities
 * This class was generated by the Structures CLI. And will be overwritten if the CLI is run again.
 */
export class BaseProviderEntityService extends EntityService<Provider> {

  private readonly shouldValidate: boolean

  constructor(shouldValidate: boolean = true, entitiesService?: IEntitiesService) {
    super('healthcare', 'Provider', entitiesService)
    this.shouldValidate = shouldValidate
  }

  protected async beforeSaveOrUpdate(entity: Provider): Promise<Provider> {
    if (this.shouldValidate) {
      return this.validate(entity)
    } else {
      return entity
    }
  }

  protected async beforeBulkSaveOrUpdate(entities: Provider[]): Promise<Provider[]> {
    if (this.shouldValidate) {
      const validatedEntities: Provider[] = []
      for (let entity of entities) {
        validatedEntities.push(this.validate(entity))
      }
      return validatedEntities
    } else {
      return entities
    }
  }

  validate(entity: Provider): Provider {
    let ret: any
    if (entity) {
      ret = (ret ? ret : {})
      ret.id = entity.id
      ret.firstName = entity.firstName
      ret.lastName = entity.lastName
      ret.title = entity.title
      if (entity.specialties) {
        ret.specialties = []
        for (let entitySpecialtiesItem of entity.specialties) {
          let retSpecialtiesValue: any
          if (entitySpecialtiesItem) {
            retSpecialtiesValue = (retSpecialtiesValue ? retSpecialtiesValue : {})
            retSpecialtiesValue.name = entitySpecialtiesItem.name
            retSpecialtiesValue.description = entitySpecialtiesItem.description
            retSpecialtiesValue.certificationRequired = entitySpecialtiesItem.certificationRequired
            retSpecialtiesValue.yearsOfTraining = entitySpecialtiesItem.yearsOfTraining
            retSpecialtiesValue.isActive = entitySpecialtiesItem.isActive
          }
          ret.specialties.push(retSpecialtiesValue)
        }
      }
      if (entity.qualifications) {
        ret.qualifications = (ret.qualifications ? ret.qualifications : {})
        if (entity.qualifications.education) {
          ret.qualifications.education = []
          for (let entityQualificationsEducationItem of entity.qualifications.education) {
            let retQualificationsEducationValue: any
            if (entityQualificationsEducationItem) {
              retQualificationsEducationValue = (retQualificationsEducationValue ? retQualificationsEducationValue : {})
              retQualificationsEducationValue.level = entityQualificationsEducationItem.level
              retQualificationsEducationValue.degree = entityQualificationsEducationItem.degree
              retQualificationsEducationValue.institution = entityQualificationsEducationItem.institution
              retQualificationsEducationValue.year = entityQualificationsEducationItem.year
              retQualificationsEducationValue.major = entityQualificationsEducationItem.major
              retQualificationsEducationValue.minor = entityQualificationsEducationItem.minor
              retQualificationsEducationValue.gpa = entityQualificationsEducationItem.gpa
              if (entityQualificationsEducationItem.honors) {
                retQualificationsEducationValue.honors = []
                for (let entityQualificationsEducationItemHonorsItem of entityQualificationsEducationItem.honors) {
                  let retQualificationsEducationValueHonorsValue: any
                  retQualificationsEducationValueHonorsValue = entityQualificationsEducationItemHonorsItem
                  retQualificationsEducationValue.honors.push(retQualificationsEducationValueHonorsValue)
                }
              }
              if (entityQualificationsEducationItem.research) {
                retQualificationsEducationValue.research = []
                for (let entityQualificationsEducationItemResearchItem of entityQualificationsEducationItem.research) {
                  let retQualificationsEducationValueResearchValue: any
                  let entityQualificationsEducationItemResearchItemI1 = entityQualificationsEducationItemResearchItem as ClinicalResearch
                  let retQualificationsEducationValueResearchValueO1 = retQualificationsEducationValueResearchValue
                  if (entityQualificationsEducationItemResearchItemI1) {
                    retQualificationsEducationValueResearchValueO1 = (retQualificationsEducationValueResearchValueO1 ? retQualificationsEducationValueResearchValueO1 : {})
                    retQualificationsEducationValueResearchValueO1.type = entityQualificationsEducationItemResearchItemI1.type
                    retQualificationsEducationValueResearchValueO1.trialPhase = entityQualificationsEducationItemResearchItemI1.trialPhase
                    retQualificationsEducationValueResearchValueO1.patientCount = entityQualificationsEducationItemResearchItemI1.patientCount
                    if (entityQualificationsEducationItemResearchItemI1.outcomes) {
                      retQualificationsEducationValueResearchValueO1.outcomes = []
                      for (let entityQualificationsEducationItemResearchItemI1OutcomesItem of entityQualificationsEducationItemResearchItemI1.outcomes) {
                        let retQualificationsEducationValueResearchValueO1OutcomesValue: any
                        retQualificationsEducationValueResearchValueO1OutcomesValue = entityQualificationsEducationItemResearchItemI1OutcomesItem
                        retQualificationsEducationValueResearchValueO1.outcomes.push(retQualificationsEducationValueResearchValueO1OutcomesValue)
                      }
                    }
                    retQualificationsEducationValueResearchValueO1.regulatoryApproval = entityQualificationsEducationItemResearchItemI1.regulatoryApproval
                    if (entityQualificationsEducationItemResearchItemI1.funding) {
                      retQualificationsEducationValueResearchValueO1.funding = []
                      for (let entityQualificationsEducationItemResearchItemI1FundingItem of entityQualificationsEducationItemResearchItemI1.funding) {
                        let retQualificationsEducationValueResearchValueO1FundingValue: any
                        let entityQualificationsEducationItemResearchItemI1FundingItemI1 = entityQualificationsEducationItemResearchItemI1FundingItem as GrantFunding
                        let retQualificationsEducationValueResearchValueO1FundingValueO1 = retQualificationsEducationValueResearchValueO1FundingValue
                        if (entityQualificationsEducationItemResearchItemI1FundingItemI1) {
                          retQualificationsEducationValueResearchValueO1FundingValueO1 = (retQualificationsEducationValueResearchValueO1FundingValueO1 ? retQualificationsEducationValueResearchValueO1FundingValueO1 : {})
                          retQualificationsEducationValueResearchValueO1FundingValueO1.type = entityQualificationsEducationItemResearchItemI1FundingItemI1.type
                          retQualificationsEducationValueResearchValueO1FundingValueO1.source = entityQualificationsEducationItemResearchItemI1FundingItemI1.source
                          retQualificationsEducationValueResearchValueO1FundingValueO1.amount = entityQualificationsEducationItemResearchItemI1FundingItemI1.amount
                          retQualificationsEducationValueResearchValueO1FundingValueO1.duration = entityQualificationsEducationItemResearchItemI1FundingItemI1.duration
                          retQualificationsEducationValueResearchValueO1FundingValueO1.role = entityQualificationsEducationItemResearchItemI1FundingItemI1.role
                          retQualificationsEducationValueResearchValueO1FundingValueO1.status = entityQualificationsEducationItemResearchItemI1FundingItemI1.status
                        }
                        retQualificationsEducationValueResearchValueO1FundingValue = retQualificationsEducationValueResearchValueO1FundingValueO1
                        let entityQualificationsEducationItemResearchItemI1FundingItemI2 = entityQualificationsEducationItemResearchItemI1FundingItem as IndustryFunding
                        let retQualificationsEducationValueResearchValueO1FundingValueO2 = retQualificationsEducationValueResearchValueO1FundingValue
                        if (entityQualificationsEducationItemResearchItemI1FundingItemI2) {
                          retQualificationsEducationValueResearchValueO1FundingValueO2 = (retQualificationsEducationValueResearchValueO1FundingValueO2 ? retQualificationsEducationValueResearchValueO1FundingValueO2 : {})
                          retQualificationsEducationValueResearchValueO1FundingValueO2.type = entityQualificationsEducationItemResearchItemI1FundingItemI2.type
                          retQualificationsEducationValueResearchValueO1FundingValueO2.company = entityQualificationsEducationItemResearchItemI1FundingItemI2.company
                          retQualificationsEducationValueResearchValueO1FundingValueO2.amount = entityQualificationsEducationItemResearchItemI1FundingItemI2.amount
                          retQualificationsEducationValueResearchValueO1FundingValueO2.purpose = entityQualificationsEducationItemResearchItemI1FundingItemI2.purpose
                          retQualificationsEducationValueResearchValueO1FundingValueO2.conflictOfInterest = entityQualificationsEducationItemResearchItemI1FundingItemI2.conflictOfInterest
                        }
                        retQualificationsEducationValueResearchValueO1FundingValue = retQualificationsEducationValueResearchValueO1FundingValueO2
                        let entityQualificationsEducationItemResearchItemI1FundingItemI3 = entityQualificationsEducationItemResearchItemI1FundingItem as FoundationFunding
                        let retQualificationsEducationValueResearchValueO1FundingValueO3 = retQualificationsEducationValueResearchValueO1FundingValue
                        if (entityQualificationsEducationItemResearchItemI1FundingItemI3) {
                          retQualificationsEducationValueResearchValueO1FundingValueO3 = (retQualificationsEducationValueResearchValueO1FundingValueO3 ? retQualificationsEducationValueResearchValueO1FundingValueO3 : {})
                          retQualificationsEducationValueResearchValueO1FundingValueO3.type = entityQualificationsEducationItemResearchItemI1FundingItemI3.type
                          retQualificationsEducationValueResearchValueO1FundingValueO3.foundation = entityQualificationsEducationItemResearchItemI1FundingItemI3.foundation
                          retQualificationsEducationValueResearchValueO1FundingValueO3.amount = entityQualificationsEducationItemResearchItemI1FundingItemI3.amount
                          retQualificationsEducationValueResearchValueO1FundingValueO3.focus = entityQualificationsEducationItemResearchItemI1FundingItemI3.focus
                          if (entityQualificationsEducationItemResearchItemI1FundingItemI3.requirements) {
                            retQualificationsEducationValueResearchValueO1FundingValueO3.requirements = []
                            for (let entityQualificationsEducationItemResearchItemI1FundingItemI3RequirementsItem of entityQualificationsEducationItemResearchItemI1FundingItemI3.requirements) {
                              let retQualificationsEducationValueResearchValueO1FundingValueO3RequirementsValue: any
                              retQualificationsEducationValueResearchValueO1FundingValueO3RequirementsValue = entityQualificationsEducationItemResearchItemI1FundingItemI3RequirementsItem
                              retQualificationsEducationValueResearchValueO1FundingValueO3.requirements.push(retQualificationsEducationValueResearchValueO1FundingValueO3RequirementsValue)
                            }
                          }
                        }
                        retQualificationsEducationValueResearchValueO1FundingValue = retQualificationsEducationValueResearchValueO1FundingValueO3
                        retQualificationsEducationValueResearchValueO1.funding.push(retQualificationsEducationValueResearchValueO1FundingValue)
                      }
                    }
                  }
                  retQualificationsEducationValueResearchValue = retQualificationsEducationValueResearchValueO1
                  let entityQualificationsEducationItemResearchItemI2 = entityQualificationsEducationItemResearchItem as BasicScienceResearch
                  let retQualificationsEducationValueResearchValueO2 = retQualificationsEducationValueResearchValue
                  if (entityQualificationsEducationItemResearchItemI2) {
                    retQualificationsEducationValueResearchValueO2 = (retQualificationsEducationValueResearchValueO2 ? retQualificationsEducationValueResearchValueO2 : {})
                    retQualificationsEducationValueResearchValueO2.type = entityQualificationsEducationItemResearchItemI2.type
                    retQualificationsEducationValueResearchValueO2.laboratory = entityQualificationsEducationItemResearchItemI2.laboratory
                    if (entityQualificationsEducationItemResearchItemI2.techniques) {
                      retQualificationsEducationValueResearchValueO2.techniques = []
                      for (let entityQualificationsEducationItemResearchItemI2TechniquesItem of entityQualificationsEducationItemResearchItemI2.techniques) {
                        let retQualificationsEducationValueResearchValueO2TechniquesValue: any
                        retQualificationsEducationValueResearchValueO2TechniquesValue = entityQualificationsEducationItemResearchItemI2TechniquesItem
                        retQualificationsEducationValueResearchValueO2.techniques.push(retQualificationsEducationValueResearchValueO2TechniquesValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI2.publications) {
                      retQualificationsEducationValueResearchValueO2.publications = []
                      for (let entityQualificationsEducationItemResearchItemI2PublicationsItem of entityQualificationsEducationItemResearchItemI2.publications) {
                        let retQualificationsEducationValueResearchValueO2PublicationsValue: any
                        retQualificationsEducationValueResearchValueO2PublicationsValue = entityQualificationsEducationItemResearchItemI2PublicationsItem
                        retQualificationsEducationValueResearchValueO2.publications.push(retQualificationsEducationValueResearchValueO2PublicationsValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI2.collaborations) {
                      retQualificationsEducationValueResearchValueO2.collaborations = []
                      for (let entityQualificationsEducationItemResearchItemI2CollaborationsItem of entityQualificationsEducationItemResearchItemI2.collaborations) {
                        let retQualificationsEducationValueResearchValueO2CollaborationsValue: any
                        retQualificationsEducationValueResearchValueO2CollaborationsValue = entityQualificationsEducationItemResearchItemI2CollaborationsItem
                        retQualificationsEducationValueResearchValueO2.collaborations.push(retQualificationsEducationValueResearchValueO2CollaborationsValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI2.equipment) {
                      retQualificationsEducationValueResearchValueO2.equipment = []
                      for (let entityQualificationsEducationItemResearchItemI2EquipmentItem of entityQualificationsEducationItemResearchItemI2.equipment) {
                        let retQualificationsEducationValueResearchValueO2EquipmentValue: any
                        retQualificationsEducationValueResearchValueO2EquipmentValue = entityQualificationsEducationItemResearchItemI2EquipmentItem
                        retQualificationsEducationValueResearchValueO2.equipment.push(retQualificationsEducationValueResearchValueO2EquipmentValue)
                      }
                    }
                  }
                  retQualificationsEducationValueResearchValue = retQualificationsEducationValueResearchValueO2
                  let entityQualificationsEducationItemResearchItemI3 = entityQualificationsEducationItemResearchItem as TranslationalResearch
                  let retQualificationsEducationValueResearchValueO3 = retQualificationsEducationValueResearchValue
                  if (entityQualificationsEducationItemResearchItemI3) {
                    retQualificationsEducationValueResearchValueO3 = (retQualificationsEducationValueResearchValueO3 ? retQualificationsEducationValueResearchValueO3 : {})
                    retQualificationsEducationValueResearchValueO3.type = entityQualificationsEducationItemResearchItemI3.type
                    retQualificationsEducationValueResearchValueO3.benchToBedside = entityQualificationsEducationItemResearchItemI3.benchToBedside
                    if (entityQualificationsEducationItemResearchItemI3.clinicalApplications) {
                      retQualificationsEducationValueResearchValueO3.clinicalApplications = []
                      for (let entityQualificationsEducationItemResearchItemI3ClinicalApplicationsItem of entityQualificationsEducationItemResearchItemI3.clinicalApplications) {
                        let retQualificationsEducationValueResearchValueO3ClinicalApplicationsValue: any
                        retQualificationsEducationValueResearchValueO3ClinicalApplicationsValue = entityQualificationsEducationItemResearchItemI3ClinicalApplicationsItem
                        retQualificationsEducationValueResearchValueO3.clinicalApplications.push(retQualificationsEducationValueResearchValueO3ClinicalApplicationsValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI3.industryPartnerships) {
                      retQualificationsEducationValueResearchValueO3.industryPartnerships = []
                      for (let entityQualificationsEducationItemResearchItemI3IndustryPartnershipsItem of entityQualificationsEducationItemResearchItemI3.industryPartnerships) {
                        let retQualificationsEducationValueResearchValueO3IndustryPartnershipsValue: any
                        retQualificationsEducationValueResearchValueO3IndustryPartnershipsValue = entityQualificationsEducationItemResearchItemI3IndustryPartnershipsItem
                        retQualificationsEducationValueResearchValueO3.industryPartnerships.push(retQualificationsEducationValueResearchValueO3IndustryPartnershipsValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI3.patents) {
                      retQualificationsEducationValueResearchValueO3.patents = []
                      for (let entityQualificationsEducationItemResearchItemI3PatentsItem of entityQualificationsEducationItemResearchItemI3.patents) {
                        let retQualificationsEducationValueResearchValueO3PatentsValue: any
                        retQualificationsEducationValueResearchValueO3PatentsValue = entityQualificationsEducationItemResearchItemI3PatentsItem
                        retQualificationsEducationValueResearchValueO3.patents.push(retQualificationsEducationValueResearchValueO3PatentsValue)
                      }
                    }
                  }
                  retQualificationsEducationValueResearchValue = retQualificationsEducationValueResearchValueO3
                  let entityQualificationsEducationItemResearchItemI4 = entityQualificationsEducationItemResearchItem as EpidemiologicalResearch
                  let retQualificationsEducationValueResearchValueO4 = retQualificationsEducationValueResearchValue
                  if (entityQualificationsEducationItemResearchItemI4) {
                    retQualificationsEducationValueResearchValueO4 = (retQualificationsEducationValueResearchValueO4 ? retQualificationsEducationValueResearchValueO4 : {})
                    retQualificationsEducationValueResearchValueO4.type = entityQualificationsEducationItemResearchItemI4.type
                    retQualificationsEducationValueResearchValueO4.populationSize = entityQualificationsEducationItemResearchItemI4.populationSize
                    retQualificationsEducationValueResearchValueO4.studyDesign = entityQualificationsEducationItemResearchItemI4.studyDesign
                    if (entityQualificationsEducationItemResearchItemI4.statisticalMethods) {
                      retQualificationsEducationValueResearchValueO4.statisticalMethods = []
                      for (let entityQualificationsEducationItemResearchItemI4StatisticalMethodsItem of entityQualificationsEducationItemResearchItemI4.statisticalMethods) {
                        let retQualificationsEducationValueResearchValueO4StatisticalMethodsValue: any
                        retQualificationsEducationValueResearchValueO4StatisticalMethodsValue = entityQualificationsEducationItemResearchItemI4StatisticalMethodsItem
                        retQualificationsEducationValueResearchValueO4.statisticalMethods.push(retQualificationsEducationValueResearchValueO4StatisticalMethodsValue)
                      }
                    }
                    if (entityQualificationsEducationItemResearchItemI4.dataSources) {
                      retQualificationsEducationValueResearchValueO4.dataSources = []
                      for (let entityQualificationsEducationItemResearchItemI4DataSourcesItem of entityQualificationsEducationItemResearchItemI4.dataSources) {
                        let retQualificationsEducationValueResearchValueO4DataSourcesValue: any
                        retQualificationsEducationValueResearchValueO4DataSourcesValue = entityQualificationsEducationItemResearchItemI4DataSourcesItem
                        retQualificationsEducationValueResearchValueO4.dataSources.push(retQualificationsEducationValueResearchValueO4DataSourcesValue)
                      }
                    }
                  }
                  retQualificationsEducationValueResearchValue = retQualificationsEducationValueResearchValueO4
                  retQualificationsEducationValue.research.push(retQualificationsEducationValueResearchValue)
                }
              }
              if (entityQualificationsEducationItem.activities) {
                retQualificationsEducationValue.activities = []
                for (let entityQualificationsEducationItemActivitiesItem of entityQualificationsEducationItem.activities) {
                  let retQualificationsEducationValueActivitiesValue: any
                  let entityQualificationsEducationItemActivitiesItemI1 = entityQualificationsEducationItemActivitiesItem as LeadershipActivity
                  let retQualificationsEducationValueActivitiesValueO1 = retQualificationsEducationValueActivitiesValue
                  if (entityQualificationsEducationItemActivitiesItemI1) {
                    retQualificationsEducationValueActivitiesValueO1 = (retQualificationsEducationValueActivitiesValueO1 ? retQualificationsEducationValueActivitiesValueO1 : {})
                    retQualificationsEducationValueActivitiesValueO1.type = entityQualificationsEducationItemActivitiesItemI1.type
                    retQualificationsEducationValueActivitiesValueO1.position = entityQualificationsEducationItemActivitiesItemI1.position
                    retQualificationsEducationValueActivitiesValueO1.organization = entityQualificationsEducationItemActivitiesItemI1.organization
                    retQualificationsEducationValueActivitiesValueO1.teamSize = entityQualificationsEducationItemActivitiesItemI1.teamSize
                    retQualificationsEducationValueActivitiesValueO1.budget = entityQualificationsEducationItemActivitiesItemI1.budget
                    if (entityQualificationsEducationItemActivitiesItemI1.achievements) {
                      retQualificationsEducationValueActivitiesValueO1.achievements = []
                      for (let entityQualificationsEducationItemActivitiesItemI1AchievementsItem of entityQualificationsEducationItemActivitiesItemI1.achievements) {
                        let retQualificationsEducationValueActivitiesValueO1AchievementsValue: any
                        retQualificationsEducationValueActivitiesValueO1AchievementsValue = entityQualificationsEducationItemActivitiesItemI1AchievementsItem
                        retQualificationsEducationValueActivitiesValueO1.achievements.push(retQualificationsEducationValueActivitiesValueO1AchievementsValue)
                      }
                    }
                  }
                  retQualificationsEducationValueActivitiesValue = retQualificationsEducationValueActivitiesValueO1
                  let entityQualificationsEducationItemActivitiesItemI2 = entityQualificationsEducationItemActivitiesItem as ServiceActivity
                  let retQualificationsEducationValueActivitiesValueO2 = retQualificationsEducationValueActivitiesValue
                  if (entityQualificationsEducationItemActivitiesItemI2) {
                    retQualificationsEducationValueActivitiesValueO2 = (retQualificationsEducationValueActivitiesValueO2 ? retQualificationsEducationValueActivitiesValueO2 : {})
                    retQualificationsEducationValueActivitiesValueO2.type = entityQualificationsEducationItemActivitiesItemI2.type
                    retQualificationsEducationValueActivitiesValueO2.service = entityQualificationsEducationItemActivitiesItemI2.service
                    retQualificationsEducationValueActivitiesValueO2.population = entityQualificationsEducationItemActivitiesItemI2.population
                    retQualificationsEducationValueActivitiesValueO2.hours = entityQualificationsEducationItemActivitiesItemI2.hours
                    retQualificationsEducationValueActivitiesValueO2.impact = entityQualificationsEducationItemActivitiesItemI2.impact
                    retQualificationsEducationValueActivitiesValueO2.recognition = entityQualificationsEducationItemActivitiesItemI2.recognition
                  }
                  retQualificationsEducationValueActivitiesValue = retQualificationsEducationValueActivitiesValueO2
                  let entityQualificationsEducationItemActivitiesItemI3 = entityQualificationsEducationItemActivitiesItem as ResearchActivity
                  let retQualificationsEducationValueActivitiesValueO3 = retQualificationsEducationValueActivitiesValue
                  if (entityQualificationsEducationItemActivitiesItemI3) {
                    retQualificationsEducationValueActivitiesValueO3 = (retQualificationsEducationValueActivitiesValueO3 ? retQualificationsEducationValueActivitiesValueO3 : {})
                    retQualificationsEducationValueActivitiesValueO3.type = entityQualificationsEducationItemActivitiesItemI3.type
                    if (entityQualificationsEducationItemActivitiesItemI3.research) {
                      retQualificationsEducationValueActivitiesValueO3.research = []
                      for (let entityQualificationsEducationItemActivitiesItemI3ResearchItem of entityQualificationsEducationItemActivitiesItemI3.research) {
                        let retQualificationsEducationValueActivitiesValueO3ResearchValue: any
                        let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1 = entityQualificationsEducationItemActivitiesItemI3ResearchItem as ClinicalResearch
                        let retQualificationsEducationValueActivitiesValueO3ResearchValueO1 = retQualificationsEducationValueActivitiesValueO3ResearchValue
                        if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1) {
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO1 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO1 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO1 : {})
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO1.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.type
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO1.trialPhase = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.trialPhase
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO1.patientCount = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.patientCount
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.outcomes) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO1.outcomes = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1OutcomesItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.outcomes) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO1OutcomesValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1OutcomesValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1OutcomesItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1.outcomes.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO1OutcomesValue)
                            }
                          }
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO1.regulatoryApproval = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.regulatoryApproval
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.funding) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO1.funding = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI1.funding) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue: any
                              let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1 = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItem as GrantFunding
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1 = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue
                              if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1) {
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1 : {})
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.type
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.source = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.source
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.amount = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.amount
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.duration = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.duration
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.role = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.role
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1.status = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI1.status
                              }
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO1
                              let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2 = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItem as IndustryFunding
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2 = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue
                              if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2) {
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2 : {})
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2.type
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2.company = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2.company
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2.amount = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2.amount
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2.purpose = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2.purpose
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2.conflictOfInterest = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI2.conflictOfInterest
                              }
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO2
                              let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3 = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItem as FoundationFunding
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3 = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue
                              if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3) {
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3 : {})
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.type
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.foundation = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.foundation
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.amount = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.amount
                                retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.focus = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.focus
                                if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.requirements) {
                                  retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.requirements = []
                                  for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3RequirementsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3.requirements) {
                                    let retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3RequirementsValue: any
                                    retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3RequirementsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI1FundingItemI3RequirementsItem
                                    retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3.requirements.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3RequirementsValue)
                                  }
                                }
                              }
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValueO3
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO1.funding.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO1FundingValue)
                            }
                          }
                        }
                        retQualificationsEducationValueActivitiesValueO3ResearchValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO1
                        let entityQualificationsEducationItemActivitiesItemI3ResearchItemI2 = entityQualificationsEducationItemActivitiesItemI3ResearchItem as BasicScienceResearch
                        let retQualificationsEducationValueActivitiesValueO3ResearchValueO2 = retQualificationsEducationValueActivitiesValueO3ResearchValue
                        if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI2) {
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO2 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO2 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO2 : {})
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO2.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.type
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO2.laboratory = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.laboratory
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.techniques) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO2.techniques = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI2TechniquesItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.techniques) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO2TechniquesValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2TechniquesValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2TechniquesItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2.techniques.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO2TechniquesValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.publications) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO2.publications = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI2PublicationsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.publications) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO2PublicationsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2PublicationsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2PublicationsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2.publications.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO2PublicationsValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.collaborations) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO2.collaborations = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI2CollaborationsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.collaborations) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO2CollaborationsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2CollaborationsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2CollaborationsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2.collaborations.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO2CollaborationsValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.equipment) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO2.equipment = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI2EquipmentItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI2.equipment) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO2EquipmentValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2EquipmentValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI2EquipmentItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO2.equipment.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO2EquipmentValue)
                            }
                          }
                        }
                        retQualificationsEducationValueActivitiesValueO3ResearchValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO2
                        let entityQualificationsEducationItemActivitiesItemI3ResearchItemI3 = entityQualificationsEducationItemActivitiesItemI3ResearchItem as TranslationalResearch
                        let retQualificationsEducationValueActivitiesValueO3ResearchValueO3 = retQualificationsEducationValueActivitiesValueO3ResearchValue
                        if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI3) {
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO3 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO3 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO3 : {})
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO3.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.type
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO3.benchToBedside = entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.benchToBedside
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.clinicalApplications) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO3.clinicalApplications = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI3ClinicalApplicationsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.clinicalApplications) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO3ClinicalApplicationsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3ClinicalApplicationsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI3ClinicalApplicationsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3.clinicalApplications.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO3ClinicalApplicationsValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.industryPartnerships) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO3.industryPartnerships = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI3IndustryPartnershipsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.industryPartnerships) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO3IndustryPartnershipsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3IndustryPartnershipsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI3IndustryPartnershipsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3.industryPartnerships.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO3IndustryPartnershipsValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.patents) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO3.patents = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI3PatentsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI3.patents) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO3PatentsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3PatentsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI3PatentsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO3.patents.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO3PatentsValue)
                            }
                          }
                        }
                        retQualificationsEducationValueActivitiesValueO3ResearchValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO3
                        let entityQualificationsEducationItemActivitiesItemI3ResearchItemI4 = entityQualificationsEducationItemActivitiesItemI3ResearchItem as EpidemiologicalResearch
                        let retQualificationsEducationValueActivitiesValueO3ResearchValueO4 = retQualificationsEducationValueActivitiesValueO3ResearchValue
                        if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI4) {
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO4 = (retQualificationsEducationValueActivitiesValueO3ResearchValueO4 ? retQualificationsEducationValueActivitiesValueO3ResearchValueO4 : {})
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO4.type = entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.type
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO4.populationSize = entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.populationSize
                          retQualificationsEducationValueActivitiesValueO3ResearchValueO4.studyDesign = entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.studyDesign
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.statisticalMethods) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO4.statisticalMethods = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI4StatisticalMethodsItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.statisticalMethods) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO4StatisticalMethodsValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO4StatisticalMethodsValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI4StatisticalMethodsItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO4.statisticalMethods.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO4StatisticalMethodsValue)
                            }
                          }
                          if (entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.dataSources) {
                            retQualificationsEducationValueActivitiesValueO3ResearchValueO4.dataSources = []
                            for (let entityQualificationsEducationItemActivitiesItemI3ResearchItemI4DataSourcesItem of entityQualificationsEducationItemActivitiesItemI3ResearchItemI4.dataSources) {
                              let retQualificationsEducationValueActivitiesValueO3ResearchValueO4DataSourcesValue: any
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO4DataSourcesValue = entityQualificationsEducationItemActivitiesItemI3ResearchItemI4DataSourcesItem
                              retQualificationsEducationValueActivitiesValueO3ResearchValueO4.dataSources.push(retQualificationsEducationValueActivitiesValueO3ResearchValueO4DataSourcesValue)
                            }
                          }
                        }
                        retQualificationsEducationValueActivitiesValueO3ResearchValue = retQualificationsEducationValueActivitiesValueO3ResearchValueO4
                        retQualificationsEducationValueActivitiesValueO3.research.push(retQualificationsEducationValueActivitiesValueO3ResearchValue)
                      }
                    }
                    if (entityQualificationsEducationItemActivitiesItemI3.publications) {
                      retQualificationsEducationValueActivitiesValueO3.publications = []
                      for (let entityQualificationsEducationItemActivitiesItemI3PublicationsItem of entityQualificationsEducationItemActivitiesItemI3.publications) {
                        let retQualificationsEducationValueActivitiesValueO3PublicationsValue: any
                        retQualificationsEducationValueActivitiesValueO3PublicationsValue = entityQualificationsEducationItemActivitiesItemI3PublicationsItem
                        retQualificationsEducationValueActivitiesValueO3.publications.push(retQualificationsEducationValueActivitiesValueO3PublicationsValue)
                      }
                    }
                    if (entityQualificationsEducationItemActivitiesItemI3.presentations) {
                      retQualificationsEducationValueActivitiesValueO3.presentations = []
                      for (let entityQualificationsEducationItemActivitiesItemI3PresentationsItem of entityQualificationsEducationItemActivitiesItemI3.presentations) {
                        let retQualificationsEducationValueActivitiesValueO3PresentationsValue: any
                        retQualificationsEducationValueActivitiesValueO3PresentationsValue = entityQualificationsEducationItemActivitiesItemI3PresentationsItem
                        retQualificationsEducationValueActivitiesValueO3.presentations.push(retQualificationsEducationValueActivitiesValueO3PresentationsValue)
                      }
                    }
                  }
                  retQualificationsEducationValueActivitiesValue = retQualificationsEducationValueActivitiesValueO3
                  let entityQualificationsEducationItemActivitiesItemI4 = entityQualificationsEducationItemActivitiesItem as EducationActivity
                  let retQualificationsEducationValueActivitiesValueO4 = retQualificationsEducationValueActivitiesValue
                  if (entityQualificationsEducationItemActivitiesItemI4) {
                    retQualificationsEducationValueActivitiesValueO4 = (retQualificationsEducationValueActivitiesValueO4 ? retQualificationsEducationValueActivitiesValueO4 : {})
                    retQualificationsEducationValueActivitiesValueO4.type = entityQualificationsEducationItemActivitiesItemI4.type
                    retQualificationsEducationValueActivitiesValueO4.role = entityQualificationsEducationItemActivitiesItemI4.role
                    retQualificationsEducationValueActivitiesValueO4.audience = entityQualificationsEducationItemActivitiesItemI4.audience
                    retQualificationsEducationValueActivitiesValueO4.hours = entityQualificationsEducationItemActivitiesItemI4.hours
                    if (entityQualificationsEducationItemActivitiesItemI4.evaluations) {
                      retQualificationsEducationValueActivitiesValueO4.evaluations = []
                      for (let entityQualificationsEducationItemActivitiesItemI4EvaluationsItem of entityQualificationsEducationItemActivitiesItemI4.evaluations) {
                        let retQualificationsEducationValueActivitiesValueO4EvaluationsValue: any
                        retQualificationsEducationValueActivitiesValueO4EvaluationsValue = entityQualificationsEducationItemActivitiesItemI4EvaluationsItem
                        retQualificationsEducationValueActivitiesValueO4.evaluations.push(retQualificationsEducationValueActivitiesValueO4EvaluationsValue)
                      }
                    }
                  }
                  retQualificationsEducationValueActivitiesValue = retQualificationsEducationValueActivitiesValueO4
                  retQualificationsEducationValue.activities.push(retQualificationsEducationValueActivitiesValue)
                }
              }
              retQualificationsEducationValue.isActive = entityQualificationsEducationItem.isActive
              retQualificationsEducationValue.createdAt = entityQualificationsEducationItem.createdAt
              retQualificationsEducationValue.updatedAt = entityQualificationsEducationItem.updatedAt
            }
            ret.qualifications.education.push(retQualificationsEducationValue)
          }
        }
        if (entity.qualifications.training) {
          ret.qualifications.training = []
          for (let entityQualificationsTrainingItem of entity.qualifications.training) {
            let retQualificationsTrainingValue: any
            if (entityQualificationsTrainingItem) {
              retQualificationsTrainingValue = (retQualificationsTrainingValue ? retQualificationsTrainingValue : {})
              retQualificationsTrainingValue.type = entityQualificationsTrainingItem.type
              retQualificationsTrainingValue.specialty = entityQualificationsTrainingItem.specialty
              retQualificationsTrainingValue.institution = entityQualificationsTrainingItem.institution
              retQualificationsTrainingValue.startDate = entityQualificationsTrainingItem.startDate
              retQualificationsTrainingValue.endDate = entityQualificationsTrainingItem.endDate
              retQualificationsTrainingValue.supervisor = entityQualificationsTrainingItem.supervisor
              if (entityQualificationsTrainingItem.program) {
                retQualificationsTrainingValue.program = (retQualificationsTrainingValue.program ? retQualificationsTrainingValue.program : {})
                retQualificationsTrainingValue.program.name = entityQualificationsTrainingItem.program.name
                retQualificationsTrainingValue.program.accreditation = entityQualificationsTrainingItem.program.accreditation
                retQualificationsTrainingValue.program.duration = entityQualificationsTrainingItem.program.duration
                retQualificationsTrainingValue.program.description = entityQualificationsTrainingItem.program.description
                if (entityQualificationsTrainingItem.program.requirements) {
                  retQualificationsTrainingValue.program.requirements = []
                  for (let entityQualificationsTrainingItemProgramRequirementsItem of entityQualificationsTrainingItem.program.requirements) {
                    let retQualificationsTrainingValueProgramRequirementsValue: any
                    retQualificationsTrainingValueProgramRequirementsValue = entityQualificationsTrainingItemProgramRequirementsItem
                    retQualificationsTrainingValue.program.requirements.push(retQualificationsTrainingValueProgramRequirementsValue)
                  }
                }
              }
              if (entityQualificationsTrainingItem.rotations) {
                retQualificationsTrainingValue.rotations = []
                for (let entityQualificationsTrainingItemRotationsItem of entityQualificationsTrainingItem.rotations) {
                  let retQualificationsTrainingValueRotationsValue: any
                  if (entityQualificationsTrainingItemRotationsItem) {
                    retQualificationsTrainingValueRotationsValue = (retQualificationsTrainingValueRotationsValue ? retQualificationsTrainingValueRotationsValue : {})
                    retQualificationsTrainingValueRotationsValue.department = entityQualificationsTrainingItemRotationsItem.department
                    retQualificationsTrainingValueRotationsValue.duration = entityQualificationsTrainingItemRotationsItem.duration
                    retQualificationsTrainingValueRotationsValue.supervisor = entityQualificationsTrainingItemRotationsItem.supervisor
                    if (entityQualificationsTrainingItemRotationsItem.responsibilities) {
                      retQualificationsTrainingValueRotationsValue.responsibilities = []
                      for (let entityQualificationsTrainingItemRotationsItemResponsibilitiesItem of entityQualificationsTrainingItemRotationsItem.responsibilities) {
                        let retQualificationsTrainingValueRotationsValueResponsibilitiesValue: any
                        retQualificationsTrainingValueRotationsValueResponsibilitiesValue = entityQualificationsTrainingItemRotationsItemResponsibilitiesItem
                        retQualificationsTrainingValueRotationsValue.responsibilities.push(retQualificationsTrainingValueRotationsValueResponsibilitiesValue)
                      }
                    }
                    retQualificationsTrainingValueRotationsValue.performance = entityQualificationsTrainingItemRotationsItem.performance
                    retQualificationsTrainingValueRotationsValue.startDate = entityQualificationsTrainingItemRotationsItem.startDate
                    retQualificationsTrainingValueRotationsValue.endDate = entityQualificationsTrainingItemRotationsItem.endDate
                  }
                  retQualificationsTrainingValue.rotations.push(retQualificationsTrainingValueRotationsValue)
                }
              }
              if (entityQualificationsTrainingItem.research) {
                retQualificationsTrainingValue.research = []
                for (let entityQualificationsTrainingItemResearchItem of entityQualificationsTrainingItem.research) {
                  let retQualificationsTrainingValueResearchValue: any
                  let entityQualificationsTrainingItemResearchItemI1 = entityQualificationsTrainingItemResearchItem as ClinicalResearch
                  let retQualificationsTrainingValueResearchValueO1 = retQualificationsTrainingValueResearchValue
                  if (entityQualificationsTrainingItemResearchItemI1) {
                    retQualificationsTrainingValueResearchValueO1 = (retQualificationsTrainingValueResearchValueO1 ? retQualificationsTrainingValueResearchValueO1 : {})
                    retQualificationsTrainingValueResearchValueO1.type = entityQualificationsTrainingItemResearchItemI1.type
                    retQualificationsTrainingValueResearchValueO1.trialPhase = entityQualificationsTrainingItemResearchItemI1.trialPhase
                    retQualificationsTrainingValueResearchValueO1.patientCount = entityQualificationsTrainingItemResearchItemI1.patientCount
                    if (entityQualificationsTrainingItemResearchItemI1.outcomes) {
                      retQualificationsTrainingValueResearchValueO1.outcomes = []
                      for (let entityQualificationsTrainingItemResearchItemI1OutcomesItem of entityQualificationsTrainingItemResearchItemI1.outcomes) {
                        let retQualificationsTrainingValueResearchValueO1OutcomesValue: any
                        retQualificationsTrainingValueResearchValueO1OutcomesValue = entityQualificationsTrainingItemResearchItemI1OutcomesItem
                        retQualificationsTrainingValueResearchValueO1.outcomes.push(retQualificationsTrainingValueResearchValueO1OutcomesValue)
                      }
                    }
                    retQualificationsTrainingValueResearchValueO1.regulatoryApproval = entityQualificationsTrainingItemResearchItemI1.regulatoryApproval
                    if (entityQualificationsTrainingItemResearchItemI1.funding) {
                      retQualificationsTrainingValueResearchValueO1.funding = []
                      for (let entityQualificationsTrainingItemResearchItemI1FundingItem of entityQualificationsTrainingItemResearchItemI1.funding) {
                        let retQualificationsTrainingValueResearchValueO1FundingValue: any
                        let entityQualificationsTrainingItemResearchItemI1FundingItemI1 = entityQualificationsTrainingItemResearchItemI1FundingItem as GrantFunding
                        let retQualificationsTrainingValueResearchValueO1FundingValueO1 = retQualificationsTrainingValueResearchValueO1FundingValue
                        if (entityQualificationsTrainingItemResearchItemI1FundingItemI1) {
                          retQualificationsTrainingValueResearchValueO1FundingValueO1 = (retQualificationsTrainingValueResearchValueO1FundingValueO1 ? retQualificationsTrainingValueResearchValueO1FundingValueO1 : {})
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.type = entityQualificationsTrainingItemResearchItemI1FundingItemI1.type
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.source = entityQualificationsTrainingItemResearchItemI1FundingItemI1.source
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.amount = entityQualificationsTrainingItemResearchItemI1FundingItemI1.amount
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.duration = entityQualificationsTrainingItemResearchItemI1FundingItemI1.duration
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.role = entityQualificationsTrainingItemResearchItemI1FundingItemI1.role
                          retQualificationsTrainingValueResearchValueO1FundingValueO1.status = entityQualificationsTrainingItemResearchItemI1FundingItemI1.status
                        }
                        retQualificationsTrainingValueResearchValueO1FundingValue = retQualificationsTrainingValueResearchValueO1FundingValueO1
                        let entityQualificationsTrainingItemResearchItemI1FundingItemI2 = entityQualificationsTrainingItemResearchItemI1FundingItem as IndustryFunding
                        let retQualificationsTrainingValueResearchValueO1FundingValueO2 = retQualificationsTrainingValueResearchValueO1FundingValue
                        if (entityQualificationsTrainingItemResearchItemI1FundingItemI2) {
                          retQualificationsTrainingValueResearchValueO1FundingValueO2 = (retQualificationsTrainingValueResearchValueO1FundingValueO2 ? retQualificationsTrainingValueResearchValueO1FundingValueO2 : {})
                          retQualificationsTrainingValueResearchValueO1FundingValueO2.type = entityQualificationsTrainingItemResearchItemI1FundingItemI2.type
                          retQualificationsTrainingValueResearchValueO1FundingValueO2.company = entityQualificationsTrainingItemResearchItemI1FundingItemI2.company
                          retQualificationsTrainingValueResearchValueO1FundingValueO2.amount = entityQualificationsTrainingItemResearchItemI1FundingItemI2.amount
                          retQualificationsTrainingValueResearchValueO1FundingValueO2.purpose = entityQualificationsTrainingItemResearchItemI1FundingItemI2.purpose
                          retQualificationsTrainingValueResearchValueO1FundingValueO2.conflictOfInterest = entityQualificationsTrainingItemResearchItemI1FundingItemI2.conflictOfInterest
                        }
                        retQualificationsTrainingValueResearchValueO1FundingValue = retQualificationsTrainingValueResearchValueO1FundingValueO2
                        let entityQualificationsTrainingItemResearchItemI1FundingItemI3 = entityQualificationsTrainingItemResearchItemI1FundingItem as FoundationFunding
                        let retQualificationsTrainingValueResearchValueO1FundingValueO3 = retQualificationsTrainingValueResearchValueO1FundingValue
                        if (entityQualificationsTrainingItemResearchItemI1FundingItemI3) {
                          retQualificationsTrainingValueResearchValueO1FundingValueO3 = (retQualificationsTrainingValueResearchValueO1FundingValueO3 ? retQualificationsTrainingValueResearchValueO1FundingValueO3 : {})
                          retQualificationsTrainingValueResearchValueO1FundingValueO3.type = entityQualificationsTrainingItemResearchItemI1FundingItemI3.type
                          retQualificationsTrainingValueResearchValueO1FundingValueO3.foundation = entityQualificationsTrainingItemResearchItemI1FundingItemI3.foundation
                          retQualificationsTrainingValueResearchValueO1FundingValueO3.amount = entityQualificationsTrainingItemResearchItemI1FundingItemI3.amount
                          retQualificationsTrainingValueResearchValueO1FundingValueO3.focus = entityQualificationsTrainingItemResearchItemI1FundingItemI3.focus
                          if (entityQualificationsTrainingItemResearchItemI1FundingItemI3.requirements) {
                            retQualificationsTrainingValueResearchValueO1FundingValueO3.requirements = []
                            for (let entityQualificationsTrainingItemResearchItemI1FundingItemI3RequirementsItem of entityQualificationsTrainingItemResearchItemI1FundingItemI3.requirements) {
                              let retQualificationsTrainingValueResearchValueO1FundingValueO3RequirementsValue: any
                              retQualificationsTrainingValueResearchValueO1FundingValueO3RequirementsValue = entityQualificationsTrainingItemResearchItemI1FundingItemI3RequirementsItem
                              retQualificationsTrainingValueResearchValueO1FundingValueO3.requirements.push(retQualificationsTrainingValueResearchValueO1FundingValueO3RequirementsValue)
                            }
                          }
                        }
                        retQualificationsTrainingValueResearchValueO1FundingValue = retQualificationsTrainingValueResearchValueO1FundingValueO3
                        retQualificationsTrainingValueResearchValueO1.funding.push(retQualificationsTrainingValueResearchValueO1FundingValue)
                      }
                    }
                  }
                  retQualificationsTrainingValueResearchValue = retQualificationsTrainingValueResearchValueO1
                  let entityQualificationsTrainingItemResearchItemI2 = entityQualificationsTrainingItemResearchItem as BasicScienceResearch
                  let retQualificationsTrainingValueResearchValueO2 = retQualificationsTrainingValueResearchValue
                  if (entityQualificationsTrainingItemResearchItemI2) {
                    retQualificationsTrainingValueResearchValueO2 = (retQualificationsTrainingValueResearchValueO2 ? retQualificationsTrainingValueResearchValueO2 : {})
                    retQualificationsTrainingValueResearchValueO2.type = entityQualificationsTrainingItemResearchItemI2.type
                    retQualificationsTrainingValueResearchValueO2.laboratory = entityQualificationsTrainingItemResearchItemI2.laboratory
                    if (entityQualificationsTrainingItemResearchItemI2.techniques) {
                      retQualificationsTrainingValueResearchValueO2.techniques = []
                      for (let entityQualificationsTrainingItemResearchItemI2TechniquesItem of entityQualificationsTrainingItemResearchItemI2.techniques) {
                        let retQualificationsTrainingValueResearchValueO2TechniquesValue: any
                        retQualificationsTrainingValueResearchValueO2TechniquesValue = entityQualificationsTrainingItemResearchItemI2TechniquesItem
                        retQualificationsTrainingValueResearchValueO2.techniques.push(retQualificationsTrainingValueResearchValueO2TechniquesValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI2.publications) {
                      retQualificationsTrainingValueResearchValueO2.publications = []
                      for (let entityQualificationsTrainingItemResearchItemI2PublicationsItem of entityQualificationsTrainingItemResearchItemI2.publications) {
                        let retQualificationsTrainingValueResearchValueO2PublicationsValue: any
                        retQualificationsTrainingValueResearchValueO2PublicationsValue = entityQualificationsTrainingItemResearchItemI2PublicationsItem
                        retQualificationsTrainingValueResearchValueO2.publications.push(retQualificationsTrainingValueResearchValueO2PublicationsValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI2.collaborations) {
                      retQualificationsTrainingValueResearchValueO2.collaborations = []
                      for (let entityQualificationsTrainingItemResearchItemI2CollaborationsItem of entityQualificationsTrainingItemResearchItemI2.collaborations) {
                        let retQualificationsTrainingValueResearchValueO2CollaborationsValue: any
                        retQualificationsTrainingValueResearchValueO2CollaborationsValue = entityQualificationsTrainingItemResearchItemI2CollaborationsItem
                        retQualificationsTrainingValueResearchValueO2.collaborations.push(retQualificationsTrainingValueResearchValueO2CollaborationsValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI2.equipment) {
                      retQualificationsTrainingValueResearchValueO2.equipment = []
                      for (let entityQualificationsTrainingItemResearchItemI2EquipmentItem of entityQualificationsTrainingItemResearchItemI2.equipment) {
                        let retQualificationsTrainingValueResearchValueO2EquipmentValue: any
                        retQualificationsTrainingValueResearchValueO2EquipmentValue = entityQualificationsTrainingItemResearchItemI2EquipmentItem
                        retQualificationsTrainingValueResearchValueO2.equipment.push(retQualificationsTrainingValueResearchValueO2EquipmentValue)
                      }
                    }
                  }
                  retQualificationsTrainingValueResearchValue = retQualificationsTrainingValueResearchValueO2
                  let entityQualificationsTrainingItemResearchItemI3 = entityQualificationsTrainingItemResearchItem as TranslationalResearch
                  let retQualificationsTrainingValueResearchValueO3 = retQualificationsTrainingValueResearchValue
                  if (entityQualificationsTrainingItemResearchItemI3) {
                    retQualificationsTrainingValueResearchValueO3 = (retQualificationsTrainingValueResearchValueO3 ? retQualificationsTrainingValueResearchValueO3 : {})
                    retQualificationsTrainingValueResearchValueO3.type = entityQualificationsTrainingItemResearchItemI3.type
                    retQualificationsTrainingValueResearchValueO3.benchToBedside = entityQualificationsTrainingItemResearchItemI3.benchToBedside
                    if (entityQualificationsTrainingItemResearchItemI3.clinicalApplications) {
                      retQualificationsTrainingValueResearchValueO3.clinicalApplications = []
                      for (let entityQualificationsTrainingItemResearchItemI3ClinicalApplicationsItem of entityQualificationsTrainingItemResearchItemI3.clinicalApplications) {
                        let retQualificationsTrainingValueResearchValueO3ClinicalApplicationsValue: any
                        retQualificationsTrainingValueResearchValueO3ClinicalApplicationsValue = entityQualificationsTrainingItemResearchItemI3ClinicalApplicationsItem
                        retQualificationsTrainingValueResearchValueO3.clinicalApplications.push(retQualificationsTrainingValueResearchValueO3ClinicalApplicationsValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI3.industryPartnerships) {
                      retQualificationsTrainingValueResearchValueO3.industryPartnerships = []
                      for (let entityQualificationsTrainingItemResearchItemI3IndustryPartnershipsItem of entityQualificationsTrainingItemResearchItemI3.industryPartnerships) {
                        let retQualificationsTrainingValueResearchValueO3IndustryPartnershipsValue: any
                        retQualificationsTrainingValueResearchValueO3IndustryPartnershipsValue = entityQualificationsTrainingItemResearchItemI3IndustryPartnershipsItem
                        retQualificationsTrainingValueResearchValueO3.industryPartnerships.push(retQualificationsTrainingValueResearchValueO3IndustryPartnershipsValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI3.patents) {
                      retQualificationsTrainingValueResearchValueO3.patents = []
                      for (let entityQualificationsTrainingItemResearchItemI3PatentsItem of entityQualificationsTrainingItemResearchItemI3.patents) {
                        let retQualificationsTrainingValueResearchValueO3PatentsValue: any
                        retQualificationsTrainingValueResearchValueO3PatentsValue = entityQualificationsTrainingItemResearchItemI3PatentsItem
                        retQualificationsTrainingValueResearchValueO3.patents.push(retQualificationsTrainingValueResearchValueO3PatentsValue)
                      }
                    }
                  }
                  retQualificationsTrainingValueResearchValue = retQualificationsTrainingValueResearchValueO3
                  let entityQualificationsTrainingItemResearchItemI4 = entityQualificationsTrainingItemResearchItem as EpidemiologicalResearch
                  let retQualificationsTrainingValueResearchValueO4 = retQualificationsTrainingValueResearchValue
                  if (entityQualificationsTrainingItemResearchItemI4) {
                    retQualificationsTrainingValueResearchValueO4 = (retQualificationsTrainingValueResearchValueO4 ? retQualificationsTrainingValueResearchValueO4 : {})
                    retQualificationsTrainingValueResearchValueO4.type = entityQualificationsTrainingItemResearchItemI4.type
                    retQualificationsTrainingValueResearchValueO4.populationSize = entityQualificationsTrainingItemResearchItemI4.populationSize
                    retQualificationsTrainingValueResearchValueO4.studyDesign = entityQualificationsTrainingItemResearchItemI4.studyDesign
                    if (entityQualificationsTrainingItemResearchItemI4.statisticalMethods) {
                      retQualificationsTrainingValueResearchValueO4.statisticalMethods = []
                      for (let entityQualificationsTrainingItemResearchItemI4StatisticalMethodsItem of entityQualificationsTrainingItemResearchItemI4.statisticalMethods) {
                        let retQualificationsTrainingValueResearchValueO4StatisticalMethodsValue: any
                        retQualificationsTrainingValueResearchValueO4StatisticalMethodsValue = entityQualificationsTrainingItemResearchItemI4StatisticalMethodsItem
                        retQualificationsTrainingValueResearchValueO4.statisticalMethods.push(retQualificationsTrainingValueResearchValueO4StatisticalMethodsValue)
                      }
                    }
                    if (entityQualificationsTrainingItemResearchItemI4.dataSources) {
                      retQualificationsTrainingValueResearchValueO4.dataSources = []
                      for (let entityQualificationsTrainingItemResearchItemI4DataSourcesItem of entityQualificationsTrainingItemResearchItemI4.dataSources) {
                        let retQualificationsTrainingValueResearchValueO4DataSourcesValue: any
                        retQualificationsTrainingValueResearchValueO4DataSourcesValue = entityQualificationsTrainingItemResearchItemI4DataSourcesItem
                        retQualificationsTrainingValueResearchValueO4.dataSources.push(retQualificationsTrainingValueResearchValueO4DataSourcesValue)
                      }
                    }
                  }
                  retQualificationsTrainingValueResearchValue = retQualificationsTrainingValueResearchValueO4
                  retQualificationsTrainingValue.research.push(retQualificationsTrainingValueResearchValue)
                }
              }
              if (entityQualificationsTrainingItem.evaluations) {
                retQualificationsTrainingValue.evaluations = []
                for (let entityQualificationsTrainingItemEvaluationsItem of entityQualificationsTrainingItem.evaluations) {
                  let retQualificationsTrainingValueEvaluationsValue: any
                  let entityQualificationsTrainingItemEvaluationsItemI1 = entityQualificationsTrainingItemEvaluationsItem as ClinicalEvaluation
                  let retQualificationsTrainingValueEvaluationsValueO1 = retQualificationsTrainingValueEvaluationsValue
                  if (entityQualificationsTrainingItemEvaluationsItemI1) {
                    retQualificationsTrainingValueEvaluationsValueO1 = (retQualificationsTrainingValueEvaluationsValueO1 ? retQualificationsTrainingValueEvaluationsValueO1 : {})
                    retQualificationsTrainingValueEvaluationsValueO1.type = entityQualificationsTrainingItemEvaluationsItemI1.type
                    retQualificationsTrainingValueEvaluationsValueO1.patientCare = entityQualificationsTrainingItemEvaluationsItemI1.patientCare
                    retQualificationsTrainingValueEvaluationsValueO1.medicalKnowledge = entityQualificationsTrainingItemEvaluationsItemI1.medicalKnowledge
                    retQualificationsTrainingValueEvaluationsValueO1.practiceBasedLearning = entityQualificationsTrainingItemEvaluationsItemI1.practiceBasedLearning
                    retQualificationsTrainingValueEvaluationsValueO1.interpersonalSkills = entityQualificationsTrainingItemEvaluationsItemI1.interpersonalSkills
                    retQualificationsTrainingValueEvaluationsValueO1.professionalism = entityQualificationsTrainingItemEvaluationsItemI1.professionalism
                    retQualificationsTrainingValueEvaluationsValueO1.systemsBasedPractice = entityQualificationsTrainingItemEvaluationsItemI1.systemsBasedPractice
                  }
                  retQualificationsTrainingValueEvaluationsValue = retQualificationsTrainingValueEvaluationsValueO1
                  let entityQualificationsTrainingItemEvaluationsItemI2 = entityQualificationsTrainingItemEvaluationsItem as AcademicEvaluation
                  let retQualificationsTrainingValueEvaluationsValueO2 = retQualificationsTrainingValueEvaluationsValue
                  if (entityQualificationsTrainingItemEvaluationsItemI2) {
                    retQualificationsTrainingValueEvaluationsValueO2 = (retQualificationsTrainingValueEvaluationsValueO2 ? retQualificationsTrainingValueEvaluationsValueO2 : {})
                    retQualificationsTrainingValueEvaluationsValueO2.type = entityQualificationsTrainingItemEvaluationsItemI2.type
                    retQualificationsTrainingValueEvaluationsValueO2.teaching = entityQualificationsTrainingItemEvaluationsItemI2.teaching
                    retQualificationsTrainingValueEvaluationsValueO2.research = entityQualificationsTrainingItemEvaluationsItemI2.research
                    retQualificationsTrainingValueEvaluationsValueO2.service = entityQualificationsTrainingItemEvaluationsItemI2.service
                    retQualificationsTrainingValueEvaluationsValueO2.publications = entityQualificationsTrainingItemEvaluationsItemI2.publications
                    retQualificationsTrainingValueEvaluationsValueO2.grants = entityQualificationsTrainingItemEvaluationsItemI2.grants
                  }
                  retQualificationsTrainingValueEvaluationsValue = retQualificationsTrainingValueEvaluationsValueO2
                  let entityQualificationsTrainingItemEvaluationsItemI3 = entityQualificationsTrainingItemEvaluationsItem as AdministrativeEvaluation
                  let retQualificationsTrainingValueEvaluationsValueO3 = retQualificationsTrainingValueEvaluationsValue
                  if (entityQualificationsTrainingItemEvaluationsItemI3) {
                    retQualificationsTrainingValueEvaluationsValueO3 = (retQualificationsTrainingValueEvaluationsValueO3 ? retQualificationsTrainingValueEvaluationsValueO3 : {})
                    retQualificationsTrainingValueEvaluationsValueO3.type = entityQualificationsTrainingItemEvaluationsItemI3.type
                    retQualificationsTrainingValueEvaluationsValueO3.leadership = entityQualificationsTrainingItemEvaluationsItemI3.leadership
                    retQualificationsTrainingValueEvaluationsValueO3.management = entityQualificationsTrainingItemEvaluationsItemI3.management
                    retQualificationsTrainingValueEvaluationsValueO3.communication = entityQualificationsTrainingItemEvaluationsItemI3.communication
                    retQualificationsTrainingValueEvaluationsValueO3.decisionMaking = entityQualificationsTrainingItemEvaluationsItemI3.decisionMaking
                    retQualificationsTrainingValueEvaluationsValueO3.strategicPlanning = entityQualificationsTrainingItemEvaluationsItemI3.strategicPlanning
                  }
                  retQualificationsTrainingValueEvaluationsValue = retQualificationsTrainingValueEvaluationsValueO3
                  retQualificationsTrainingValue.evaluations.push(retQualificationsTrainingValueEvaluationsValue)
                }
              }
              retQualificationsTrainingValue.isActive = entityQualificationsTrainingItem.isActive
              retQualificationsTrainingValue.createdAt = entityQualificationsTrainingItem.createdAt
              retQualificationsTrainingValue.updatedAt = entityQualificationsTrainingItem.updatedAt
            }
            ret.qualifications.training.push(retQualificationsTrainingValue)
          }
        }
        if (entity.qualifications.certifications) {
          ret.qualifications.certifications = []
          for (let entityQualificationsCertificationsItem of entity.qualifications.certifications) {
            let retQualificationsCertificationsValue: any
            if (entityQualificationsCertificationsItem) {
              retQualificationsCertificationsValue = (retQualificationsCertificationsValue ? retQualificationsCertificationsValue : {})
              retQualificationsCertificationsValue.type = entityQualificationsCertificationsItem.type
              retQualificationsCertificationsValue.name = entityQualificationsCertificationsItem.name
              retQualificationsCertificationsValue.issuingBody = entityQualificationsCertificationsItem.issuingBody
              retQualificationsCertificationsValue.yearObtained = entityQualificationsCertificationsItem.yearObtained
              retQualificationsCertificationsValue.expiryDate = entityQualificationsCertificationsItem.expiryDate
              retQualificationsCertificationsValue.recertificationRequired = entityQualificationsCertificationsItem.recertificationRequired
              retQualificationsCertificationsValue.recertificationCycle = entityQualificationsCertificationsItem.recertificationCycle
              retQualificationsCertificationsValue.status = entityQualificationsCertificationsItem.status
              if (entityQualificationsCertificationsItem.requirements) {
                retQualificationsCertificationsValue.requirements = (retQualificationsCertificationsValue.requirements ? retQualificationsCertificationsValue.requirements : {})
                if (entityQualificationsCertificationsItem.requirements.education) {
                  retQualificationsCertificationsValue.requirements.education = []
                  for (let entityQualificationsCertificationsItemRequirementsEducationItem of entityQualificationsCertificationsItem.requirements.education) {
                    let retQualificationsCertificationsValueRequirementsEducationValue: any
                    retQualificationsCertificationsValueRequirementsEducationValue = entityQualificationsCertificationsItemRequirementsEducationItem
                    retQualificationsCertificationsValue.requirements.education.push(retQualificationsCertificationsValueRequirementsEducationValue)
                  }
                }
                if (entityQualificationsCertificationsItem.requirements.experience) {
                  retQualificationsCertificationsValue.requirements.experience = []
                  for (let entityQualificationsCertificationsItemRequirementsExperienceItem of entityQualificationsCertificationsItem.requirements.experience) {
                    let retQualificationsCertificationsValueRequirementsExperienceValue: any
                    retQualificationsCertificationsValueRequirementsExperienceValue = entityQualificationsCertificationsItemRequirementsExperienceItem
                    retQualificationsCertificationsValue.requirements.experience.push(retQualificationsCertificationsValueRequirementsExperienceValue)
                  }
                }
                if (entityQualificationsCertificationsItem.requirements.examination) {
                  retQualificationsCertificationsValue.requirements.examination = []
                  for (let entityQualificationsCertificationsItemRequirementsExaminationItem of entityQualificationsCertificationsItem.requirements.examination) {
                    let retQualificationsCertificationsValueRequirementsExaminationValue: any
                    retQualificationsCertificationsValueRequirementsExaminationValue = entityQualificationsCertificationsItemRequirementsExaminationItem
                    retQualificationsCertificationsValue.requirements.examination.push(retQualificationsCertificationsValueRequirementsExaminationValue)
                  }
                }
                retQualificationsCertificationsValue.requirements.continuingEducation = entityQualificationsCertificationsItem.requirements.continuingEducation
                retQualificationsCertificationsValue.requirements.caseLogs = entityQualificationsCertificationsItem.requirements.caseLogs
                retQualificationsCertificationsValue.requirements.timeInPractice = entityQualificationsCertificationsItem.requirements.timeInPractice
              }
              if (entityQualificationsCertificationsItem.verification) {
                retQualificationsCertificationsValue.verification = (retQualificationsCertificationsValue.verification ? retQualificationsCertificationsValue.verification : {})
                retQualificationsCertificationsValue.verification.verified = entityQualificationsCertificationsItem.verification.verified
                retQualificationsCertificationsValue.verification.verificationDate = entityQualificationsCertificationsItem.verification.verificationDate
                retQualificationsCertificationsValue.verification.verifier = entityQualificationsCertificationsItem.verification.verifier
                retQualificationsCertificationsValue.verification.notes = entityQualificationsCertificationsItem.verification.notes
                retQualificationsCertificationsValue.verification.method = entityQualificationsCertificationsItem.verification.method
              }
              if (entityQualificationsCertificationsItem.recertifications) {
                retQualificationsCertificationsValue.recertifications = []
                for (let entityQualificationsCertificationsItemRecertificationsItem of entityQualificationsCertificationsItem.recertifications) {
                  let retQualificationsCertificationsValueRecertificationsValue: any
                  if (entityQualificationsCertificationsItemRecertificationsItem) {
                    retQualificationsCertificationsValueRecertificationsValue = (retQualificationsCertificationsValueRecertificationsValue ? retQualificationsCertificationsValueRecertificationsValue : {})
                    retQualificationsCertificationsValueRecertificationsValue.date = entityQualificationsCertificationsItemRecertificationsItem.date
                    if (entityQualificationsCertificationsItemRecertificationsItem.requirements) {
                      retQualificationsCertificationsValueRecertificationsValue.requirements = []
                      for (let entityQualificationsCertificationsItemRecertificationsItemRequirementsItem of entityQualificationsCertificationsItemRecertificationsItem.requirements) {
                        let retQualificationsCertificationsValueRecertificationsValueRequirementsValue: any
                        retQualificationsCertificationsValueRecertificationsValueRequirementsValue = entityQualificationsCertificationsItemRecertificationsItemRequirementsItem
                        retQualificationsCertificationsValueRecertificationsValue.requirements.push(retQualificationsCertificationsValueRecertificationsValueRequirementsValue)
                      }
                    }
                    retQualificationsCertificationsValueRecertificationsValue.status = entityQualificationsCertificationsItemRecertificationsItem.status
                    retQualificationsCertificationsValueRecertificationsValue.notes = entityQualificationsCertificationsItemRecertificationsItem.notes
                    retQualificationsCertificationsValueRecertificationsValue.fees = entityQualificationsCertificationsItemRecertificationsItem.fees
                  }
                  retQualificationsCertificationsValue.recertifications.push(retQualificationsCertificationsValueRecertificationsValue)
                }
              }
              retQualificationsCertificationsValue.isActive = entityQualificationsCertificationsItem.isActive
              retQualificationsCertificationsValue.createdAt = entityQualificationsCertificationsItem.createdAt
              retQualificationsCertificationsValue.updatedAt = entityQualificationsCertificationsItem.updatedAt
            }
            ret.qualifications.certifications.push(retQualificationsCertificationsValue)
          }
        }
        if (entity.qualifications.licenses) {
          ret.qualifications.licenses = []
          for (let entityQualificationsLicensesItem of entity.qualifications.licenses) {
            let retQualificationsLicensesValue: any
            if (entityQualificationsLicensesItem) {
              retQualificationsLicensesValue = (retQualificationsLicensesValue ? retQualificationsLicensesValue : {})
              retQualificationsLicensesValue.type = entityQualificationsLicensesItem.type
              retQualificationsLicensesValue.number = entityQualificationsLicensesItem.number
              retQualificationsLicensesValue.issuingState = entityQualificationsLicensesItem.issuingState
              retQualificationsLicensesValue.issueDate = entityQualificationsLicensesItem.issueDate
              retQualificationsLicensesValue.expiryDate = entityQualificationsLicensesItem.expiryDate
              retQualificationsLicensesValue.status = entityQualificationsLicensesItem.status
              if (entityQualificationsLicensesItem.restrictions) {
                retQualificationsLicensesValue.restrictions = []
                for (let entityQualificationsLicensesItemRestrictionsItem of entityQualificationsLicensesItem.restrictions) {
                  let retQualificationsLicensesValueRestrictionsValue: any
                  retQualificationsLicensesValueRestrictionsValue = entityQualificationsLicensesItemRestrictionsItem
                  retQualificationsLicensesValue.restrictions.push(retQualificationsLicensesValueRestrictionsValue)
                }
              }
              if (entityQualificationsLicensesItem.renewals) {
                retQualificationsLicensesValue.renewals = []
                for (let entityQualificationsLicensesItemRenewalsItem of entityQualificationsLicensesItem.renewals) {
                  let retQualificationsLicensesValueRenewalsValue: any
                  if (entityQualificationsLicensesItemRenewalsItem) {
                    retQualificationsLicensesValueRenewalsValue = (retQualificationsLicensesValueRenewalsValue ? retQualificationsLicensesValueRenewalsValue : {})
                    retQualificationsLicensesValueRenewalsValue.date = entityQualificationsLicensesItemRenewalsItem.date
                    if (entityQualificationsLicensesItemRenewalsItem.requirements) {
                      retQualificationsLicensesValueRenewalsValue.requirements = []
                      for (let entityQualificationsLicensesItemRenewalsItemRequirementsItem of entityQualificationsLicensesItemRenewalsItem.requirements) {
                        let retQualificationsLicensesValueRenewalsValueRequirementsValue: any
                        retQualificationsLicensesValueRenewalsValueRequirementsValue = entityQualificationsLicensesItemRenewalsItemRequirementsItem
                        retQualificationsLicensesValueRenewalsValue.requirements.push(retQualificationsLicensesValueRenewalsValueRequirementsValue)
                      }
                    }
                    retQualificationsLicensesValueRenewalsValue.status = entityQualificationsLicensesItemRenewalsItem.status
                    retQualificationsLicensesValueRenewalsValue.fees = entityQualificationsLicensesItemRenewalsItem.fees
                    retQualificationsLicensesValueRenewalsValue.continuingEducation = entityQualificationsLicensesItemRenewalsItem.continuingEducation
                    retQualificationsLicensesValueRenewalsValue.applicationDate = entityQualificationsLicensesItemRenewalsItem.applicationDate
                  }
                  retQualificationsLicensesValue.renewals.push(retQualificationsLicensesValueRenewalsValue)
                }
              }
              if (entityQualificationsLicensesItem.disciplinaryActions) {
                retQualificationsLicensesValue.disciplinaryActions = []
                for (let entityQualificationsLicensesItemDisciplinaryActionsItem of entityQualificationsLicensesItem.disciplinaryActions) {
                  let retQualificationsLicensesValueDisciplinaryActionsValue: any
                  if (entityQualificationsLicensesItemDisciplinaryActionsItem) {
                    retQualificationsLicensesValueDisciplinaryActionsValue = (retQualificationsLicensesValueDisciplinaryActionsValue ? retQualificationsLicensesValueDisciplinaryActionsValue : {})
                    retQualificationsLicensesValueDisciplinaryActionsValue.date = entityQualificationsLicensesItemDisciplinaryActionsItem.date
                    retQualificationsLicensesValueDisciplinaryActionsValue.type = entityQualificationsLicensesItemDisciplinaryActionsItem.type
                    retQualificationsLicensesValueDisciplinaryActionsValue.description = entityQualificationsLicensesItemDisciplinaryActionsItem.description
                    retQualificationsLicensesValueDisciplinaryActionsValue.resolution = entityQualificationsLicensesItemDisciplinaryActionsItem.resolution
                    retQualificationsLicensesValueDisciplinaryActionsValue.impact = entityQualificationsLicensesItemDisciplinaryActionsItem.impact
                    retQualificationsLicensesValueDisciplinaryActionsValue.reportingBody = entityQualificationsLicensesItemDisciplinaryActionsItem.reportingBody
                  }
                  retQualificationsLicensesValue.disciplinaryActions.push(retQualificationsLicensesValueDisciplinaryActionsValue)
                }
              }
              if (entityQualificationsLicensesItem.verification) {
                retQualificationsLicensesValue.verification = (retQualificationsLicensesValue.verification ? retQualificationsLicensesValue.verification : {})
                retQualificationsLicensesValue.verification.verified = entityQualificationsLicensesItem.verification.verified
                retQualificationsLicensesValue.verification.verificationDate = entityQualificationsLicensesItem.verification.verificationDate
                retQualificationsLicensesValue.verification.verifier = entityQualificationsLicensesItem.verification.verifier
                retQualificationsLicensesValue.verification.notes = entityQualificationsLicensesItem.verification.notes
                retQualificationsLicensesValue.verification.method = entityQualificationsLicensesItem.verification.method
              }
              retQualificationsLicensesValue.isActive = entityQualificationsLicensesItem.isActive
              retQualificationsLicensesValue.createdAt = entityQualificationsLicensesItem.createdAt
              retQualificationsLicensesValue.updatedAt = entityQualificationsLicensesItem.updatedAt
            }
            ret.qualifications.licenses.push(retQualificationsLicensesValue)
          }
        }
        if (entity.qualifications.continuingEducation) {
          ret.qualifications.continuingEducation = []
          for (let entityQualificationsContinuingEducationItem of entity.qualifications.continuingEducation) {
            let retQualificationsContinuingEducationValue: any
            if (entityQualificationsContinuingEducationItem) {
              retQualificationsContinuingEducationValue = (retQualificationsContinuingEducationValue ? retQualificationsContinuingEducationValue : {})
              retQualificationsContinuingEducationValue.year = entityQualificationsContinuingEducationItem.year
              retQualificationsContinuingEducationValue.totalCredits = entityQualificationsContinuingEducationItem.totalCredits
              if (entityQualificationsContinuingEducationItem.activities) {
                retQualificationsContinuingEducationValue.activities = []
                for (let entityQualificationsContinuingEducationItemActivitiesItem of entityQualificationsContinuingEducationItem.activities) {
                  let retQualificationsContinuingEducationValueActivitiesValue: any
                  if (entityQualificationsContinuingEducationItemActivitiesItem) {
                    retQualificationsContinuingEducationValueActivitiesValue = (retQualificationsContinuingEducationValueActivitiesValue ? retQualificationsContinuingEducationValueActivitiesValue : {})
                    retQualificationsContinuingEducationValueActivitiesValue.type = entityQualificationsContinuingEducationItemActivitiesItem.type
                    retQualificationsContinuingEducationValueActivitiesValue.title = entityQualificationsContinuingEducationItemActivitiesItem.title
                    retQualificationsContinuingEducationValueActivitiesValue.credits = entityQualificationsContinuingEducationItemActivitiesItem.credits
                    retQualificationsContinuingEducationValueActivitiesValue.provider = entityQualificationsContinuingEducationItemActivitiesItem.provider
                    retQualificationsContinuingEducationValueActivitiesValue.date = entityQualificationsContinuingEducationItemActivitiesItem.date
                    retQualificationsContinuingEducationValueActivitiesValue.certificate = entityQualificationsContinuingEducationItemActivitiesItem.certificate
                    retQualificationsContinuingEducationValueActivitiesValue.category = entityQualificationsContinuingEducationItemActivitiesItem.category
                    retQualificationsContinuingEducationValueActivitiesValue.description = entityQualificationsContinuingEducationItemActivitiesItem.description
                    retQualificationsContinuingEducationValueActivitiesValue.location = entityQualificationsContinuingEducationItemActivitiesItem.location
                  }
                  retQualificationsContinuingEducationValue.activities.push(retQualificationsContinuingEducationValueActivitiesValue)
                }
              }
              if (entityQualificationsContinuingEducationItem.requirements) {
                retQualificationsContinuingEducationValue.requirements = (retQualificationsContinuingEducationValue.requirements ? retQualificationsContinuingEducationValue.requirements : {})
                retQualificationsContinuingEducationValue.requirements.totalRequired = entityQualificationsContinuingEducationItem.requirements.totalRequired
                if (entityQualificationsContinuingEducationItem.requirements.categories) {
                  retQualificationsContinuingEducationValue.requirements.categories = []
                  for (let entityQualificationsContinuingEducationItemRequirementsCategoriesItem of entityQualificationsContinuingEducationItem.requirements.categories) {
                    let retQualificationsContinuingEducationValueRequirementsCategoriesValue: any
                    if (entityQualificationsContinuingEducationItemRequirementsCategoriesItem) {
                      retQualificationsContinuingEducationValueRequirementsCategoriesValue = (retQualificationsContinuingEducationValueRequirementsCategoriesValue ? retQualificationsContinuingEducationValueRequirementsCategoriesValue : {})
                      retQualificationsContinuingEducationValueRequirementsCategoriesValue.category = entityQualificationsContinuingEducationItemRequirementsCategoriesItem.category
                      retQualificationsContinuingEducationValueRequirementsCategoriesValue.required = entityQualificationsContinuingEducationItemRequirementsCategoriesItem.required
                      retQualificationsContinuingEducationValueRequirementsCategoriesValue.completed = entityQualificationsContinuingEducationItemRequirementsCategoriesItem.completed
                      retQualificationsContinuingEducationValueRequirementsCategoriesValue.description = entityQualificationsContinuingEducationItemRequirementsCategoriesItem.description
                    }
                    retQualificationsContinuingEducationValue.requirements.categories.push(retQualificationsContinuingEducationValueRequirementsCategoriesValue)
                  }
                }
                retQualificationsContinuingEducationValue.requirements.deadline = entityQualificationsContinuingEducationItem.requirements.deadline
                retQualificationsContinuingEducationValue.requirements.gracePeriod = entityQualificationsContinuingEducationItem.requirements.gracePeriod
              }
              if (entityQualificationsContinuingEducationItem.compliance) {
                retQualificationsContinuingEducationValue.compliance = (retQualificationsContinuingEducationValue.compliance ? retQualificationsContinuingEducationValue.compliance : {})
                retQualificationsContinuingEducationValue.compliance.compliant = entityQualificationsContinuingEducationItem.compliance.compliant
                retQualificationsContinuingEducationValue.compliance.deficit = entityQualificationsContinuingEducationItem.compliance.deficit
                retQualificationsContinuingEducationValue.compliance.gracePeriod = entityQualificationsContinuingEducationItem.compliance.gracePeriod
                if (entityQualificationsContinuingEducationItem.compliance.warnings) {
                  retQualificationsContinuingEducationValue.compliance.warnings = []
                  for (let entityQualificationsContinuingEducationItemComplianceWarningsItem of entityQualificationsContinuingEducationItem.compliance.warnings) {
                    let retQualificationsContinuingEducationValueComplianceWarningsValue: any
                    retQualificationsContinuingEducationValueComplianceWarningsValue = entityQualificationsContinuingEducationItemComplianceWarningsItem
                    retQualificationsContinuingEducationValue.compliance.warnings.push(retQualificationsContinuingEducationValueComplianceWarningsValue)
                  }
                }
              }
              retQualificationsContinuingEducationValue.isActive = entityQualificationsContinuingEducationItem.isActive
              retQualificationsContinuingEducationValue.createdAt = entityQualificationsContinuingEducationItem.createdAt
              retQualificationsContinuingEducationValue.updatedAt = entityQualificationsContinuingEducationItem.updatedAt
            }
            ret.qualifications.continuingEducation.push(retQualificationsContinuingEducationValue)
          }
        }
        if (entity.qualifications.publications) {
          ret.qualifications.publications = []
          for (let entityQualificationsPublicationsItem of entity.qualifications.publications) {
            let retQualificationsPublicationsValue: any
            if (entityQualificationsPublicationsItem) {
              retQualificationsPublicationsValue = (retQualificationsPublicationsValue ? retQualificationsPublicationsValue : {})
              retQualificationsPublicationsValue.type = entityQualificationsPublicationsItem.type
              retQualificationsPublicationsValue.title = entityQualificationsPublicationsItem.title
              if (entityQualificationsPublicationsItem.authors) {
                retQualificationsPublicationsValue.authors = []
                for (let entityQualificationsPublicationsItemAuthorsItem of entityQualificationsPublicationsItem.authors) {
                  let retQualificationsPublicationsValueAuthorsValue: any
                  retQualificationsPublicationsValueAuthorsValue = entityQualificationsPublicationsItemAuthorsItem
                  retQualificationsPublicationsValue.authors.push(retQualificationsPublicationsValueAuthorsValue)
                }
              }
              retQualificationsPublicationsValue.journal = entityQualificationsPublicationsItem.journal
              retQualificationsPublicationsValue.book = entityQualificationsPublicationsItem.book
              retQualificationsPublicationsValue.conference = entityQualificationsPublicationsItem.conference
              retQualificationsPublicationsValue.year = entityQualificationsPublicationsItem.year
              retQualificationsPublicationsValue.doi = entityQualificationsPublicationsItem.doi
              if (entityQualificationsPublicationsItem.impact) {
                retQualificationsPublicationsValue.impact = (retQualificationsPublicationsValue.impact ? retQualificationsPublicationsValue.impact : {})
                retQualificationsPublicationsValue.impact.citations = entityQualificationsPublicationsItem.impact.citations
                retQualificationsPublicationsValue.impact.hIndex = entityQualificationsPublicationsItem.impact.hIndex
                retQualificationsPublicationsValue.impact.journalImpactFactor = entityQualificationsPublicationsItem.impact.journalImpactFactor
                retQualificationsPublicationsValue.impact.altmetrics = entityQualificationsPublicationsItem.impact.altmetrics
                retQualificationsPublicationsValue.impact.downloads = entityQualificationsPublicationsItem.impact.downloads
              }
              if (entityQualificationsPublicationsItem.details) {
                retQualificationsPublicationsValue.details = (retQualificationsPublicationsValue.details ? retQualificationsPublicationsValue.details : {})
                retQualificationsPublicationsValue.details.abstract = entityQualificationsPublicationsItem.details.abstract
                if (entityQualificationsPublicationsItem.details.keywords) {
                  retQualificationsPublicationsValue.details.keywords = []
                  for (let entityQualificationsPublicationsItemDetailsKeywordsItem of entityQualificationsPublicationsItem.details.keywords) {
                    let retQualificationsPublicationsValueDetailsKeywordsValue: any
                    retQualificationsPublicationsValueDetailsKeywordsValue = entityQualificationsPublicationsItemDetailsKeywordsItem
                    retQualificationsPublicationsValue.details.keywords.push(retQualificationsPublicationsValueDetailsKeywordsValue)
                  }
                }
                retQualificationsPublicationsValue.details.volume = entityQualificationsPublicationsItem.details.volume
                retQualificationsPublicationsValue.details.issue = entityQualificationsPublicationsItem.details.issue
                retQualificationsPublicationsValue.details.pages = entityQualificationsPublicationsItem.details.pages
                retQualificationsPublicationsValue.details.publisher = entityQualificationsPublicationsItem.details.publisher
                retQualificationsPublicationsValue.details.language = entityQualificationsPublicationsItem.details.language
              }
              retQualificationsPublicationsValue.isActive = entityQualificationsPublicationsItem.isActive
              retQualificationsPublicationsValue.createdAt = entityQualificationsPublicationsItem.createdAt
              retQualificationsPublicationsValue.updatedAt = entityQualificationsPublicationsItem.updatedAt
            }
            ret.qualifications.publications.push(retQualificationsPublicationsValue)
          }
        }
        if (entity.qualifications.awards) {
          ret.qualifications.awards = []
          for (let entityQualificationsAwardsItem of entity.qualifications.awards) {
            let retQualificationsAwardsValue: any
            if (entityQualificationsAwardsItem) {
              retQualificationsAwardsValue = (retQualificationsAwardsValue ? retQualificationsAwardsValue : {})
              retQualificationsAwardsValue.name = entityQualificationsAwardsItem.name
              retQualificationsAwardsValue.year = entityQualificationsAwardsItem.year
              retQualificationsAwardsValue.organization = entityQualificationsAwardsItem.organization
              retQualificationsAwardsValue.description = entityQualificationsAwardsItem.description
              retQualificationsAwardsValue.monetary = entityQualificationsAwardsItem.monetary
              retQualificationsAwardsValue.category = entityQualificationsAwardsItem.category
              if (entityQualificationsAwardsItem.details) {
                retQualificationsAwardsValue.details = (retQualificationsAwardsValue.details ? retQualificationsAwardsValue.details : {})
                retQualificationsAwardsValue.details.nominationProcess = entityQualificationsAwardsItem.details.nominationProcess
                if (entityQualificationsAwardsItem.details.selectionCriteria) {
                  retQualificationsAwardsValue.details.selectionCriteria = []
                  for (let entityQualificationsAwardsItemDetailsSelectionCriteriaItem of entityQualificationsAwardsItem.details.selectionCriteria) {
                    let retQualificationsAwardsValueDetailsSelectionCriteriaValue: any
                    retQualificationsAwardsValueDetailsSelectionCriteriaValue = entityQualificationsAwardsItemDetailsSelectionCriteriaItem
                    retQualificationsAwardsValue.details.selectionCriteria.push(retQualificationsAwardsValueDetailsSelectionCriteriaValue)
                  }
                }
                retQualificationsAwardsValue.details.significance = entityQualificationsAwardsItem.details.significance
                retQualificationsAwardsValue.details.recognition = entityQualificationsAwardsItem.details.recognition
                retQualificationsAwardsValue.details.ceremony = entityQualificationsAwardsItem.details.ceremony
                retQualificationsAwardsValue.details.location = entityQualificationsAwardsItem.details.location
              }
              if (entityQualificationsAwardsItem.verification) {
                retQualificationsAwardsValue.verification = (retQualificationsAwardsValue.verification ? retQualificationsAwardsValue.verification : {})
                retQualificationsAwardsValue.verification.verified = entityQualificationsAwardsItem.verification.verified
                retQualificationsAwardsValue.verification.verificationDate = entityQualificationsAwardsItem.verification.verificationDate
                retQualificationsAwardsValue.verification.verifier = entityQualificationsAwardsItem.verification.verifier
                retQualificationsAwardsValue.verification.notes = entityQualificationsAwardsItem.verification.notes
                retQualificationsAwardsValue.verification.method = entityQualificationsAwardsItem.verification.method
              }
              retQualificationsAwardsValue.isActive = entityQualificationsAwardsItem.isActive
              retQualificationsAwardsValue.createdAt = entityQualificationsAwardsItem.createdAt
              retQualificationsAwardsValue.updatedAt = entityQualificationsAwardsItem.updatedAt
            }
            ret.qualifications.awards.push(retQualificationsAwardsValue)
          }
        }
        if (entity.qualifications.memberships) {
          ret.qualifications.memberships = []
          for (let entityQualificationsMembershipsItem of entity.qualifications.memberships) {
            let retQualificationsMembershipsValue: any
            if (entityQualificationsMembershipsItem) {
              retQualificationsMembershipsValue = (retQualificationsMembershipsValue ? retQualificationsMembershipsValue : {})
              retQualificationsMembershipsValue.organization = entityQualificationsMembershipsItem.organization
              retQualificationsMembershipsValue.type = entityQualificationsMembershipsItem.type
              retQualificationsMembershipsValue.startDate = entityQualificationsMembershipsItem.startDate
              retQualificationsMembershipsValue.endDate = entityQualificationsMembershipsItem.endDate
              if (entityQualificationsMembershipsItem.roles) {
                retQualificationsMembershipsValue.roles = []
                for (let entityQualificationsMembershipsItemRolesItem of entityQualificationsMembershipsItem.roles) {
                  let retQualificationsMembershipsValueRolesValue: any
                  if (entityQualificationsMembershipsItemRolesItem) {
                    retQualificationsMembershipsValueRolesValue = (retQualificationsMembershipsValueRolesValue ? retQualificationsMembershipsValueRolesValue : {})
                    retQualificationsMembershipsValueRolesValue.position = entityQualificationsMembershipsItemRolesItem.position
                    retQualificationsMembershipsValueRolesValue.startDate = entityQualificationsMembershipsItemRolesItem.startDate
                    retQualificationsMembershipsValueRolesValue.endDate = entityQualificationsMembershipsItemRolesItem.endDate
                    retQualificationsMembershipsValueRolesValue.description = entityQualificationsMembershipsItemRolesItem.description
                    if (entityQualificationsMembershipsItemRolesItem.responsibilities) {
                      retQualificationsMembershipsValueRolesValue.responsibilities = []
                      for (let entityQualificationsMembershipsItemRolesItemResponsibilitiesItem of entityQualificationsMembershipsItemRolesItem.responsibilities) {
                        let retQualificationsMembershipsValueRolesValueResponsibilitiesValue: any
                        retQualificationsMembershipsValueRolesValueResponsibilitiesValue = entityQualificationsMembershipsItemRolesItemResponsibilitiesItem
                        retQualificationsMembershipsValueRolesValue.responsibilities.push(retQualificationsMembershipsValueRolesValueResponsibilitiesValue)
                      }
                    }
                  }
                  retQualificationsMembershipsValue.roles.push(retQualificationsMembershipsValueRolesValue)
                }
              }
              if (entityQualificationsMembershipsItem.committees) {
                retQualificationsMembershipsValue.committees = []
                for (let entityQualificationsMembershipsItemCommitteesItem of entityQualificationsMembershipsItem.committees) {
                  let retQualificationsMembershipsValueCommitteesValue: any
                  if (entityQualificationsMembershipsItemCommitteesItem) {
                    retQualificationsMembershipsValueCommitteesValue = (retQualificationsMembershipsValueCommitteesValue ? retQualificationsMembershipsValueCommitteesValue : {})
                    retQualificationsMembershipsValueCommitteesValue.name = entityQualificationsMembershipsItemCommitteesItem.name
                    retQualificationsMembershipsValueCommitteesValue.role = entityQualificationsMembershipsItemCommitteesItem.role
                    retQualificationsMembershipsValueCommitteesValue.startDate = entityQualificationsMembershipsItemCommitteesItem.startDate
                    retQualificationsMembershipsValueCommitteesValue.endDate = entityQualificationsMembershipsItemCommitteesItem.endDate
                    if (entityQualificationsMembershipsItemCommitteesItem.meetings) {
                      retQualificationsMembershipsValueCommitteesValue.meetings = []
                      for (let entityQualificationsMembershipsItemCommitteesItemMeetingsItem of entityQualificationsMembershipsItemCommitteesItem.meetings) {
                        let retQualificationsMembershipsValueCommitteesValueMeetingsValue: any
                        retQualificationsMembershipsValueCommitteesValueMeetingsValue = entityQualificationsMembershipsItemCommitteesItemMeetingsItem
                        retQualificationsMembershipsValueCommitteesValue.meetings.push(retQualificationsMembershipsValueCommitteesValueMeetingsValue)
                      }
                    }
                  }
                  retQualificationsMembershipsValue.committees.push(retQualificationsMembershipsValueCommitteesValue)
                }
              }
              if (entityQualificationsMembershipsItem.details) {
                retQualificationsMembershipsValue.details = (retQualificationsMembershipsValue.details ? retQualificationsMembershipsValue.details : {})
                if (entityQualificationsMembershipsItem.details.dues) {
                  retQualificationsMembershipsValue.details.dues = (retQualificationsMembershipsValue.details.dues ? retQualificationsMembershipsValue.details.dues : {})
                  retQualificationsMembershipsValue.details.dues.amount = entityQualificationsMembershipsItem.details.dues.amount
                  retQualificationsMembershipsValue.details.dues.frequency = entityQualificationsMembershipsItem.details.dues.frequency
                  retQualificationsMembershipsValue.details.dues.lastPaid = entityQualificationsMembershipsItem.details.dues.lastPaid
                  retQualificationsMembershipsValue.details.dues.nextDue = entityQualificationsMembershipsItem.details.dues.nextDue
                  retQualificationsMembershipsValue.details.dues.autoRenewal = entityQualificationsMembershipsItem.details.dues.autoRenewal
                }
                if (entityQualificationsMembershipsItem.details.benefits) {
                  retQualificationsMembershipsValue.details.benefits = []
                  for (let entityQualificationsMembershipsItemDetailsBenefitsItem of entityQualificationsMembershipsItem.details.benefits) {
                    let retQualificationsMembershipsValueDetailsBenefitsValue: any
                    retQualificationsMembershipsValueDetailsBenefitsValue = entityQualificationsMembershipsItemDetailsBenefitsItem
                    retQualificationsMembershipsValue.details.benefits.push(retQualificationsMembershipsValueDetailsBenefitsValue)
                  }
                }
                if (entityQualificationsMembershipsItem.details.requirements) {
                  retQualificationsMembershipsValue.details.requirements = []
                  for (let entityQualificationsMembershipsItemDetailsRequirementsItem of entityQualificationsMembershipsItem.details.requirements) {
                    let retQualificationsMembershipsValueDetailsRequirementsValue: any
                    retQualificationsMembershipsValueDetailsRequirementsValue = entityQualificationsMembershipsItemDetailsRequirementsItem
                    retQualificationsMembershipsValue.details.requirements.push(retQualificationsMembershipsValueDetailsRequirementsValue)
                  }
                }
                retQualificationsMembershipsValue.details.newsletter = entityQualificationsMembershipsItem.details.newsletter
                retQualificationsMembershipsValue.details.conferenceAccess = entityQualificationsMembershipsItem.details.conferenceAccess
              }
              retQualificationsMembershipsValue.isActive = entityQualificationsMembershipsItem.isActive
              retQualificationsMembershipsValue.createdAt = entityQualificationsMembershipsItem.createdAt
              retQualificationsMembershipsValue.updatedAt = entityQualificationsMembershipsItem.updatedAt
            }
            ret.qualifications.memberships.push(retQualificationsMembershipsValue)
          }
        }
        if (entity.qualifications.specializations) {
          ret.qualifications.specializations = []
          for (let entityQualificationsSpecializationsItem of entity.qualifications.specializations) {
            let retQualificationsSpecializationsValue: any
            if (entityQualificationsSpecializationsItem) {
              retQualificationsSpecializationsValue = (retQualificationsSpecializationsValue ? retQualificationsSpecializationsValue : {})
              retQualificationsSpecializationsValue.area = entityQualificationsSpecializationsItem.area
              retQualificationsSpecializationsValue.level = entityQualificationsSpecializationsItem.level
              if (entityQualificationsSpecializationsItem.certifications) {
                retQualificationsSpecializationsValue.certifications = []
                for (let entityQualificationsSpecializationsItemCertificationsItem of entityQualificationsSpecializationsItem.certifications) {
                  let retQualificationsSpecializationsValueCertificationsValue: any
                  if (entityQualificationsSpecializationsItemCertificationsItem) {
                    retQualificationsSpecializationsValueCertificationsValue = (retQualificationsSpecializationsValueCertificationsValue ? retQualificationsSpecializationsValueCertificationsValue : {})
                    retQualificationsSpecializationsValueCertificationsValue.type = entityQualificationsSpecializationsItemCertificationsItem.type
                    retQualificationsSpecializationsValueCertificationsValue.name = entityQualificationsSpecializationsItemCertificationsItem.name
                    retQualificationsSpecializationsValueCertificationsValue.issuingBody = entityQualificationsSpecializationsItemCertificationsItem.issuingBody
                    retQualificationsSpecializationsValueCertificationsValue.yearObtained = entityQualificationsSpecializationsItemCertificationsItem.yearObtained
                    retQualificationsSpecializationsValueCertificationsValue.expiryDate = entityQualificationsSpecializationsItemCertificationsItem.expiryDate
                    retQualificationsSpecializationsValueCertificationsValue.recertificationRequired = entityQualificationsSpecializationsItemCertificationsItem.recertificationRequired
                    retQualificationsSpecializationsValueCertificationsValue.recertificationCycle = entityQualificationsSpecializationsItemCertificationsItem.recertificationCycle
                    retQualificationsSpecializationsValueCertificationsValue.status = entityQualificationsSpecializationsItemCertificationsItem.status
                    if (entityQualificationsSpecializationsItemCertificationsItem.requirements) {
                      retQualificationsSpecializationsValueCertificationsValue.requirements = (retQualificationsSpecializationsValueCertificationsValue.requirements ? retQualificationsSpecializationsValueCertificationsValue.requirements : {})
                      if (entityQualificationsSpecializationsItemCertificationsItem.requirements.education) {
                        retQualificationsSpecializationsValueCertificationsValue.requirements.education = []
                        for (let entityQualificationsSpecializationsItemCertificationsItemRequirementsEducationItem of entityQualificationsSpecializationsItemCertificationsItem.requirements.education) {
                          let retQualificationsSpecializationsValueCertificationsValueRequirementsEducationValue: any
                          retQualificationsSpecializationsValueCertificationsValueRequirementsEducationValue = entityQualificationsSpecializationsItemCertificationsItemRequirementsEducationItem
                          retQualificationsSpecializationsValueCertificationsValue.requirements.education.push(retQualificationsSpecializationsValueCertificationsValueRequirementsEducationValue)
                        }
                      }
                      if (entityQualificationsSpecializationsItemCertificationsItem.requirements.experience) {
                        retQualificationsSpecializationsValueCertificationsValue.requirements.experience = []
                        for (let entityQualificationsSpecializationsItemCertificationsItemRequirementsExperienceItem of entityQualificationsSpecializationsItemCertificationsItem.requirements.experience) {
                          let retQualificationsSpecializationsValueCertificationsValueRequirementsExperienceValue: any
                          retQualificationsSpecializationsValueCertificationsValueRequirementsExperienceValue = entityQualificationsSpecializationsItemCertificationsItemRequirementsExperienceItem
                          retQualificationsSpecializationsValueCertificationsValue.requirements.experience.push(retQualificationsSpecializationsValueCertificationsValueRequirementsExperienceValue)
                        }
                      }
                      if (entityQualificationsSpecializationsItemCertificationsItem.requirements.examination) {
                        retQualificationsSpecializationsValueCertificationsValue.requirements.examination = []
                        for (let entityQualificationsSpecializationsItemCertificationsItemRequirementsExaminationItem of entityQualificationsSpecializationsItemCertificationsItem.requirements.examination) {
                          let retQualificationsSpecializationsValueCertificationsValueRequirementsExaminationValue: any
                          retQualificationsSpecializationsValueCertificationsValueRequirementsExaminationValue = entityQualificationsSpecializationsItemCertificationsItemRequirementsExaminationItem
                          retQualificationsSpecializationsValueCertificationsValue.requirements.examination.push(retQualificationsSpecializationsValueCertificationsValueRequirementsExaminationValue)
                        }
                      }
                      retQualificationsSpecializationsValueCertificationsValue.requirements.continuingEducation = entityQualificationsSpecializationsItemCertificationsItem.requirements.continuingEducation
                      retQualificationsSpecializationsValueCertificationsValue.requirements.caseLogs = entityQualificationsSpecializationsItemCertificationsItem.requirements.caseLogs
                      retQualificationsSpecializationsValueCertificationsValue.requirements.timeInPractice = entityQualificationsSpecializationsItemCertificationsItem.requirements.timeInPractice
                    }
                    if (entityQualificationsSpecializationsItemCertificationsItem.verification) {
                      retQualificationsSpecializationsValueCertificationsValue.verification = (retQualificationsSpecializationsValueCertificationsValue.verification ? retQualificationsSpecializationsValueCertificationsValue.verification : {})
                      retQualificationsSpecializationsValueCertificationsValue.verification.verified = entityQualificationsSpecializationsItemCertificationsItem.verification.verified
                      retQualificationsSpecializationsValueCertificationsValue.verification.verificationDate = entityQualificationsSpecializationsItemCertificationsItem.verification.verificationDate
                      retQualificationsSpecializationsValueCertificationsValue.verification.verifier = entityQualificationsSpecializationsItemCertificationsItem.verification.verifier
                      retQualificationsSpecializationsValueCertificationsValue.verification.notes = entityQualificationsSpecializationsItemCertificationsItem.verification.notes
                      retQualificationsSpecializationsValueCertificationsValue.verification.method = entityQualificationsSpecializationsItemCertificationsItem.verification.method
                    }
                    if (entityQualificationsSpecializationsItemCertificationsItem.recertifications) {
                      retQualificationsSpecializationsValueCertificationsValue.recertifications = []
                      for (let entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem of entityQualificationsSpecializationsItemCertificationsItem.recertifications) {
                        let retQualificationsSpecializationsValueCertificationsValueRecertificationsValue: any
                        if (entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem) {
                          retQualificationsSpecializationsValueCertificationsValueRecertificationsValue = (retQualificationsSpecializationsValueCertificationsValueRecertificationsValue ? retQualificationsSpecializationsValueCertificationsValueRecertificationsValue : {})
                          retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.date = entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.date
                          if (entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.requirements) {
                            retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.requirements = []
                            for (let entityQualificationsSpecializationsItemCertificationsItemRecertificationsItemRequirementsItem of entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.requirements) {
                              let retQualificationsSpecializationsValueCertificationsValueRecertificationsValueRequirementsValue: any
                              retQualificationsSpecializationsValueCertificationsValueRecertificationsValueRequirementsValue = entityQualificationsSpecializationsItemCertificationsItemRecertificationsItemRequirementsItem
                              retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.requirements.push(retQualificationsSpecializationsValueCertificationsValueRecertificationsValueRequirementsValue)
                            }
                          }
                          retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.status = entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.status
                          retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.notes = entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.notes
                          retQualificationsSpecializationsValueCertificationsValueRecertificationsValue.fees = entityQualificationsSpecializationsItemCertificationsItemRecertificationsItem.fees
                        }
                        retQualificationsSpecializationsValueCertificationsValue.recertifications.push(retQualificationsSpecializationsValueCertificationsValueRecertificationsValue)
                      }
                    }
                    retQualificationsSpecializationsValueCertificationsValue.isActive = entityQualificationsSpecializationsItemCertificationsItem.isActive
                    retQualificationsSpecializationsValueCertificationsValue.createdAt = entityQualificationsSpecializationsItemCertificationsItem.createdAt
                    retQualificationsSpecializationsValueCertificationsValue.updatedAt = entityQualificationsSpecializationsItemCertificationsItem.updatedAt
                  }
                  retQualificationsSpecializationsValue.certifications.push(retQualificationsSpecializationsValueCertificationsValue)
                }
              }
              if (entityQualificationsSpecializationsItem.experience) {
                retQualificationsSpecializationsValue.experience = (retQualificationsSpecializationsValue.experience ? retQualificationsSpecializationsValue.experience : {})
                retQualificationsSpecializationsValue.experience.years = entityQualificationsSpecializationsItem.experience.years
                retQualificationsSpecializationsValue.experience.caseCount = entityQualificationsSpecializationsItem.experience.caseCount
                if (entityQualificationsSpecializationsItem.experience.procedures) {
                  retQualificationsSpecializationsValue.experience.procedures = []
                  for (let entityQualificationsSpecializationsItemExperienceProceduresItem of entityQualificationsSpecializationsItem.experience.procedures) {
                    let retQualificationsSpecializationsValueExperienceProceduresValue: any
                    retQualificationsSpecializationsValueExperienceProceduresValue = entityQualificationsSpecializationsItemExperienceProceduresItem
                    retQualificationsSpecializationsValue.experience.procedures.push(retQualificationsSpecializationsValueExperienceProceduresValue)
                  }
                }
                if (entityQualificationsSpecializationsItem.experience.patientTypes) {
                  retQualificationsSpecializationsValue.experience.patientTypes = []
                  for (let entityQualificationsSpecializationsItemExperiencePatientTypesItem of entityQualificationsSpecializationsItem.experience.patientTypes) {
                    let retQualificationsSpecializationsValueExperiencePatientTypesValue: any
                    retQualificationsSpecializationsValueExperiencePatientTypesValue = entityQualificationsSpecializationsItemExperiencePatientTypesItem
                    retQualificationsSpecializationsValue.experience.patientTypes.push(retQualificationsSpecializationsValueExperiencePatientTypesValue)
                  }
                }
                if (entityQualificationsSpecializationsItem.experience.outcomes) {
                  retQualificationsSpecializationsValue.experience.outcomes = []
                  for (let entityQualificationsSpecializationsItemExperienceOutcomesItem of entityQualificationsSpecializationsItem.experience.outcomes) {
                    let retQualificationsSpecializationsValueExperienceOutcomesValue: any
                    retQualificationsSpecializationsValueExperienceOutcomesValue = entityQualificationsSpecializationsItemExperienceOutcomesItem
                    retQualificationsSpecializationsValue.experience.outcomes.push(retQualificationsSpecializationsValueExperienceOutcomesValue)
                  }
                }
              }
              if (entityQualificationsSpecializationsItem.verification) {
                retQualificationsSpecializationsValue.verification = (retQualificationsSpecializationsValue.verification ? retQualificationsSpecializationsValue.verification : {})
                retQualificationsSpecializationsValue.verification.verified = entityQualificationsSpecializationsItem.verification.verified
                retQualificationsSpecializationsValue.verification.verificationDate = entityQualificationsSpecializationsItem.verification.verificationDate
                retQualificationsSpecializationsValue.verification.verifier = entityQualificationsSpecializationsItem.verification.verifier
                retQualificationsSpecializationsValue.verification.notes = entityQualificationsSpecializationsItem.verification.notes
                retQualificationsSpecializationsValue.verification.method = entityQualificationsSpecializationsItem.verification.method
              }
              retQualificationsSpecializationsValue.isActive = entityQualificationsSpecializationsItem.isActive
              retQualificationsSpecializationsValue.createdAt = entityQualificationsSpecializationsItem.createdAt
              retQualificationsSpecializationsValue.updatedAt = entityQualificationsSpecializationsItem.updatedAt
            }
            ret.qualifications.specializations.push(retQualificationsSpecializationsValue)
          }
        }
        ret.qualifications.isActive = entity.qualifications.isActive
        ret.qualifications.createdAt = entity.qualifications.createdAt
        ret.qualifications.updatedAt = entity.qualifications.updatedAt
      }
      if (entity.addresses) {
        ret.addresses = []
        for (let entityAddressesItem of entity.addresses) {
          let retAddressesValue: any
          if (entityAddressesItem) {
            retAddressesValue = (retAddressesValue ? retAddressesValue : {})
            retAddressesValue.streetAddress = entityAddressesItem.streetAddress
            retAddressesValue.city = entityAddressesItem.city
            retAddressesValue.state = entityAddressesItem.state
            retAddressesValue.postalCode = entityAddressesItem.postalCode
            retAddressesValue.country = entityAddressesItem.country
            retAddressesValue.isPrimary = entityAddressesItem.isPrimary
          }
          ret.addresses.push(retAddressesValue)
        }
      }
      if (entity.contactInfo) {
        ret.contactInfo = (ret.contactInfo ? ret.contactInfo : {})
        ret.contactInfo.email = entity.contactInfo.email
        ret.contactInfo.phoneNumber = entity.contactInfo.phoneNumber
        ret.contactInfo.emergencyContactName = entity.contactInfo.emergencyContactName
        ret.contactInfo.emergencyContactPhone = entity.contactInfo.emergencyContactPhone
        ret.contactInfo.emergencyContactRelationship = entity.contactInfo.emergencyContactRelationship
        ret.contactInfo.preferredContactMethod = entity.contactInfo.preferredContactMethod
        ret.contactInfo.isPrimary = entity.contactInfo.isPrimary
      }
      ret.licenseNumber = entity.licenseNumber
      ret.licenseExpiryDate = entity.licenseExpiryDate
      ret.isActive = entity.isActive
      ret.createdAt = entity.createdAt
      ret.updatedAt = entity.updatedAt
    }

    return ret
  }

}
