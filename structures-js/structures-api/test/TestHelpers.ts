// @ts-ignore for some reason intellij is complaining about this even though esModuleInterop is enabled
import path from 'node:path'
import {v2 as compose} from 'docker-compose'
import {Continuum} from '@kinotic/continuum-client'
import {Structure} from '../src/api/domain/Structure.js'
import {
    AutoGeneratedIdDecorator,
    EntityDecorator, IntC3Type,
    MultiTenancyType,
    ObjectC3Type,
    StringC3Type
} from '@kinotic/continuum-idl'
import {Structures} from '../src/index.js'

const composeFilePath = '../../'

export async function initStructuresServer(): Promise<void> {
    try {
        const resolvedPath = path.resolve(composeFilePath)

        await compose.pullAll({cwd: resolvedPath, log: true})

        await compose.upAll({
            cwd: resolvedPath,
            log: true
        })

        await Continuum.connect('ws://127.0.0.1:58503/v1', 'admin', 'structures')
        console.log('Connected to continuum')
    } catch (e) {
        console.error(e)
        throw e
    }
}

export async function shutdownStructuresServer(): Promise<void> {
    try {
        await compose.down({cwd: path.resolve(composeFilePath), log: true})
    } catch (e) {
        console.error(e)
        throw e
    }
}

export function createPersonSchema(): ObjectC3Type {
    const ret = new ObjectC3Type()
    ret.type = 'object'
    ret.addDecorator(new EntityDecorator().withMultiTenancyType(MultiTenancyType.SHARED))
    ret.addProperty('id', new StringC3Type().addDecorator(new AutoGeneratedIdDecorator()))
    ret.addProperty('firstName', new StringC3Type())
    ret.addProperty('lastName', new StringC3Type())
    ret.addProperty('age', new IntC3Type())

    const address = new ObjectC3Type()
    address.type = 'object'
    address.addProperty('street', new StringC3Type())
    address.addProperty('city', new StringC3Type())
    address.addProperty('state', new StringC3Type())
    address.addProperty('zip', new StringC3Type())

    ret.addProperty('address', address)

    return ret
}

export async function createPersonStructure(){
    const personStructure = new Structure('org.kinotic.sample',
        'Person',
        createPersonSchema(),
        'Tracks people that are going to mars')

    await Structures.getNamespaceService().createNamespaceIfNotExist('org.kinotic.sample', 'Sample Data Namespace')

    await Structures.getStructureService().create(personStructure)

}
