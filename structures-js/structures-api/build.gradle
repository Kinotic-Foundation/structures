plugins {
    id 'base'
    id "com.github.node-gradle.node" version "3.5.1"
}

node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = true

    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "18.16.0"

    // Version of Pnpm to use
    // Any Pnpm task first installs Pnpm in the pnpmWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    pnpmVersion = "8.3.1"

    // Base URL for fetching node distributions
    // Only used if download is true
    // Change it if you want to use a mirror
    // Or set to null if you want to add the repository on your own.
    distBaseUrl = "https://nodejs.org/dist"

    // Specifies whether it is acceptable to communicate with the Node.js repository over an insecure HTTP connection.
    // Only used if download is true
    // Change it to true if you use a mirror that uses HTTP rather than HTTPS
    // Or set to null if you want to use Gradle's default behaviour.
    allowInsecureProtocol = null

    // The directory where Node.js is unpacked (when download is true)
    workDir = file("${project.projectDir}/.gradle/nodejs")

    // The directory where pnpm is installed (when a pnpm task is used)
    pnpmWorkDir = file("${project.projectDir}/.gradle/pnpm")

}

task deleteDist(type: Delete){
    delete "${project.projectDir}/dist/"
}

task pnpmBuild(type: PnpmTask) {
    args = ['build']
    mustRunAfter 'pnpmInstall'
}

task cleanFrontend {
    dependsOn 'deleteDist'
}

task buildFrontend {
    dependsOn 'pnpmInstall'
    dependsOn 'pnpmBuild'
}

tasks.findByName('build').dependsOn 'buildFrontend'

tasks.findByName('clean').dependsOn 'cleanFrontend'
