export enum MultiTenancyType {
    NONE,
    SHARED
    // We will support these in the future
    //    ISOLATED,
    //    HYBRID
}

export function Entity(multiTenancyType: MultiTenancyType = MultiTenancyType.NONE) {
    return function (constructor: Function) {
        constructor.prototype._multiTenancyType = multiTenancyType
    }
}

export function Id(_: any, context: any) {
    if(context.kind === "field") {

    }
}

export function AutoGeneratedId(_: any, context: any) {
    if(context.kind === "field") {

    }
}

export function Flattened(_: any, context: any) {
    if(context.kind === "field") {

    }
}

export function Nested(_: any, context: any) {
    if(context.kind === "field") {

    }
}

export function Text(_: any, context: any) {
    if(context.kind === "field") {

    }
}

export function NotNull(_: any, context: any) {
    if(context.kind === "field") {

    }
}
