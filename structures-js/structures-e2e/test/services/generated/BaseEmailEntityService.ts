import { EntityService, IEntitiesService } from '@kinotic/structures-api'
import { Email } from '../../domain/Email.js'


/**
 * Base Service for interacting with Email entities
 * This class was generated by the Structures CLI. And will be overwritten if the CLI is run again.
 */
export class BaseEmailEntityService extends EntityService<Email> {

  private readonly shouldValidate: boolean

  constructor(shouldValidate: boolean = true, entitiesService?: IEntitiesService) {
    super('people', 'Email', entitiesService)
    this.shouldValidate = shouldValidate
  }

  protected async beforeSaveOrUpdate(entity: Email): Promise<Email> {
    if (this.shouldValidate) {
      return this.validate(entity)
    } else {
      return entity
    }
  }

  protected async beforeBulkSaveOrUpdate(entities: Email[]): Promise<Email[]> {
    if (this.shouldValidate) {
      const validatedEntities: Email[] = []
      for (let entity of entities) {
        validatedEntities.push(this.validate(entity))
      }
      return validatedEntities
    } else {
      return entities
    }
  }

  validate(entity: Email): Email {
    let ret: any
    if (entity) {
      ret = (ret ? ret : {})
      ret.id = entity.id
      ret.body = entity.body
      ret.to = entity.to
      ret.from = entity.from
    }

    return ret
  }

}
