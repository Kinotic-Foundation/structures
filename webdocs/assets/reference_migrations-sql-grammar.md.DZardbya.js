import{_ as e,c as s,o as i,ae as a}from"./chunks/framework.DrOG_Kkp.js";const E=JSON.parse('{"title":"Structures Migration SQL Grammar Reference","description":"Comprehensive reference for all statements, options, and syntax in the SQL dialect used for Structures migration scripts.","frontmatter":{"title":"Structures Migration SQL Grammar Reference","description":"Comprehensive reference for all statements, options, and syntax in the SQL dialect used for Structures migration scripts."},"headers":[],"relativePath":"reference/migrations-sql-grammar.md","filePath":"reference/migrations-sql-grammar.md"}'),n={name:"reference/migrations-sql-grammar.md"};function d(l,t,r,h,o,p){return i(),s("div",null,t[0]||(t[0]=[a(`<h1 id="structures-migration-sql-grammar-reference" tabindex="-1">Structures Migration SQL Grammar Reference <a class="header-anchor" href="#structures-migration-sql-grammar-reference" aria-label="Permalink to &quot;Structures Migration SQL Grammar Reference&quot;">​</a></h1><blockquote><p><strong>Note:</strong> This grammar reference applies <strong>only to migration scripts</strong> (files used for schema and data migrations).</p></blockquote><p>This document provides a detailed reference for the SQL dialect used in Structures migration scripts. It covers all supported statements, options, and syntax as defined in the migration grammar.</p><h2 id="statements-overview" tabindex="-1">Statements Overview <a class="header-anchor" href="#statements-overview" aria-label="Permalink to &quot;Statements Overview&quot;">​</a></h2><ul><li><code>CREATE TABLE</code></li><li><code>CREATE COMPONENT TEMPLATE</code></li><li><code>CREATE INDEX TEMPLATE</code></li><li><code>ALTER TABLE</code></li><li><code>REINDEX</code></li><li><code>INSERT</code></li><li><code>UPDATE</code></li><li><code>DELETE</code></li><li>Comments</li></ul><hr><h2 id="create-table" tabindex="-1">CREATE TABLE <a class="header-anchor" href="#create-table" aria-label="Permalink to &quot;CREATE TABLE&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [IF NOT EXISTS] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">column_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;type&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, &lt;column_name&gt; &lt;type&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ;</span></span></code></pre></div><ul><li><code>IF NOT EXISTS</code> (optional): Only create if the index does not exist.</li><li><code>&lt;type&gt;</code>: See <a href="#supported-types">Supported Types</a>.</li></ul><hr><h2 id="create-component-template" tabindex="-1">CREATE COMPONENT TEMPLATE <a class="header-anchor" href="#create-component-template" aria-label="Permalink to &quot;CREATE COMPONENT TEMPLATE&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMPONENT TEMPLATE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;definition&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, &lt;definition&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ;</span></span></code></pre></div><ul><li><code>&lt;definition&gt;</code> can be: <ul><li><code>NUMBER_OF_SHARDS = &lt;integer&gt;</code>: Sets the number of primary shards for indices using this template.</li><li><code>NUMBER_OF_REPLICAS = &lt;integer&gt;</code>: Sets the number of replica shards for indices using this template.</li><li><code>&lt;column_name&gt; &lt;type&gt;</code>: Adds a field mapping (see Supported Types below).</li></ul></li></ul><table tabindex="0"><thead><tr><th>Definition</th><th>Allowed Values</th><th>Description</th></tr></thead><tbody><tr><td>NUMBER_OF_SHARDS</td><td>Integer (e.g., 1, 3)</td><td>Number of primary shards for the index</td></tr><tr><td>NUMBER_OF_REPLICAS</td><td>Integer (e.g., 0, 1)</td><td>Number of replica shards for the index</td></tr><tr><td>&lt;column_name&gt; &lt;type&gt;</td><td>See Supported Types</td><td>Field mapping (name and type)</td></tr></tbody></table><hr><h2 id="create-index-template" tabindex="-1">CREATE INDEX TEMPLATE <a class="header-anchor" href="#create-index-template" aria-label="Permalink to &quot;CREATE INDEX TEMPLATE&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TEMPLATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;pattern&gt;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;component_template&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [WITH (&lt;definition&gt; [, &lt;definition&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ] ;</span></span></code></pre></div><ul><li><code>WITH (...)</code> (optional): Additional definitions as in component templates.</li></ul><table tabindex="0"><thead><tr><th>Definition</th><th>Allowed Values</th><th>Description</th></tr></thead><tbody><tr><td>NUMBER_OF_SHARDS</td><td>Integer (e.g., 1, 3)</td><td>Number of primary shards for the index</td></tr><tr><td>NUMBER_OF_REPLICAS</td><td>Integer (e.g., 0, 1)</td><td>Number of replica shards for the index</td></tr><tr><td>&lt;column_name&gt; &lt;type&gt;</td><td>See Supported Types</td><td>Field mapping (name and type)</td></tr></tbody></table><hr><h2 id="reindex" tabindex="-1">REINDEX <a class="header-anchor" href="#reindex" aria-label="Permalink to &quot;REINDEX&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">REINDEX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INTO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dest_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [WITH (&lt;option&gt; [, &lt;option&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ] ;</span></span></code></pre></div><ul><li><strong>Options:</strong></li></ul><table tabindex="0"><thead><tr><th>Option</th><th>Allowed Values</th><th>Description</th></tr></thead><tbody><tr><td>CONFLICTS</td><td>ABORT, PROCEED</td><td>How to handle version conflicts: abort or proceed</td></tr><tr><td>MAX_DOCS</td><td>Integer (e.g., 1000)</td><td>Maximum number of documents to reindex</td></tr><tr><td>SLICES</td><td>AUTO, Integer (e.g., 2)</td><td>Number of slices (parallelism); AUTO lets Elasticsearch decide</td></tr><tr><td>SIZE</td><td>Integer (e.g., 500)</td><td>Batch size for reindexing</td></tr><tr><td>SOURCE_FIELDS</td><td>Comma-separated list (e.g., &#39;field1,field2&#39;)</td><td>Restrict source fields to copy</td></tr><tr><td>QUERY</td><td>String (Lucene query syntax)</td><td>Query to filter source documents</td></tr><tr><td>SCRIPT</td><td>String (Painless script)</td><td>Script to transform documents during reindex</td></tr><tr><td>WAIT</td><td>TRUE, FALSE</td><td>If TRUE, wait for completion before continuing; if FALSE, return task ID</td></tr><tr><td>SKIP_IF_NO_SOURCE</td><td>TRUE, FALSE</td><td>If TRUE, skip reindex if the source index does not exist (default FALSE)</td></tr></tbody></table><blockquote><p><strong>Note:</strong> If <code>SKIP_IF_NO_SOURCE = TRUE</code>, the reindex operation will be skipped (no error) if the source index does not exist. This is useful for idempotent migrations or when the source may be missing in some environments.</p></blockquote><hr><h2 id="insert" tabindex="-1">INSERT <a class="header-anchor" href="#insert" aria-label="Permalink to &quot;INSERT&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [(&lt;column_name&gt; [, &lt;column_name&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expression</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, &lt;expression&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) [WITH REFRESH] ;</span></span></code></pre></div><ul><li><code>WITH REFRESH</code> (optional): Immediately refresh the index after insert.</li><li><code>&lt;expression&gt;</code>: Literal, parameter (<code>?</code>), or field reference.</li></ul><hr><h2 id="update" tabindex="-1">UPDATE <a class="header-anchor" href="#update" aria-label="Permalink to &quot;UPDATE&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expression</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, &lt;field&gt; = &lt;expression&gt;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [WITH REFRESH] ;</span></span></code></pre></div><ul><li><code>WITH REFRESH</code> (optional): Immediately refresh the index after update.</li><li><code>&lt;expression&gt;</code>: Literal, parameter, or binary expression (e.g., <code>age + 1</code>).</li><li><code>&lt;where_clause&gt;</code>: See <a href="#where-clauses">Where Clauses</a>.</li></ul><hr><h2 id="delete" tabindex="-1">DELETE <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;DELETE&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [WITH REFRESH] ;</span></span></code></pre></div><ul><li><code>WITH REFRESH</code> (optional): Immediately refresh the index after delete.</li></ul><hr><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h2><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- This is a comment</span></span></code></pre></div><ul><li>Comments start with <code>--</code> and continue to the end of the line.</li></ul><hr><h2 id="where-clauses" tabindex="-1">Where Clauses <a class="header-anchor" href="#where-clauses" aria-label="Permalink to &quot;Where Clauses&quot;">​</a></h2><p>Where clauses are used in <code>UPDATE</code> and <code>DELETE</code> statements.</p><p><strong>Syntax:</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">operator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;value&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">where_clause</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong>Operators:</strong> <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li><li><strong>Values:</strong> Literal, parameter (<code>?</code>), string, integer, boolean</li></ul><hr><h2 id="supported-types" tabindex="-1">Supported Types <a class="header-anchor" href="#supported-types" aria-label="Permalink to &quot;Supported Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Elasticsearch Mapping</th></tr></thead><tbody><tr><td>TEXT</td><td>text</td></tr><tr><td>KEYWORD</td><td>keyword</td></tr><tr><td>KEYWORD NOT INDEXED</td><td>keyword (not indexed, no doc_values)</td></tr><tr><td>INTEGER</td><td>integer</td></tr><tr><td>INTEGER NOT INDEXED</td><td>integer (not indexed, no doc_values)</td></tr><tr><td>LONG</td><td>long</td></tr><tr><td>LONG NOT INDEXED</td><td>long (not indexed, no doc_values)</td></tr><tr><td>FLOAT</td><td>float</td></tr><tr><td>FLOAT NOT INDEXED</td><td>float (not indexed, no doc_values)</td></tr><tr><td>DOUBLE</td><td>double</td></tr><tr><td>DOUBLE NOT INDEXED</td><td>double (not indexed, no doc_values)</td></tr><tr><td>BOOLEAN</td><td>boolean</td></tr><tr><td>BOOLEAN NOT INDEXED</td><td>boolean (not indexed, no doc_values)</td></tr><tr><td>DATE</td><td>date</td></tr><tr><td>DATE NOT INDEXED</td><td>date (not indexed, no doc_values)</td></tr><tr><td>JSON</td><td>object (flattened)</td></tr><tr><td>JSON NOT INDEXED</td><td>object (not indexed)</td></tr><tr><td>BINARY</td><td>binary</td></tr><tr><td>GEO_POINT</td><td>geo_point</td></tr><tr><td>GEO_SHAPE</td><td>geo_shape</td></tr><tr><td>UUID</td><td>keyword</td></tr><tr><td>UUID NOT INDEXED</td><td>keyword (not indexed, no doc_values)</td></tr><tr><td>DECIMAL</td><td>double</td></tr><tr><td>DECIMAL NOT INDEXED</td><td>double (not indexed, no doc_values)</td></tr></tbody></table><hr><h2 id="expressions" tabindex="-1">Expressions <a class="header-anchor" href="#expressions" aria-label="Permalink to &quot;Expressions&quot;">​</a></h2><ul><li><strong>Literals:</strong> <code>&#39;string&#39;</code>, <code>123</code>, <code>true</code>, <code>false</code></li><li><strong>Parameters:</strong> <code>?</code></li><li><strong>Binary Expressions:</strong> <code>&lt;field&gt; + &lt;value&gt;</code>, <code>&lt;field&gt; - &lt;value&gt;</code>, etc.</li></ul><hr><h2 id="reserved-keywords" tabindex="-1">Reserved Keywords <a class="header-anchor" href="#reserved-keywords" aria-label="Permalink to &quot;Reserved Keywords&quot;">​</a></h2><p>All keywords in the grammar are reserved and case-insensitive. Examples: <code>CREATE</code>, <code>TABLE</code>, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, <code>WITH</code>, <code>REFRESH</code>, etc.</p><hr><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>All statements must end with a semicolon (<code>;</code>).</li><li>Identifiers (<code>&lt;index_name&gt;</code>, <code>&lt;column_name&gt;</code>, etc.) must start with a letter or underscore and can contain letters, numbers, and underscores.</li><li>Strings are enclosed in single quotes (<code>&#39;...&#39;</code>).</li><li>Comments are ignored by the parser.</li></ul>`,67)]))}const c=e(n,[["render",d]]);export{E as __pageData,c as default};
