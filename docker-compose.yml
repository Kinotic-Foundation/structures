services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: structures-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    ports:
      - "9200:9200" # allow local kibana or curl usage
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          memory: 4G
        limits:
          memory: 4G
    volumes:
      - ~/structures/elastic-data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: structures-kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          memory: 1G
        limits:
          memory: 1G
    ports:
      - "5601:5601"
  structures-server:
    image: kinotic/structures-server:3.0.0-SNAPSHOT
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:9090/health || exit 1"]
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 90s
    ports:
      - "127.0.0.1:9090:9090" # UI PORT
      - "127.0.0.1:4000:4000" # GraphQL Port
      - "127.0.0.1:8080:8080" # OpenAPI Port
      - "127.0.0.1:58503:58503" # Continuum Stomp Port
      - "127.0.0.1:58504:58504" # Continuum REST Port
    environment:
      SPRING_PROFILES_ACTIVE: production
      STRUCTURES_INDEX_PREFIX: struct_
      STRUCTURES_TENANT_ID_FIELD_NAME: structuresTenantId
      STRUCTURES_ELASTICCONNECTIONS_0_SCHEME: http
      STRUCTURES_ELASTICCONNECTIONS_0_HOST: elasticsearch
      STRUCTURES_ELASTICCONNECTIONS_0_PORT: 9200
      STRUCTURES_ELASTIC_CONNECTION_TIMEOUT: 5s
      STRUCTURES_ELASTIC_SOCKET_TIMEOUT: 60s
      STRUCTURES_ELASTIC_USERNAME:
      STRUCTURES_ELASTIC_PASSWORD:
      STRUCTURES_OPEN_API_SECURITY_TYPE: BASIC
      STRUCTURES_OPEN_API_PORT: 8080
      STRUCTURES_OPEN_API_PATH: /api/
      STRUCTURES_OPEN_API_SERVER_URL: http://127.0.0.1:8080
      STRUCTURES_GRAPHQL_PORT: 4000
      STRUCTURES_GRAPHQL_PATH: /graphql/
      STRUCTURES_CORS_ALLOWED_ORIGIN_PATTERN: '*'
      STRUCTURES_WEB_SERVER_PORT: 9090
      STRUCTURES_HEALTH_CHECK_PATH: /health/
      STRUCTURES_ENABLE_STATIC_FILE_SERVER: true
      STRUCTURES_INITIALIZE_WITH_SAMPLE_DATA: false
    volumes:
      - /tmp/structures/ignite:/workspace/ignite/work
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    deploy:
      resources:
        reservations:
          memory: 4G
        limits:
          memory: 4G
