plugins {
	id 'org.kinotic.java-library-conventions'
	id 'io.freefair.lombok'
}

dependencies {
	implementation project(':structures-sql')

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.reactivestreams:reactive-streams'
	implementation 'io.projectreactor:reactor-core'

	// Spring AI

	implementation 'org.springframework.ai:spring-ai-core'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-elasticsearch-store-spring-boot-starter'

	implementation "io.vertx:vertx-web"
	implementation "io.vertx:vertx-web-graphql"
	implementation "io.vertx:vertx-web-client"
	implementation "io.vertx:vertx-health-check"
	implementation "me.escoffier.vertx:vertx-completable-future"

	implementation 'org.apache.ignite:ignite-core'

	implementation "org.kinotic:continuum-core"
	implementation "org.kinotic:continuum-core-vertx"
	implementation "org.kinotic:continuum-gateway"
	implementation "org.kinotic:continuum-idl"

	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation "com.github.ben-manes.caffeine:caffeine"

	implementation "com.graphql-java:graphql-java"
	implementation "com.apollographql.federation:federation-graphql-java-support:${graphQlFederationJvmVersion}"
	implementation "com.graphql-java:graphql-java-extended-scalars:${graphQlJavaExtendedScalarsVersion}"

	implementation "io.swagger.core.v3:swagger-models:${swaggerCoreVersion}"
	implementation "io.swagger.core.v3:swagger-core:${swaggerCoreVersion}"

	implementation "com.github.slugify:slugify:${slugifyVersion}"

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
	testImplementation "org.testcontainers:elasticsearch:${testContainersVersion}"
	testImplementation 'io.projectreactor:reactor-test'
}

// Configure Javadoc to exclude non-Java files
tasks.named('javadoc') {
	exclude '**/*.interp', '**/*.tokens' // Exclude ANTLR artifacts
}
