plugins {
	id 'org.kinotic.java-library-conventions'
}

ext {

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.reactivestreams:reactive-streams'
	implementation 'io.projectreactor:reactor-core'

	implementation "io.vertx:vertx-web:${vertxVersion}"
	implementation "io.vertx:vertx-web-graphql:${vertxVersion}"
	implementation "io.vertx:vertx-health-check:${vertxVersion}"
	implementation "com.github.rworsnop:vertx-beans:${vertxBeansVersion}"
	implementation "me.escoffier.vertx:vertx-completable-future:${vertxCompletableFutureVersion}"

	implementation "org.kinotic:continuum-core:${continuumVersion}"
	implementation "org.kinotic:continuum-core-vertx:${continuumVersion}"
	implementation "org.kinotic:continuum-gateway:${continuumVersion}"
	implementation "org.kinotic:continuum-idl:${continuumVersion}"

	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"

	implementation "com.apollographql.federation:federation-graphql-java-support:${federationJvmVersion}"
	implementation "com.graphql-java:graphql-java-extended-scalars:${graphQlJavaVersion}"

	implementation "io.swagger.core.v3:swagger-models:${swaggerCoreVersion}"
	implementation "io.swagger.core.v3:swagger-core:${swaggerCoreVersion}"

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
	testImplementation "org.testcontainers:elasticsearch:${testContainersVersion}"
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}
