{"version":3,"sources":["webpack:///./node_modules/@kinotic/continuum-idl/dist/continuum-idl.js","webpack:///./node_modules/@kinotic/structures-api/node_modules/reflect-metadata/Reflect.js","webpack:///./node_modules/@kinotic/structures-api/dist/structures-api.js"],"names":["v","l","Object","defineProperty","d","r","t","e","enumerable","configurable","writable","value","o","h","this","x","super","type","c","T","contains","D","u","s","a","n","p","name","namespace","decorators","metadata","findDecorator","length","containsDecorator","Error","push","w","S","b","N","values","g","i","P","$","k","m","F","addPropertyDefinition","properties","j","Q","V","q","Reflect","factory","root","globalThis","global","self","sloppyModeThis","exporter","makeExporter","target","previous","key","functionThis","Function","_","indirectEvalThis","eval","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","_Map","Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","_WeakMap","WeakMap","CreateWeakMapPolyfill","registrySymbol","for","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","decorate","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","provider","GetMetadataProvider","OrdinaryDeleteMetadata","decorated","descriptor","MetadataKey","O","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","hasKey","add","_a","parentKeys_1","Type","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","toString_1","toString","IsCallable","valueOf","toString_2","argument","ToString","isArray","SameValueZero","y","func","GetIterator","obj","method","IteratorValue","iterResult","IteratorStep","next","done","IteratorClose","f","proto","prototypeProto","constructor","CreateMetadataRegistry","fallback","first","second","rest","CreateFallbackProvider","targetProviderMap","registry","registerProvider","getProvider","setProvider","isExtensible","getProviderNoCache","isProviderFor","providerMap","hasProvider","existingProvider","targetMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","delete","keysObj","nextValue","size","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","selector","_index","_keys","_values","_selector","index","throw","error","return","_cacheKey","_cacheIndex","_find","clear","getKey","getValue","getEntry","insert","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","array","crypto","getRandomValues","msCrypto","data","offset","byte","toLowerCase","__","G","id","description","updated","entityDefinition","NONE","SHARED","J","multiTenancyType","X","I","entitiesService","structureId","findAllSinglePage","parameters","queryName","namedQuerySinglePage","searchText","searchSinglePage","serviceProxy","invoke","structureNamespace","structureName","beforeBulkSaveOrUpdate","bulkSave","bulkUpdate","count","countByQuery","deleteById","deleteByQuery","findAll","findById","findByIds","namedQuery","namedQueryPage","beforeSaveOrUpdate","save","search","update","Promise","resolve","E","B","getNamespaceService","getStructureService","getEntitiesService","getNamedQueriesService","createEntityService"],"mappings":"gHAAA,6SAAAA,KAAA,wVAAIC,EAAIC,OAAOC,eACXC,EAAI,CAACC,EAAGC,EAAGC,IAAMD,KAAKD,EAAIJ,EAAEI,EAAGC,EAAG,CAAEE,YAAY,EAAIC,cAAc,EAAIC,UAAU,EAAIC,MAAOJ,IAAOF,EAAEC,GAAKC,EACzGK,EAAI,CAACP,EAAGC,EAAGC,KAAOH,EAAEC,EAAe,iBAALC,EAAgBA,EAAI,GAAKA,EAAGC,GAAIA,GAClE,MAAMM,EACJ,cACED,EAAEE,KAAM,OAAQ,KAGpB,MAAMC,UAAUF,EACd,cACEG,QAASF,KAAKG,KAAO,WAGzB,MAAMC,EACJ,YAAYZ,GACVM,EAAEE,KAAM,OAAQ,IAChBA,KAAKG,KAAOX,GAGhB,MAAMa,UAAUD,EACd,YAAYX,GACVS,MAAM,SAKNJ,EAAEE,KAAM,YACRA,KAAKM,SAAWb,GAGpB,MAAMc,UAAUH,EACd,cACEF,MAAM,YAGV,MAAMM,UAAUJ,EACd,YAAYX,EAAGgB,EAAGC,EAAGC,EAAGC,GACtBV,MAAMT,GAINK,EAAEE,KAAM,QAIRF,EAAEE,KAAM,aAIRF,EAAEE,KAAM,aAAc,MAItBF,EAAEE,KAAM,YACRA,KAAKa,KAAOJ,EAAGT,KAAKc,UAAYJ,EAAGV,KAAKe,WAAaJ,EAAGX,KAAKgB,SAAWJ,EAO1E,kBAAkBnB,GAChB,OAAiC,OAA1BO,KAAKiB,cAAcxB,GAM5B,gBACE,IAAIA,GAAI,EACR,OAAOO,KAAKe,aAAetB,EAAIO,KAAKe,WAAWG,OAAS,GAAIzB,EAO9D,aAAaA,GACX,GAAKO,KAAKe,YAEL,GAAIf,KAAKmB,kBAAkB1B,GAC9B,MAAM,IAAI2B,MAAM,8CAA8C3B,EAAEU,WAFhEH,KAAKe,WAAa,GAGpB,OAAOf,KAAKe,WAAWM,KAAK5B,GAAIO,KAOlC,cAAcP,GACZ,IAAIgB,EAAI,KACR,GAAIT,KAAKe,WACP,IAAK,MAAML,KAAKV,KAAKe,WACnB,GAAIL,EAAEP,OAASV,EAAEU,KAAM,CACrBM,EAAIC,EACJ,MAGN,OAAOD,EAMT,mBACE,OAAQT,KAAKc,UAAYd,KAAKc,UAAY,IAAM,IAAMd,KAAKa,MAG/D,MAAMS,UAAUlB,EACd,cACEF,MAAM,SAGV,MAAMqB,UAAUnB,EACd,cACEF,MAAM,SAGV,MAAMsB,UAAUpB,EACd,cACEF,MAAM,SAGV,MAAMuB,UAAUrB,EACd,cACEF,MAAM,WAGV,MAAMhB,UAAUsB,EACd,YAAYf,EAAGgB,EAAGC,EAAGC,GACnBT,MAAM,OAAQT,EAAGgB,EAAGC,EAAGC,GAIvBb,EAAEE,KAAM,SAAU,IAEpB,SAASP,GACP,OAAOO,KAAK0B,OAAOL,KAAK5B,GAAIO,MAGhC,MAAM2B,UAAUvB,EACd,cACEF,MAAM,UAGV,MAAM0B,EACJ,YAAYpC,EAAGC,EAAGgB,GAIhBX,EAAEE,KAAM,QAIRF,EAAEE,KAAM,aAAc,MAKtBF,EAAEE,KAAM,WAAY,MACpBA,KAAKa,KAAOrB,EAAGQ,KAAKe,WAAatB,EAAGO,KAAKgB,SAAWP,EAOtD,kBAAkBjB,GAChB,OAAiC,OAA1BQ,KAAKiB,cAAczB,GAM5B,gBACE,IAAIA,GAAI,EACR,OAAOQ,KAAKe,aAAevB,EAAIQ,KAAKe,WAAWG,OAAS,GAAI1B,EAO9D,aAAaA,GACX,GAAKQ,KAAKe,YAEL,GAAIf,KAAKmB,kBAAkB3B,GAC9B,MAAM,IAAI4B,MAAM,8CAA8C5B,EAAEW,WAFhEH,KAAKe,WAAa,GAGpBf,KAAKe,WAAWM,KAAK7B,GAOvB,cAAcA,GACZ,IAAIC,EAAI,KACR,GAAIO,KAAKe,WACP,IAAK,MAAMN,KAAKT,KAAKe,WACnB,GAAIN,EAAEN,OAASX,EAAEW,KAAM,CACrBV,EAAIgB,EACJ,MAGN,OAAOhB,GA6CX,MAAMoC,UAAUzB,EACd,cACEF,MAAM,QAGV,MAAM4B,UAAU1B,EACd,cACEF,MAAM,SAGV,MAAM6B,UAAU3B,EACd,cACEF,MAAM,OAINJ,EAAEE,KAAM,MAAO,MAIfF,EAAEE,KAAM,QAAS,OA6BrB,MAAMgC,UAAUJ,EACd,YAAYnC,EAAGgB,EAAGC,EAAGC,GACnBT,MAAMT,EAAGiB,EAAGC,GAIZb,EAAEE,KAAM,QACRA,KAAKG,KAAOM,GAGhB,MAAMwB,UAAUzB,EACd,YAAYf,EAAGgB,EAAGC,EAAGC,GACnBT,MAAM,SAAUT,EAAGgB,EAAGC,EAAGC,GAKzBb,EAAEE,KAAM,SAAU,MAIlBF,EAAEE,KAAM,aAAc,IAExB,YAAYP,EAAGgB,EAAGC,GAChB,OAAOV,KAAKkC,sBAAsB,IAAIF,EAAEvC,EAAGgB,EAAGC,IAOhD,sBAAsBjB,GACpB,OAAOO,KAAKmC,WAAWd,KAAK5B,GAAIO,KAOlC,aAAaP,GACX,IAAIgB,EAAI,KACR,GAAIT,KAAKmC,WACP,IAAK,MAAMzB,KAAKV,KAAKmC,WACnB,GAAIzB,EAAEG,OAASpB,EAAG,CAChBgB,EAAIC,EACJ,MAGN,OAAOD,GAGX,MAAM2B,UAAUhC,EACd,cACEF,MAAM,OAINJ,EAAEE,KAAM,gBAAiB,OAoC7B,MAAMqC,UAAUjC,EACd,cACEF,MAAM,UAGV,MAAMoC,UAAUlC,EACd,cACEF,MAAM,WAGV,MAAMqC,UAAU/B,EACd,YAAYf,EAAGgB,EAAGC,EAAGC,GACnBT,MAAM,QAAST,EAAGgB,EAAGC,EAAGC,GAKxBb,EAAEE,KAAM,QAAS,O,sBCxZrB;;;;;;;;;;;;;;;AAcA,IAAIwC,GACJ,SAAWA,IAGP,SAAWC,GACP,IAAIC,EAA6B,kBAAfC,WAA0BA,WACtB,kBAAXC,EAAsBA,EACT,kBAATC,KAAoBA,KACP,kBAAT7C,KAAoBA,KACvB8C,iBACZC,EAAWC,aAAaR,GAQ5B,SAASQ,aAAaC,EAAQC,GAC1B,OAAO,SAAUC,EAAKtD,GAClBT,OAAOC,eAAe4D,EAAQE,EAAK,CAAExD,cAAc,EAAMC,UAAU,EAAMC,MAAOA,IAC5EqD,GACAA,EAASC,EAAKtD,IAG1B,SAASuD,eACL,IACI,OAAOC,SAAS,eAATA,GAEX,MAAOC,KAEX,SAASC,mBACL,IACI,OAAO,EAASC,MAAM,mCAE1B,MAAOF,KAEX,SAASR,iBACL,OAAOM,gBAAkBG,mBA3BD,qBAAjBb,EAAKF,UACZO,EAAWC,aAAaN,EAAKF,QAASO,IAE1CN,EAAQM,EAAUL,GACU,qBAAjBA,EAAKF,UACZE,EAAKF,QAAUA,IAZvB,EAoCG,SAAUO,EAAUL,GACnB,IAAIe,EAASrE,OAAOsE,UAAUC,eAE1BC,EAAmC,oBAAXC,OACxBC,EAAoBF,GAAgD,qBAAvBC,OAAOE,YAA8BF,OAAOE,YAAc,gBACvGC,EAAiBJ,GAA6C,qBAApBC,OAAOI,SAA2BJ,OAAOI,SAAW,aAC9FC,EAA0C,oBAAlB9E,OAAO+E,OAC/BC,EAAgB,CAAEC,UAAW,cAAgBC,MAC7CC,GAAaL,IAAmBE,EAChCI,EAAU,CAEVL,OAAQD,EACF,WAAc,OAAOO,eAAerF,OAAO+E,OAAO,QAClDC,EACI,WAAc,OAAOK,eAAe,CAAEJ,UAAW,QACjD,WAAc,OAAOI,eAAe,KAC9CC,IAAKH,EACC,SAAUI,EAAKxB,GAAO,OAAOM,EAAOmB,KAAKD,EAAKxB,IAC9C,SAAUwB,EAAKxB,GAAO,OAAOA,KAAOwB,GAC1CE,IAAKN,EACC,SAAUI,EAAKxB,GAAO,OAAOM,EAAOmB,KAAKD,EAAKxB,GAAOwB,EAAIxB,QAAO2B,GAChE,SAAUH,EAAKxB,GAAO,OAAOwB,EAAIxB,KAGvC4B,EAAoB3F,OAAO4F,eAAe3B,UAC1C4B,EAAsB,oBAARC,KAAuD,oBAA1BA,IAAIxB,UAAUyB,QAAyBD,IAAME,oBACxFC,EAAsB,oBAARC,KAAuD,oBAA1BA,IAAI5B,UAAUyB,QAAyBG,IAAMC,oBACxFC,EAA8B,oBAAZC,QAAyBA,QAAUC,wBACrDC,EAAiB/B,EAAiBC,OAAO+B,IAAI,mCAAgCd,EAC7Ee,EAAmBC,8BACnBC,EAAmBC,uBAAuBH,GAwC9C,SAASI,SAASlF,EAAYkC,EAAQiD,EAAaC,GAC/C,GAAKC,YAAYF,GAYZ,CACD,IAAKG,QAAQtF,GACT,MAAM,IAAIuF,UACd,IAAKC,cAActD,GACf,MAAM,IAAIqD,UACd,OAAOE,oBAAoBzF,EAAYkC,GAhBvC,IAAKoD,QAAQtF,GACT,MAAM,IAAIuF,UACd,IAAKG,SAASxD,GACV,MAAM,IAAIqD,UACd,IAAKG,SAASN,KAAgBC,YAAYD,KAAgBO,OAAOP,GAC7D,MAAM,IAAIG,UAId,OAHII,OAAOP,KACPA,OAAarB,GACjBoB,EAAcS,cAAcT,GACrBU,iBAAiB7F,EAAYkC,EAAQiD,EAAaC,GAqDjE,SAASnF,SAAS6F,EAAaC,GAC3B,SAASC,UAAU9D,EAAQiD,GACvB,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UACd,IAAKF,YAAYF,KAAiBc,cAAcd,GAC5C,MAAM,IAAII,UACdW,0BAA0BJ,EAAaC,EAAe7D,EAAQiD,GAElE,OAAOa,UA0CX,SAASG,eAAeL,EAAaC,EAAe7D,EAAQiD,GACxD,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzBe,0BAA0BJ,EAAaC,EAAe7D,EAAQiD,GAqCzE,SAASiB,YAAYN,EAAa5D,EAAQiD,GACtC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzBkB,oBAAoBP,EAAa5D,EAAQiD,GAqCpD,SAASmB,eAAeR,EAAa5D,EAAQiD,GACzC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzBoB,uBAAuBT,EAAa5D,EAAQiD,GAqCvD,SAASqB,YAAYV,EAAa5D,EAAQiD,GACtC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzBsB,oBAAoBX,EAAa5D,EAAQiD,GAqCpD,SAASuB,eAAeZ,EAAa5D,EAAQiD,GACzC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzBwB,uBAAuBb,EAAa5D,EAAQiD,GAoCvD,SAASyB,gBAAgB1E,EAAQiD,GAC7B,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzB0B,qBAAqB3E,EAAQiD,GAoCxC,SAAS2B,mBAAmB5E,EAAQiD,GAChC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,OAFKF,YAAYF,KACbA,EAAcS,cAAcT,IACzB4B,wBAAwB7E,EAAQiD,GAqC3C,SAAS6B,eAAelB,EAAa5D,EAAQiD,GACzC,IAAKO,SAASxD,GACV,MAAM,IAAIqD,UAGd,GAFKF,YAAYF,KACbA,EAAcS,cAAcT,KAC3BO,SAASxD,GACV,MAAM,IAAIqD,UACTF,YAAYF,KACbA,EAAcS,cAAcT,IAChC,IAAI8B,EAAWC,oBAAoBhF,EAAQiD,GAAwB,GACnE,OAAIE,YAAY4B,IAETA,EAASE,uBAAuBrB,EAAa5D,EAAQiD,GAGhE,SAASM,oBAAoBzF,EAAYkC,GACrC,IAAK,IAAIrB,EAAIb,EAAWG,OAAS,EAAGU,GAAK,IAAKA,EAAG,CAC7C,IAAImF,EAAYhG,EAAWa,GACvBuG,EAAYpB,EAAU9D,GAC1B,IAAKmD,YAAY+B,KAAezB,OAAOyB,GAAY,CAC/C,IAAK5B,cAAc4B,GACf,MAAM,IAAI7B,UACdrD,EAASkF,GAGjB,OAAOlF,EAEX,SAAS2D,iBAAiB7F,EAAYkC,EAAQiD,EAAakC,GACvD,IAAK,IAAIxG,EAAIb,EAAWG,OAAS,EAAGU,GAAK,IAAKA,EAAG,CAC7C,IAAImF,EAAYhG,EAAWa,GACvBuG,EAAYpB,EAAU9D,EAAQiD,EAAakC,GAC/C,IAAKhC,YAAY+B,KAAezB,OAAOyB,GAAY,CAC/C,IAAK1B,SAAS0B,GACV,MAAM,IAAI7B,UACd8B,EAAaD,GAGrB,OAAOC,EAIX,SAAShB,oBAAoBiB,EAAaC,EAAGzG,GACzC,IAAI4B,EAAS6D,uBAAuBe,EAAaC,EAAGzG,GACpD,GAAI4B,EACA,OAAO,EACX,IAAI8E,EAASC,uBAAuBF,GACpC,OAAK5B,OAAO6B,IACDnB,oBAAoBiB,EAAaE,EAAQ1G,GAKxD,SAASyF,uBAAuBe,EAAaC,EAAGzG,GAC5C,IAAImG,EAAWC,oBAAoBK,EAAGzG,GAAc,GACpD,OAAIuE,YAAY4B,IAETS,UAAUT,EAASV,uBAAuBe,EAAaC,EAAGzG,IAIrE,SAAS2F,oBAAoBa,EAAaC,EAAGzG,GACzC,IAAI4B,EAAS6D,uBAAuBe,EAAaC,EAAGzG,GACpD,GAAI4B,EACA,OAAOiE,uBAAuBW,EAAaC,EAAGzG,GAClD,IAAI0G,EAASC,uBAAuBF,GACpC,OAAK5B,OAAO6B,QAAZ,EACWf,oBAAoBa,EAAaE,EAAQ1G,GAKxD,SAAS6F,uBAAuBW,EAAaC,EAAGzG,GAC5C,IAAImG,EAAWC,oBAAoBK,EAAGzG,GAAc,GACpD,IAAIuE,YAAY4B,GAEhB,OAAOA,EAASN,uBAAuBW,EAAaC,EAAGzG,GAI3D,SAASoF,0BAA0BoB,EAAaK,EAAeJ,EAAGzG,GAC9D,IAAImG,EAAWC,oBAAoBK,EAAGzG,GAAc,GACpDmG,EAASf,0BAA0BoB,EAAaK,EAAeJ,EAAGzG,GAItE,SAAS+F,qBAAqBU,EAAGzG,GAC7B,IAAI8G,EAAUb,wBAAwBQ,EAAGzG,GACrC0G,EAASC,uBAAuBF,GACpC,GAAe,OAAXC,EACA,OAAOI,EACX,IAAIC,EAAahB,qBAAqBW,EAAQ1G,GAC9C,GAAI+G,EAAW1H,QAAU,EACrB,OAAOyH,EACX,GAAIA,EAAQzH,QAAU,EAClB,OAAO0H,EAGX,IAFA,IAAIC,EAAM,IAAIxD,EACVyD,EAAO,GACFC,EAAK,EAAGC,EAAYL,EAASI,EAAKC,EAAU9H,OAAQ6H,IAAM,CAC/D,IAAI5F,EAAM6F,EAAUD,GAChBE,EAASJ,EAAInE,IAAIvB,GAChB8F,IACDJ,EAAIK,IAAI/F,GACR2F,EAAKzH,KAAK8B,IAGlB,IAAK,IAAIgG,EAAK,EAAGC,EAAeR,EAAYO,EAAKC,EAAalI,OAAQiI,IAAM,CACpEhG,EAAMiG,EAAaD,GACnBF,EAASJ,EAAInE,IAAIvB,GAChB8F,IACDJ,EAAIK,IAAI/F,GACR2F,EAAKzH,KAAK8B,IAGlB,OAAO2F,EAIX,SAAShB,wBAAwBQ,EAAGzG,GAChC,IAAImG,EAAWC,oBAAoBK,EAAGzG,GAAc,GACpD,OAAKmG,EAGEA,EAASF,wBAAwBQ,EAAGzG,GAFhC,GAMf,SAASwH,KAAKpJ,GACV,GAAU,OAANA,EACA,OAAO,EACX,cAAeA,GACX,IAAK,YAAa,OAAO,EACzB,IAAK,UAAW,OAAO,EACvB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAa,OAANA,EAAa,EAAe,EAClD,QAAS,OAAO,GAKxB,SAASmG,YAAYnG,GACjB,YAAa6E,IAAN7E,EAIX,SAASyG,OAAOzG,GACZ,OAAa,OAANA,EAIX,SAASqJ,SAASrJ,GACd,MAAoB,kBAANA,EAIlB,SAASwG,SAASxG,GACd,MAAoB,kBAANA,EAAuB,OAANA,EAA0B,oBAANA,EAMvD,SAASsJ,YAAYC,EAAOC,GACxB,OAAQJ,KAAKG,IACT,KAAK,EAAmB,OAAOA,EAC/B,KAAK,EAAc,OAAOA,EAC1B,KAAK,EAAiB,OAAOA,EAC7B,KAAK,EAAgB,OAAOA,EAC5B,KAAK,EAAgB,OAAOA,EAC5B,KAAK,EAAgB,OAAOA,EAEhC,IAAIE,EAAyB,IAAlBD,EAAmC,SAA6B,IAAlBA,EAAmC,SAAW,UACnGE,EAAeC,UAAUJ,EAAO1F,GACpC,QAAqBgB,IAAjB6E,EAA4B,CAC5B,IAAIE,EAASF,EAAa/E,KAAK4E,EAAOE,GACtC,GAAIjD,SAASoD,GACT,MAAM,IAAIvD,UACd,OAAOuD,EAEX,OAAOC,oBAAoBN,EAAgB,YAATE,EAAqB,SAAWA,GAItE,SAASI,oBAAoBxB,EAAGoB,GAC5B,GAAa,WAATA,EAAmB,CACnB,IAAIK,EAAazB,EAAE0B,SACnB,GAAIC,WAAWF,GAAa,CACxB,IAAIF,EAASE,EAAWnF,KAAK0D,GAC7B,IAAK7B,SAASoD,GACV,OAAOA,EAEf,IAAIK,EAAU5B,EAAE4B,QAChB,GAAID,WAAWC,GAAU,CACjBL,EAASK,EAAQtF,KAAK0D,GAC1B,IAAK7B,SAASoD,GACV,OAAOA,OAGd,CACGK,EAAU5B,EAAE4B,QAChB,GAAID,WAAWC,GAAU,CACjBL,EAASK,EAAQtF,KAAK0D,GAC1B,IAAK7B,SAASoD,GACV,OAAOA,EAEf,IAAIM,EAAa7B,EAAE0B,SACnB,GAAIC,WAAWE,GAAa,CACpBN,EAASM,EAAWvF,KAAK0D,GAC7B,IAAK7B,SAASoD,GACV,OAAOA,GAGnB,MAAM,IAAIvD,UAId,SAASmC,UAAU2B,GACf,QAASA,EAIb,SAASC,SAASD,GACd,MAAO,GAAKA,EAIhB,SAASzD,cAAcyD,GACnB,IAAIjH,EAAMoG,YAAYa,EAAU,GAChC,OAAId,SAASnG,GACFA,EACJkH,SAASlH,GAMpB,SAASkD,QAAQ+D,GACb,OAAO9F,MAAMgG,QACPhG,MAAMgG,QAAQF,GACdA,aAAoBhL,OAChBgL,aAAoB9F,MACyB,mBAA7ClF,OAAOsE,UAAUsG,SAASpF,KAAKwF,GAI7C,SAASH,WAAWG,GAEhB,MAA2B,oBAAbA,EAIlB,SAAS7D,cAAc6D,GAEnB,MAA2B,oBAAbA,EAIlB,SAASpD,cAAcoD,GACnB,OAAQf,KAAKe,IACT,KAAK,EAAgB,OAAO,EAC5B,KAAK,EAAgB,OAAO,EAC5B,QAAS,OAAO,GAGxB,SAASG,cAActK,EAAGuK,GACtB,OAAOvK,IAAMuK,GAAKvK,IAAMA,GAAKuK,IAAMA,EAMvC,SAASZ,UAAUtH,EAAGT,GAClB,IAAI4I,EAAOnI,EAAET,GACb,QAAaiD,IAAT2F,GAA+B,OAATA,EAA1B,CAEA,IAAKR,WAAWQ,GACZ,MAAM,IAAInE,UACd,OAAOmE,GAIX,SAASC,YAAYC,GACjB,IAAIC,EAAShB,UAAUe,EAAK3G,GAC5B,IAAKiG,WAAWW,GACZ,MAAM,IAAItE,UACd,IAAIrC,EAAW2G,EAAOhG,KAAK+F,GAC3B,IAAKlE,SAASxC,GACV,MAAM,IAAIqC,UACd,OAAOrC,EAIX,SAAS4G,cAAcC,GACnB,OAAOA,EAAWjL,MAItB,SAASkL,aAAa9G,GAClB,IAAI4F,EAAS5F,EAAS+G,OACtB,OAAOnB,EAAOoB,MAAepB,EAIjC,SAASqB,cAAcjH,GACnB,IAAIkH,EAAIlH,EAAS,UACbkH,GACAA,EAAEvG,KAAKX,GAMf,SAASuE,uBAAuBF,GAC5B,IAAI8C,EAAQhM,OAAO4F,eAAesD,GAClC,GAAiB,oBAANA,GAAoBA,IAAMvD,EACjC,OAAOqG,EAQX,GAAIA,IAAUrG,EACV,OAAOqG,EAEX,IAAI1H,EAAY4E,EAAE5E,UACd2H,EAAiB3H,GAAatE,OAAO4F,eAAetB,GACxD,GAAsB,MAAlB2H,GAA0BA,IAAmBjM,OAAOsE,UACpD,OAAO0H,EAEX,IAAIE,EAAcD,EAAeC,YACjC,MAA2B,oBAAhBA,GAGPA,IAAgBhD,EAFT8C,EAKJE,EAQX,SAASC,yBACL,IAAIC,EAQAC,EACAC,EACAC,EATCvF,YAAYT,IACW,qBAAjBjD,EAAKF,SACVmD,KAAkBjD,EAAKF,SACc,oBAAhCE,EAAKF,QAAQ0E,iBAEpBsE,EAAWI,uBAAuBlJ,EAAKF,UAK3C,IAAIqJ,EAAoB,IAAIrG,EACxBsG,EAAW,CACXC,iBAAkBA,iBAClBC,YAAaA,YACbC,YAAaA,aAEjB,OAAOH,EACP,SAASC,iBAAiB/D,GACtB,IAAK5I,OAAO8M,aAAaJ,GACrB,MAAM,IAAI1K,MAAM,6CAEpB,QAAQ,GACJ,KAAKoK,IAAaxD,EAAU,MAC5B,KAAK5B,YAAYqF,GACbA,EAAQzD,EACR,MACJ,KAAKyD,IAAUzD,EAAU,MACzB,KAAK5B,YAAYsF,GACbA,EAAS1D,EACT,MACJ,KAAK0D,IAAW1D,EAAU,MAC1B,aACiBlD,IAAT6G,IACAA,EAAO,IAAItG,GACfsG,EAAKzC,IAAIlB,GACT,OAGZ,SAASmE,mBAAmB7D,EAAGzG,GAC3B,IAAKuE,YAAYqF,GAAQ,CACrB,GAAIA,EAAMW,cAAc9D,EAAGzG,GACvB,OAAO4J,EACX,IAAKrF,YAAYsF,GAAS,CACtB,GAAIA,EAAOU,cAAc9D,EAAGzG,GACxB,OAAO4J,EACX,IAAKrF,YAAYuF,GAAO,CACpB,IAAI1H,EAAWyG,YAAYiB,GAC3B,MAAO,EAAM,CACT,IAAIX,EAAOD,aAAa9G,GACxB,IAAK+G,EACD,OAEJ,IAAIhD,EAAW6C,cAAcG,GAC7B,GAAIhD,EAASoE,cAAc9D,EAAGzG,GAE1B,OADAqJ,cAAcjH,GACP+D,KAM3B,IAAK5B,YAAYoF,IAAaA,EAASY,cAAc9D,EAAGzG,GACpD,OAAO2J,EAIf,SAASQ,YAAY1D,EAAGzG,GACpB,IACImG,EADAqE,EAAcR,EAAkBhH,IAAIyD,GAKxC,OAHKlC,YAAYiG,KACbrE,EAAWqE,EAAYxH,IAAIhD,IAE1BuE,YAAY4B,IAGjBA,EAAWmE,mBAAmB7D,EAAGzG,GAC5BuE,YAAY4B,KACT5B,YAAYiG,KACZA,EAAc,IAAIpH,EAClB4G,EAAkBhD,IAAIP,EAAG+D,IAE7BA,EAAYxD,IAAIhH,EAAGmG,IAEhBA,GAVIA,EAYf,SAASsE,YAAYtE,GACjB,GAAI5B,YAAY4B,GACZ,MAAM,IAAI1B,UACd,OAAOmF,IAAUzD,GAAY0D,IAAW1D,IAAa5B,YAAYuF,IAASA,EAAKjH,IAAIsD,GAEvF,SAASiE,YAAY3D,EAAGzG,EAAGmG,GACvB,IAAKsE,YAAYtE,GACb,MAAM,IAAI5G,MAAM,qCAEpB,IAAImL,EAAmBP,YAAY1D,EAAGzG,GACtC,GAAI0K,IAAqBvE,EAAU,CAC/B,IAAK5B,YAAYmG,GACb,OAAO,EAEX,IAAIF,EAAcR,EAAkBhH,IAAIyD,GACpClC,YAAYiG,KACZA,EAAc,IAAIpH,EAClB4G,EAAkBhD,IAAIP,EAAG+D,IAE7BA,EAAYxD,IAAIhH,EAAGmG,GAEvB,OAAO,GAMf,SAASlC,8BACL,IAAID,EAeJ,OAdKO,YAAYT,IAAmBc,SAAS/D,EAAKF,UAAYpD,OAAO8M,aAAaxJ,EAAKF,WACnFqD,EAAmBnD,EAAKF,QAAQmD,IAEhCS,YAAYP,KACZA,EAAmB0F,2BAElBnF,YAAYT,IAAmBc,SAAS/D,EAAKF,UAAYpD,OAAO8M,aAAaxJ,EAAKF,UACnFpD,OAAOC,eAAeqD,EAAKF,QAASmD,EAAgB,CAChDjG,YAAY,EACZC,cAAc,EACdC,UAAU,EACVC,MAAOgG,IAGRA,EAEX,SAASG,uBAAuB8F,GAG5B,IAAI9K,EAAW,IAAIwE,EACfwC,EAAW,CACXoE,cAAe,SAAU9D,EAAGzG,GACxB,IAAI2K,EAAiBxL,EAAS6D,IAAIyD,GAClC,OAAIlC,YAAYoG,IAETA,EAAe9H,IAAI7C,IAE9BoF,0BAA2BA,0BAC3BK,uBAAwBA,uBACxBI,uBAAwBA,uBACxBI,wBAAyBA,wBACzBI,uBAAwBA,wBAG5B,OADArC,EAAiBkG,iBAAiB/D,GAC3BA,EACP,SAASyE,uBAAuBnE,EAAGzG,EAAG6K,GAClC,IAAIF,EAAiBxL,EAAS6D,IAAIyD,GAC9BqE,GAAwB,EAC5B,GAAIvG,YAAYoG,GAAiB,CAC7B,IAAKE,EACD,OACJF,EAAiB,IAAIvH,EACrBjE,EAAS6H,IAAIP,EAAGkE,GAChBG,GAAwB,EAE5B,IAAIC,EAAcJ,EAAe3H,IAAIhD,GACrC,GAAIuE,YAAYwG,GAAc,CAC1B,IAAKF,EACD,OAGJ,GAFAE,EAAc,IAAI3H,EAClBuH,EAAe3D,IAAIhH,EAAG+K,IACjBd,EAASG,YAAY3D,EAAGzG,EAAGmG,GAK5B,MAJAwE,EAAeK,OAAOhL,GAClB8K,GACA3L,EAAS6L,OAAOvE,GAEd,IAAIlH,MAAM,8BAGxB,OAAOwL,EAIX,SAAStF,uBAAuBe,EAAaC,EAAGzG,GAC5C,IAAI+K,EAAcH,uBAAuBnE,EAAGzG,GAAc,GAC1D,OAAIuE,YAAYwG,IAETnE,UAAUmE,EAAYlI,IAAI2D,IAIrC,SAASX,uBAAuBW,EAAaC,EAAGzG,GAC5C,IAAI+K,EAAcH,uBAAuBnE,EAAGzG,GAAc,GAC1D,IAAIuE,YAAYwG,GAEhB,OAAOA,EAAY/H,IAAIwD,GAI3B,SAASpB,0BAA0BoB,EAAaK,EAAeJ,EAAGzG,GAC9D,IAAI+K,EAAcH,uBAAuBnE,EAAGzG,GAAc,GAC1D+K,EAAY/D,IAAIR,EAAaK,GAIjC,SAASZ,wBAAwBQ,EAAGzG,GAChC,IAAIiH,EAAO,GACP8D,EAAcH,uBAAuBnE,EAAGzG,GAAc,GAC1D,GAAIuE,YAAYwG,GACZ,OAAO9D,EACX,IAAIgE,EAAUF,EAAY9D,OACtB7E,EAAWyG,YAAYoC,GACvB/K,EAAI,EACR,MAAO,EAAM,CACT,IAAIiJ,EAAOD,aAAa9G,GACxB,IAAK+G,EAED,OADAlC,EAAK5H,OAASa,EACP+G,EAEX,IAAIiE,EAAYlC,cAAcG,GAC9B,IACIlC,EAAK/G,GAAKgL,EAEd,MAAOtN,GACH,IACIyL,cAAcjH,GAElB,QACI,MAAMxE,GAGdsC,KAGR,SAASmG,uBAAuBG,EAAaC,EAAGzG,GAC5C,IAAI+K,EAAcH,uBAAuBnE,EAAGzG,GAAc,GAC1D,GAAIuE,YAAYwG,GACZ,OAAO,EACX,IAAKA,EAAYC,OAAOxE,GACpB,OAAO,EACX,GAAyB,IAArBuE,EAAYI,KAAY,CACxB,IAAIR,EAAiBxL,EAAS6D,IAAIyD,GAC7BlC,YAAYoG,KACbA,EAAeK,OAAOhL,GACM,IAAxB2K,EAAeQ,MACfhM,EAAS6L,OAAOL,IAI5B,OAAO,GAGf,SAASZ,uBAAuBqB,GAC5B,IAAI/F,EAAiB+F,EAAQ/F,eAAgBG,EAAiB4F,EAAQ5F,eAAgBI,EAAiBwF,EAAQxF,eAAgBI,EAAqBoF,EAAQpF,mBAAoBE,EAAiBkF,EAAQlF,eACrMmF,EAAgB,IAAI1H,EACpBwC,EAAW,CACXoE,cAAe,SAAU9D,EAAGzG,GACxB,IAAIsL,EAAsBD,EAAcrI,IAAIyD,GAC5C,QAAKlC,YAAY+G,KAAwBA,EAAoBzI,IAAI7C,OAG7DgG,EAAmBS,EAAGzG,GAAGX,SACrBkF,YAAY+G,KACZA,EAAsB,IAAI9H,EAC1B6H,EAAcrE,IAAIP,EAAG6E,IAEzBA,EAAoBjE,IAAIrH,IACjB,IAIfoF,0BAA2BC,EAC3BI,uBAAwBD,EACxBK,uBAAwBD,EACxBK,wBAAyBD,EACzBK,uBAAwBH,GAE5B,OAAOC,EAMX,SAASC,oBAAoBK,EAAGzG,EAAG6K,GAC/B,IAAIU,EAAqBvH,EAAiBmG,YAAY1D,EAAGzG,GACzD,IAAKuE,YAAYgH,GACb,OAAOA,EAEX,GAAIV,EAAQ,CACR,GAAI7G,EAAiBoG,YAAY3D,EAAGzG,EAAGkE,GACnC,OAAOA,EAEX,MAAM,IAAI3E,MAAM,mBAKxB,SAASgE,oBACL,IAAIiI,EAAgB,GAChBC,EAAgB,GAChBC,EAA6B,WAC7B,SAASA,YAAYzE,EAAMpH,EAAQ8L,GAC/BxN,KAAKyN,OAAS,EACdzN,KAAK0N,MAAQ5E,EACb9I,KAAK2N,QAAUjM,EACf1B,KAAK4N,UAAYJ,EAoCrB,OAlCAD,YAAY7J,UAAU,cAAgB,WAAc,OAAO1D,MAC3DuN,YAAY7J,UAAUM,GAAkB,WAAc,OAAOhE,MAC7DuN,YAAY7J,UAAUsH,KAAO,WACzB,IAAI6C,EAAQ7N,KAAKyN,OACjB,GAAII,GAAS,GAAKA,EAAQ7N,KAAK0N,MAAMxM,OAAQ,CACzC,IAAI2I,EAAS7J,KAAK4N,UAAU5N,KAAK0N,MAAMG,GAAQ7N,KAAK2N,QAAQE,IAS5D,OARIA,EAAQ,GAAK7N,KAAK0N,MAAMxM,QACxBlB,KAAKyN,QAAU,EACfzN,KAAK0N,MAAQJ,EACbtN,KAAK2N,QAAUL,GAGftN,KAAKyN,SAEF,CAAE5N,MAAOgK,EAAQoB,MAAM,GAElC,MAAO,CAAEpL,WAAOiF,EAAWmG,MAAM,IAErCsC,YAAY7J,UAAUoK,MAAQ,SAAUC,GAMpC,MALI/N,KAAKyN,QAAU,IACfzN,KAAKyN,QAAU,EACfzN,KAAK0N,MAAQJ,EACbtN,KAAK2N,QAAUL,GAEbS,GAEVR,YAAY7J,UAAUsK,OAAS,SAAUnO,GAMrC,OALIG,KAAKyN,QAAU,IACfzN,KAAKyN,QAAU,EACfzN,KAAK0N,MAAQJ,EACbtN,KAAK2N,QAAUL,GAEZ,CAAEzN,MAAOA,EAAOoL,MAAM,IAE1BsC,YAzCqB,GA2C5BrI,EAAqB,WACrB,SAASA,MACLlF,KAAK0N,MAAQ,GACb1N,KAAK2N,QAAU,GACf3N,KAAKiO,UAAYZ,EACjBrN,KAAKkO,aAAe,EA+DxB,OA7DA9O,OAAOC,eAAe6F,IAAIxB,UAAW,OAAQ,CACzCmB,IAAK,WAAc,OAAO7E,KAAK0N,MAAMxM,QACrCxB,YAAY,EACZC,cAAc,IAElBuF,IAAIxB,UAAUgB,IAAM,SAAUvB,GAAO,OAAOnD,KAAKmO,MAAMhL,GAAgB,IAAU,GACjF+B,IAAIxB,UAAUmB,IAAM,SAAU1B,GAC1B,IAAI0K,EAAQ7N,KAAKmO,MAAMhL,GAAgB,GACvC,OAAO0K,GAAS,EAAI7N,KAAK2N,QAAQE,QAAS/I,GAE9CI,IAAIxB,UAAUmF,IAAM,SAAU1F,EAAKtD,GAC/B,IAAIgO,EAAQ7N,KAAKmO,MAAMhL,GAAgB,GAEvC,OADAnD,KAAK2N,QAAQE,GAAShO,EACfG,MAEXkF,IAAIxB,UAAUmJ,OAAS,SAAU1J,GAC7B,IAAI0K,EAAQ7N,KAAKmO,MAAMhL,GAAgB,GACvC,GAAI0K,GAAS,EAAG,CAEZ,IADA,IAAIb,EAAOhN,KAAK0N,MAAMxM,OACbU,EAAIiM,EAAQ,EAAGjM,EAAIoL,EAAMpL,IAC9B5B,KAAK0N,MAAM9L,EAAI,GAAK5B,KAAK0N,MAAM9L,GAC/B5B,KAAK2N,QAAQ/L,EAAI,GAAK5B,KAAK2N,QAAQ/L,GAQvC,OANA5B,KAAK0N,MAAMxM,SACXlB,KAAK2N,QAAQzM,SACTqJ,cAAcpH,EAAKnD,KAAKiO,aACxBjO,KAAKiO,UAAYZ,EACjBrN,KAAKkO,aAAe,IAEjB,EAEX,OAAO,GAEXhJ,IAAIxB,UAAU0K,MAAQ,WAClBpO,KAAK0N,MAAMxM,OAAS,EACpBlB,KAAK2N,QAAQzM,OAAS,EACtBlB,KAAKiO,UAAYZ,EACjBrN,KAAKkO,aAAe,GAExBhJ,IAAIxB,UAAUoF,KAAO,WAAc,OAAO,IAAIyE,EAAYvN,KAAK0N,MAAO1N,KAAK2N,QAASU,SACpFnJ,IAAIxB,UAAUhC,OAAS,WAAc,OAAO,IAAI6L,EAAYvN,KAAK0N,MAAO1N,KAAK2N,QAASW,WACtFpJ,IAAIxB,UAAUyB,QAAU,WAAc,OAAO,IAAIoI,EAAYvN,KAAK0N,MAAO1N,KAAK2N,QAASY,WACvFrJ,IAAIxB,UAAU,cAAgB,WAAc,OAAO1D,KAAKmF,WACxDD,IAAIxB,UAAUM,GAAkB,WAAc,OAAOhE,KAAKmF,WAC1DD,IAAIxB,UAAUyK,MAAQ,SAAUhL,EAAKqL,GACjC,IAAKjE,cAAcvK,KAAKiO,UAAW9K,GAAM,CACrCnD,KAAKkO,aAAe,EACpB,IAAK,IAAItM,EAAI,EAAGA,EAAI5B,KAAK0N,MAAMxM,OAAQU,IACnC,GAAI2I,cAAcvK,KAAK0N,MAAM9L,GAAIuB,GAAM,CACnCnD,KAAKkO,YAActM,EACnB,OASZ,OALI5B,KAAKkO,YAAc,GAAKM,IACxBxO,KAAKkO,YAAclO,KAAK0N,MAAMxM,OAC9BlB,KAAK0N,MAAMrM,KAAK8B,GAChBnD,KAAK2N,QAAQtM,UAAKyD,IAEf9E,KAAKkO,aAEThJ,IApEa,GAsExB,OAAOA,EACP,SAASmJ,OAAOlL,EAAKG,GACjB,OAAOH,EAEX,SAASmL,SAAShL,EAAGzD,GACjB,OAAOA,EAEX,SAAS0O,SAASpL,EAAKtD,GACnB,MAAO,CAACsD,EAAKtD,IAIrB,SAAS0F,oBACL,IAAID,EAAqB,WACrB,SAASA,MACLtF,KAAKyO,KAAO,IAAIxJ,EAgBpB,OAdA7F,OAAOC,eAAeiG,IAAI5B,UAAW,OAAQ,CACzCmB,IAAK,WAAc,OAAO7E,KAAKyO,KAAKzB,MACpCtN,YAAY,EACZC,cAAc,IAElB2F,IAAI5B,UAAUgB,IAAM,SAAU7E,GAAS,OAAOG,KAAKyO,KAAK/J,IAAI7E,IAC5DyF,IAAI5B,UAAUwF,IAAM,SAAUrJ,GAAS,OAAOG,KAAKyO,KAAK5F,IAAIhJ,EAAOA,GAAQG,MAC3EsF,IAAI5B,UAAUmJ,OAAS,SAAUhN,GAAS,OAAOG,KAAKyO,KAAK5B,OAAOhN,IAClEyF,IAAI5B,UAAU0K,MAAQ,WAAcpO,KAAKyO,KAAKL,SAC9C9I,IAAI5B,UAAUoF,KAAO,WAAc,OAAO9I,KAAKyO,KAAK3F,QACpDxD,IAAI5B,UAAUhC,OAAS,WAAc,OAAO1B,KAAKyO,KAAK3F,QACtDxD,IAAI5B,UAAUyB,QAAU,WAAc,OAAOnF,KAAKyO,KAAKtJ,WACvDG,IAAI5B,UAAU,cAAgB,WAAc,OAAO1D,KAAK8I,QACxDxD,IAAI5B,UAAUM,GAAkB,WAAc,OAAOhE,KAAK8I,QACnDxD,IAlBa,GAoBxB,OAAOA,EAGX,SAASI,wBACL,IAAIgJ,EAAY,GACZ5F,EAAOtE,EAAQL,SACfwK,EAAUC,kBACd,OAAsB,WAClB,SAASnJ,UACLzF,KAAK6O,KAAOD,kBAuBhB,OArBAnJ,QAAQ/B,UAAUgB,IAAM,SAAUzB,GAC9B,IAAI6L,EAAQC,wBAAwB9L,GAAmB,GACvD,YAAiB6B,IAAVgK,GAAsBtK,EAAQE,IAAIoK,EAAO9O,KAAK6O,OAEzDpJ,QAAQ/B,UAAUmB,IAAM,SAAU5B,GAC9B,IAAI6L,EAAQC,wBAAwB9L,GAAmB,GACvD,YAAiB6B,IAAVgK,EAAsBtK,EAAQK,IAAIiK,EAAO9O,KAAK6O,WAAQ/J,GAEjEW,QAAQ/B,UAAUmF,IAAM,SAAU5F,EAAQpD,GACtC,IAAIiP,EAAQC,wBAAwB9L,GAAmB,GAEvD,OADA6L,EAAM9O,KAAK6O,MAAQhP,EACZG,MAEXyF,QAAQ/B,UAAUmJ,OAAS,SAAU5J,GACjC,IAAI6L,EAAQC,wBAAwB9L,GAAmB,GACvD,YAAiB6B,IAAVgK,UAA6BA,EAAM9O,KAAK6O,OAEnDpJ,QAAQ/B,UAAU0K,MAAQ,WAEtBpO,KAAK6O,KAAOD,mBAETnJ,QAzBU,GA2BrB,SAASmJ,kBACL,IAAIzL,EACJ,GACIA,EAAM,cAAgB6L,mBACnBxK,EAAQE,IAAIoE,EAAM3F,IAEzB,OADA2F,EAAK3F,IAAO,EACLA,EAEX,SAAS4L,wBAAwB9L,EAAQkB,GACrC,IAAKV,EAAOmB,KAAK3B,EAAQ0L,GAAU,CAC/B,IAAKxK,EACD,OACJ/E,OAAOC,eAAe4D,EAAQ0L,EAAS,CAAE9O,MAAO2E,EAAQL,WAE5D,OAAOlB,EAAO0L,GAElB,SAASM,gBAAgBC,EAAQlC,GAC7B,IAAK,IAAIpL,EAAI,EAAGA,EAAIoL,IAAQpL,EACxBsN,EAAOtN,GAAqB,IAAhBuN,KAAKC,SAAkB,EACvC,OAAOF,EAEX,SAASG,eAAerC,GACpB,GAA0B,oBAAfsC,WAA2B,CAClC,IAAIC,EAAQ,IAAID,WAAWtC,GAU3B,MATsB,qBAAXwC,OACPA,OAAOC,gBAAgBF,GAEE,qBAAbG,SACZA,SAASD,gBAAgBF,GAGzBN,gBAAgBM,EAAOvC,GAEpBuC,EAEX,OAAON,gBAAgB,IAAI3K,MAAM0I,GAAOA,GAE5C,SAASgC,aACL,IAAIW,EAAON,eAAeX,GAE1BiB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,IAAVA,EAAK,GAAY,IAE3B,IADA,IAAI9F,EAAS,GACJ+F,EAAS,EAAGA,EAASlB,IAAakB,EAAQ,CAC/C,IAAIC,EAAOF,EAAKC,GACD,IAAXA,GAA2B,IAAXA,GAA2B,IAAXA,IAChC/F,GAAU,KACVgG,EAAO,KACPhG,GAAU,KACdA,GAAUgG,EAAK7F,SAAS,IAAI8F,cAEhC,OAAOjG,GAIf,SAASpF,eAAekG,GAGpB,OAFAA,EAAIoF,QAAKjL,SACF6F,EAAIoF,GACJpF,EAlvCX5H,EAAS,WAAYkD,UAqDrBlD,EAAS,WAAY/B,UA+CrB+B,EAAS,iBAAkBmE,gBA0C3BnE,EAAS,cAAeoE,aA0CxBpE,EAAS,iBAAkBsE,gBA0C3BtE,EAAS,cAAewE,aA0CxBxE,EAAS,iBAAkB0E,gBAyC3B1E,EAAS,kBAAmB4E,iBAyC5B5E,EAAS,qBAAsB8E,oBAiD/B9E,EAAS,iBAAkBgF,oBAjhBnC,CAu3CGvF,IAAYA,EAAU,O,wDCt4CzB,wOAAIjB,GAAJ,UAAQnC,OAAOC,gBACX2C,EAAI,CAACzC,EAAGE,EAAGD,IAAMC,KAAKF,EAAIgC,EAAEhC,EAAGE,EAAG,CAAEC,YAAY,EAAIC,cAAc,EAAIC,UAAU,EAAIC,MAAOL,IAAOD,EAAEE,GAAKD,EACzGiB,EAAI,CAAClB,EAAGE,EAAGD,KAAOwC,EAAEzC,EAAe,iBAALE,EAAgBA,EAAI,GAAKA,EAAGD,GAAIA,GAalE,MAAMwQ,EACJ,YAAYvQ,EAAGD,EAAGoC,GAChBnB,EAAET,KAAM,MACRS,EAAET,KAAM,eACRS,EAAET,KAAM,WACRA,KAAKiQ,GAAKxQ,EAAGO,KAAKkQ,YAAc1Q,EAAGQ,KAAKmQ,QAAUvO,GAGtD,MAAMW,EAEJ,YAAY9C,EAAGD,EAAGoC,EAAGjB,GACnBF,EAAET,KAAM,MACRS,EAAET,KAAM,aACRS,EAAET,KAAM,QACRS,EAAET,KAAM,oBACRS,EAAET,KAAM,eACRS,EAAET,KAAM,WAERS,EAAET,KAAM,WAERS,EAAET,KAAM,aAERS,EAAET,KAAM,sBACRA,KAAKc,UAAYrB,EAAGO,KAAKa,KAAOrB,EAAGQ,KAAKoQ,iBAAmBxO,EAAG5B,KAAKkQ,YAAcvP,GAGrE,OAKA,OAUhB,IAAIxB,EAAoB,CAAEI,IAAOA,EAAEA,EAAE8Q,KAAO,GAAK,OAAQ9Q,EAAEA,EAAE+Q,OAAS,GAAK,SAAU/Q,GAA7D,CAAiEJ,GAAK,IAC9F,MAAMoR,UAAU,OACd,cACErQ,QACAO,EAAET,KAAM,mBAAoBb,EAAEkR,MAC9BrQ,KAAKG,KAAO,SAEd,qBAAqBX,GACnB,OAAOQ,KAAKwQ,iBAAmBhR,EAAGQ,MAGtB,OAKA,OAKA,OAMA,OAOhB,MAAMyQ,UAAU,OACd,cACEvQ,QAASF,KAAKG,KAAO,QAGT,OAKA,OAWhB,MAAMuQ,UAAU,OACd,YAAYlR,EAAGoC,EAAGjB,EAAGP,GACnBF,MAAM0B,EAAGjB,GACTF,EAAET,KAAM,eACRS,EAAET,KAAM,mBACRA,KAAK2Q,gBAAkBnR,EAAGQ,KAAK4Q,YAAcxQ,EAE/C,SAASZ,GACP,OAAOQ,KAAK2Q,gBAAgBE,kBAAkB7Q,KAAK4Q,YAAapR,IAGpE,MAAMS,UAAU,OACd,YAAYT,EAAGoC,EAAGjB,EAAGP,EAAGM,EAAGpB,GACzBY,MAAM0B,EAAGjB,GACTF,EAAET,KAAM,cACRS,EAAET,KAAM,aACRS,EAAET,KAAM,eACRS,EAAET,KAAM,mBACRA,KAAK2Q,gBAAkBnR,EAAGQ,KAAK8Q,WAAa1Q,EAAGJ,KAAK+Q,UAAYrQ,EAAGV,KAAK4Q,YAActR,EAExF,SAASE,GACP,OAAOQ,KAAK2Q,gBAAgBK,qBAAqBhR,KAAK4Q,YAAa5Q,KAAK+Q,UAAW/Q,KAAK8Q,WAAYtR,IAGxG,MAAMiC,UAAU,OACd,YAAYjC,EAAGoC,EAAGjB,EAAGP,EAAGM,GACtBR,MAAM0B,EAAGjB,GACTF,EAAET,KAAM,cACRS,EAAET,KAAM,eACRS,EAAET,KAAM,mBACRA,KAAK2Q,gBAAkBnR,EAAGQ,KAAKiR,WAAa7Q,EAAGJ,KAAK4Q,YAAclQ,EAEpE,SAASlB,GACP,OAAOQ,KAAK2Q,gBAAgBO,iBAAiBlR,KAAK4Q,YAAa5Q,KAAKiR,WAAYzR,IAGpF,MAAM2L,EACJ,YAAY1L,GACVgB,EAAET,KAAM,gBACR,MAAMR,EAAI,0DACVQ,KAAKmR,cAAqB,MAAL1R,OAAY,EAASA,EAAE0R,aAAa3R,KAAO,OAAE2R,aAAa3R,GAEjF,SAASC,EAAGD,GACV,OAAOQ,KAAKmR,aAAaC,OAAO,WAAY,CAAC3R,EAAGD,IAElD,WAAWC,EAAGD,GACZ,OAAOQ,KAAKmR,aAAaC,OAAO,aAAc,CAAC3R,EAAGD,IAEpD,MAAMC,GACJ,OAAOO,KAAKmR,aAAaC,OAAO,QAAS,CAAC3R,IAE5C,aAAaA,EAAGD,GACd,OAAOQ,KAAKmR,aAAaC,OAAO,eAAgB,CAAC3R,EAAGD,IAEtD,WAAWC,EAAGD,GACZ,OAAOQ,KAAKmR,aAAaC,OAAO,aAAc,CAAC3R,EAAGD,IAEpD,cAAcC,EAAGD,GACf,OAAOQ,KAAKmR,aAAaC,OAAO,gBAAiB,CAAC3R,EAAGD,IAEvD,cAAcC,EAAGD,GACf,MAAMoC,QAAU5B,KAAK6Q,kBAAkBpR,EAAGD,GAC1C,OAAO,IAAIkR,EAAE1Q,KAAMR,EAAGoC,EAAGnC,GAE3B,wBAAwBA,EAAGD,GACzB,OAAOQ,KAAKmR,aAAaC,OAAO,UAAW,CAAC3R,EAAGD,IAEjD,SAASC,EAAGD,GACV,OAAOQ,KAAKmR,aAAaC,OAAO,WAAY,CAAC3R,EAAGD,IAElD,UAAUC,EAAGD,GACX,OAAOQ,KAAKmR,aAAaC,OAAO,YAAa,CAAC3R,EAAGD,IAEnD,WAAWC,EAAGD,EAAGoC,GACf,OAAO5B,KAAKmR,aAAaC,OAAO,aAAc,CAAC3R,EAAGD,EAAGoC,IAEvD,qBAAqBnC,EAAGD,EAAGoC,EAAGjB,GAC5B,MAAMP,QAAUJ,KAAKgR,qBAAqBvR,EAAGD,EAAGoC,EAAGjB,GACnD,OAAO,IAAIV,EAAED,KAAMW,EAAGP,EAAGwB,EAAGpC,EAAGC,GAEjC,qBAAqBA,EAAGD,EAAGoC,EAAGjB,GAC5B,OAAOX,KAAKmR,aAAaC,OAAO,iBAAkB,CAAC3R,EAAGD,EAAGoC,EAAGjB,IAE9D,KAAKlB,EAAGD,GACN,OAAOQ,KAAKmR,aAAaC,OAAO,OAAQ,CAAC3R,EAAGD,IAE9C,aAAaC,EAAGD,EAAGoC,GACjB,MAAMjB,QAAUX,KAAKkR,iBAAiBzR,EAAGD,EAAGoC,GAC5C,OAAO,IAAIH,EAAEzB,KAAM4B,EAAGjB,EAAGnB,EAAGC,GAE9B,uBAAuBA,EAAGD,EAAGoC,GAC3B,OAAO5B,KAAKmR,aAAaC,OAAO,SAAU,CAAC3R,EAAGD,EAAGoC,IAEnD,OAAOnC,EAAGD,GACR,OAAOQ,KAAKmR,aAAaC,OAAO,SAAU,CAAC3R,EAAGD,KAGlD,MAAMqC,EAAI,IAAIsJ,EACd,MAAMxJ,EACJ,YAAYlC,EAAGD,EAAGoC,GAChBnB,EAAET,KAAM,sBACRS,EAAET,KAAM,iBACRS,EAAET,KAAM,eACRS,EAAET,KAAM,mBACRA,KAAKqR,mBAAqB5R,EAAGO,KAAKsR,cAAgB9R,EAAGQ,KAAK4Q,aAAenR,EAAI,IAAMD,GAAGsQ,cAAe9P,KAAK2Q,gBAAkB/O,GAAKC,EAEnI,eAAepC,GACb,MAAMD,QAAUQ,KAAKuR,uBAAuB9R,GAC5C,OAAOO,KAAK2Q,gBAAgBa,SAASxR,KAAK4Q,YAAapR,GAEzD,iBAAiBC,GACf,MAAMD,QAAUQ,KAAKuR,uBAAuB9R,GAC5C,OAAOO,KAAK2Q,gBAAgBc,WAAWzR,KAAK4Q,YAAapR,GAE3D,QACE,OAAOQ,KAAK2Q,gBAAgBe,MAAM1R,KAAK4Q,aAEzC,aAAanR,GACX,OAAOO,KAAK2Q,gBAAgBgB,aAAa3R,KAAK4Q,YAAanR,GAE7D,WAAWA,GACT,OAAOO,KAAK2Q,gBAAgBiB,WAAW5R,KAAK4Q,YAAanR,GAE3D,cAAcA,GACZ,OAAOO,KAAK2Q,gBAAgBkB,cAAc7R,KAAK4Q,YAAanR,GAE9D,QAAQA,GACN,OAAOO,KAAK2Q,gBAAgBmB,QAAQ9R,KAAK4Q,YAAanR,GAExD,SAASA,GACP,OAAOO,KAAK2Q,gBAAgBoB,SAAS/R,KAAK4Q,YAAanR,GAEzD,UAAUA,GACR,OAAOO,KAAK2Q,gBAAgBqB,UAAUhS,KAAK4Q,YAAanR,GAE1D,WAAWA,EAAGD,GACZ,OAAOQ,KAAK2Q,gBAAgBsB,WAAWjS,KAAK4Q,YAAanR,EAAGD,GAE9D,eAAeC,EAAGD,EAAGoC,GACnB,OAAO5B,KAAK2Q,gBAAgBuB,eAAelS,KAAK4Q,YAAanR,EAAGD,EAAGoC,GAErE,WAAWnC,GACT,MAAMD,QAAUQ,KAAKmS,mBAAmB1S,GACxC,OAAOO,KAAK2Q,gBAAgByB,KAAKpS,KAAK4Q,YAAapR,GAErD,OAAOC,EAAGD,GACR,OAAOQ,KAAK2Q,gBAAgB0B,OAAOrS,KAAK4Q,YAAanR,EAAGD,GAE1D,aAAaC,GACX,MAAMD,QAAUQ,KAAKmS,mBAAmB1S,GACxC,OAAOO,KAAK2Q,gBAAgB2B,OAAOtS,KAAK4Q,YAAapR,GAEvD,6BAA6BC,GAC3B,OAAO8S,QAAQC,QAAQ/S,GAEzB,yBAAyBA,GACvB,OAAO8S,QAAQC,QAAQ/S,IAG3B,MAAMgT,UAAU,OACd,cACEvS,MAAM,OAAEiR,aAAa,6DAGzB,MAAMpP,UAAU,OACd,cACE7B,MAAM,OAAEiR,aAAa,yDAEvB,0BAA0B1R,EAAGD,GAC3B,OAAOQ,KAAKmR,aAAaC,OAAO,4BAA6B,CAAC3R,EAAGD,KAGrE,MAAM6C,UAAU,OACd,cACEnC,MAAM,OAAEiR,aAAa,yDAEvB,6BAA6B1R,EAAGD,GAC9B,OAAOQ,KAAKmR,aAAaC,OAAO,+BAAgC,CAAC3R,EAAGD,IAEtE,kBAAkBC,GAChB,OAAOO,KAAKmR,aAAaC,OAAO,oBAAqB,CAAC3R,IAExD,QAAQA,GACN,OAAOO,KAAKmR,aAAaC,OAAO,UAAW,CAAC3R,IAE9C,UAAUA,GACR,OAAOO,KAAKmR,aAAaC,OAAO,YAAa,CAAC3R,KAGlD,MAAM+B,EAAI,IAAIO,EAAK2Q,EAAI,IAAIrQ,EAAKhC,EAAI,IAAI8K,EAAK7J,EAAI,IAAImR,EACrD,IAAIjI,EACJ,CAAEjL,IACA,SAASE,IACP,OAAO+B,EAGT,SAAShC,IACP,OAAOkT,EAGT,SAAS9Q,IACP,OAAOvB,EAGT,SAASM,IACP,OAAOW,EAGT,SAASlB,EAAEM,EAAGpB,GACZ,OAAO,IAAIqC,EAAEjB,EAAGpB,GAdlBC,EAAEoT,oBAAsBlT,EAIxBF,EAAEqT,oBAAsBpT,EAIxBD,EAAEsT,mBAAqBjR,EAIvBrC,EAAEuT,uBAAyBnS,EAI3BpB,EAAEwT,oBAAsB3S,GApB1B,CAqBGoK,IAAMA,EAAI","file":"js/chunk-304d58ac.227fae62.js","sourcesContent":["var l = Object.defineProperty;\nvar d = (r, t, e) => t in r ? l(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar o = (r, t, e) => (d(r, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nclass h {\n  constructor() {\n    o(this, \"type\", \"\");\n  }\n}\nclass x extends h {\n  constructor() {\n    super(), this.type = \"NotNull\";\n  }\n}\nclass c {\n  constructor(t) {\n    o(this, \"type\", \"\");\n    this.type = t;\n  }\n}\nclass T extends c {\n  constructor(e) {\n    super(\"array\");\n    /**\n     * The type the defined array will contain\n     * <p>\n     */\n    o(this, \"contains\");\n    this.contains = e;\n  }\n}\nclass D extends c {\n  constructor() {\n    super(\"boolean\");\n  }\n}\nclass u extends c {\n  constructor(e, s, a, n, p) {\n    super(e);\n    /**\n     * This is the name of the {@link EnumC3Type} such as \"EventType\"\n     */\n    o(this, \"name\");\n    /**\n     * The namespace that this {@link ComplexC3Type} belongs to\n     */\n    o(this, \"namespace\");\n    /**\n     * The list of Decorators that should be applied to this type\n     */\n    o(this, \"decorators\", null);\n    /**\n     * Metadata is for putting things like descriptions or hints for code generators, or other things tools can use.\n     */\n    o(this, \"metadata\");\n    this.name = s, this.namespace = a, this.decorators = n, this.metadata = p;\n  }\n  /**\n   * Checks if this type has a {@link C3Decorator} for the given type\n   * @param value the {@link C3Decorator} to check for\n   * @return true if the type has a {@link C3Decorator} for the given type false if not\n   */\n  containsDecorator(e) {\n    return this.findDecorator(e) !== null;\n  }\n  /**\n   * Checks if this type has any {@link C3Decorator}\n   * @return true if any {@link C3Decorator}s are present false if not\n   */\n  hasDecorators() {\n    let e = !1;\n    return this.decorators && (e = this.decorators.length > 0), e;\n  }\n  /**\n   * Adds a new decorator to this type\n   * @param decorator the decorator to add\n   * @return this {@link C3Base}\n   */\n  addDecorator(e) {\n    if (!this.decorators)\n      this.decorators = [];\n    else if (this.containsDecorator(e))\n      throw new Error(`C3Base already contains decorator for name ${e.type}`);\n    return this.decorators.push(e), this;\n  }\n  /**\n   * Finds a decorator for the given type if it exists\n   * @param value the type to find\n   * @return the decorator if it exists null if not\n   */\n  findDecorator(e) {\n    let s = null;\n    if (this.decorators) {\n      for (const a of this.decorators)\n        if (a.type === e.type) {\n          s = a;\n          break;\n        }\n    }\n    return s;\n  }\n  /**\n   * Gets the fully qualified name for this {@link ComplexC3Type} which is the namespace + '.' + name\n   * @return the fully qualified name for this {@link ComplexC3Type}\n   */\n  getQualifiedName() {\n    return (this.namespace ? this.namespace + \".\" : \"\") + this.name;\n  }\n}\nclass w extends c {\n  constructor() {\n    super(\"byte\");\n  }\n}\nclass S extends c {\n  constructor() {\n    super(\"char\");\n  }\n}\nclass b extends c {\n  constructor() {\n    super(\"date\");\n  }\n}\nclass N extends c {\n  constructor() {\n    super(\"double\");\n  }\n}\nclass v extends u {\n  constructor(e, s, a, n) {\n    super(\"enum\", e, s, a, n);\n    /**\n     * The values that are part of this enum\n     */\n    o(this, \"values\", []);\n  }\n  addValue(e) {\n    return this.values.push(e), this;\n  }\n}\nclass g extends c {\n  constructor() {\n    super(\"float\");\n  }\n}\nclass i {\n  constructor(t, e, s) {\n    /**\n     * The name of this {@link ArgumentDefinition}\n     */\n    o(this, \"name\");\n    /**\n     * The list of Decorators that should be applied to this type\n     */\n    o(this, \"decorators\", null);\n    /**\n     * The metadata keyword is legal on any {@link AbstractDefinition}, The objects provided must be serializable to JSON.\n     * Usually, metadata is for putting things like descriptions or hints for code generators, or other things tools can use.\n     */\n    o(this, \"metadata\", null);\n    this.name = t, this.decorators = e, this.metadata = s;\n  }\n  /**\n   * Checks if this type has a {@link C3Decorator} for the given type\n   * @param value the {@link C3Decorator} to check for\n   * @return true if the type has a {@link C3Decorator} for the given type false if not\n   */\n  containsDecorator(t) {\n    return this.findDecorator(t) !== null;\n  }\n  /**\n   * Checks if this type has any {@link C3Decorator}\n   * @return true if any {@link C3Decorator}s are present false if not\n   */\n  hasDecorators() {\n    let t = !1;\n    return this.decorators && (t = this.decorators.length > 0), t;\n  }\n  /**\n   * Adds a new decorator to this type\n   * @param decorator the decorator to add\n   * @return this {@link C3Base}\n   */\n  addDecorator(t) {\n    if (!this.decorators)\n      this.decorators = [];\n    else if (this.containsDecorator(t))\n      throw new Error(`C3Base already contains decorator for name ${t.type}`);\n    this.decorators.push(t);\n  }\n  /**\n   * Finds a decorator for the given type if it exists\n   * @param value the type to find\n   * @return the decorator if it exists null if not\n   */\n  findDecorator(t) {\n    let e = null;\n    if (this.decorators) {\n      for (const s of this.decorators)\n        if (s.type === t.type) {\n          e = s;\n          break;\n        }\n    }\n    return e;\n  }\n}\nclass y extends i {\n  constructor(e, s, a, n) {\n    super(e, a, n);\n    /**\n     * The type of this {@link ParameterDefinition}\n     */\n    o(this, \"type\");\n    this.type = s;\n  }\n}\nclass f extends c {\n  constructor() {\n    super(\"void\");\n  }\n}\nclass E extends i {\n  constructor(e, s, a) {\n    super(e, s, a);\n    /**\n     * This is the C3Type that defines the return type of this function.\n     */\n    o(this, \"returnType\", new f());\n    /**\n     * This array defines the {@link C3Type}s that define the arguments for this function.\n     * Argument names must be unique.\n     */\n    o(this, \"parameters\", []);\n  }\n  /**\n   * Adds a new {@link ParameterDefinition} to this {@link FunctionDefinition}\n   * {@link ParameterDefinition} must have unique names\n   * @param name the name of the parameter\n   * @param c3Type the type of the parameter\n   * @param decorators the decorators to apply to the parameter\n   */\n  addParameter(e, s, a) {\n    const n = new y(e, s, a);\n    if (this.parameters.find((p) => p.name === e))\n      throw new Error(`FunctionDefinition already contains parameter for name ${e}`);\n    return this.parameters.push(n), this;\n  }\n}\nclass P extends c {\n  constructor() {\n    super(\"int\");\n  }\n}\nclass $ extends c {\n  constructor() {\n    super(\"long\");\n  }\n}\nclass k extends c {\n  constructor() {\n    super(\"map\");\n    /**\n     * The type of the defined map's keys.\n     */\n    o(this, \"key\", null);\n    /**\n     * The type of the defined map's values.\n     */\n    o(this, \"value\", null);\n  }\n}\nclass B {\n  constructor() {\n    /**\n     * This is the name of this {@link NamespaceDefinition}\n     */\n    o(this, \"name\", \"\");\n    /**\n     * This is all the objects defined for a given namespace\n     */\n    o(this, \"complexC3Types\", /* @__PURE__ */ new Set());\n    /**\n     * This is all the services defined for a given namespace\n     */\n    o(this, \"services\", /* @__PURE__ */ new Set());\n  }\n  addComplexC3Types(t) {\n    if (this.complexC3Types.has(t))\n      throw new Error(`This NamespaceSchema already contains an ComplexC3Type for name ${t.name}`);\n    return this.complexC3Types.add(t), this;\n  }\n  addServiceSchema(t) {\n    if (this.services.has(t))\n      throw new Error(`This NamespaceSchema already contains an ServiceSchema for name ${t.name}`);\n    return this.services.add(t), this;\n  }\n}\nclass m extends i {\n  constructor(e, s, a, n) {\n    super(e, a, n);\n    /**\n     * This is the {@link C3Type} of this {@link PropertyDefinition}\n     */\n    o(this, \"type\");\n    this.type = s;\n  }\n}\nclass F extends u {\n  constructor(e, s, a, n) {\n    super(\"object\", e, s, a, n);\n    /**\n     * The parent schema of this object definition.\n     * This is used to support inheritance.\n     */\n    o(this, \"parent\", null);\n    /**\n     * The properties are the fields of this object type.\n     */\n    o(this, \"properties\", []);\n  }\n  addProperty(e, s, a) {\n    return this.addPropertyDefinition(new m(e, s, a));\n  }\n  /**\n   * Adds a property to this {@link ObjectC3Type}\n   * @param propertyDefinition to add to this {@link ObjectC3Type}\n   * @return this {@link ObjectC3Type} for chaining\n   */\n  addPropertyDefinition(e) {\n    return this.properties.push(e), this;\n  }\n  /**\n   * Finds the first {@link PropertyDefinition} for the given name\n   * @param name the property to find\n   * @return the {@link PropertyDefinition}  if it exists null if not\n   */\n  findProperty(e) {\n    let s = null;\n    if (this.properties) {\n      for (const a of this.properties)\n        if (a.name === e) {\n          s = a;\n          break;\n        }\n    }\n    return s;\n  }\n}\nclass j extends c {\n  constructor() {\n    super(\"ref\");\n    /**\n     * The {@link ObjectC3Type#getQualifiedName()} to the schema being referenced\n     */\n    o(this, \"qualifiedName\", null);\n  }\n}\nclass A extends i {\n  constructor(e, s, a, n) {\n    super(e, a, n);\n    /**\n     * The namespace this {@link ServiceDefinition} belongs to\n     */\n    o(this, \"namespace\");\n    /**\n     * This defines {@link FunctionDefinition}'s for this {@link ServiceDefinition}\n     * The key is the function name and the value is the schema that defines the function\n     */\n    o(this, \"functions\", /* @__PURE__ */ new Set());\n    this.namespace = s;\n  }\n  /**\n   * Stores the given value in the functions definitions for this schema\n   * If a schema for the name already exists an error will be thrown\n   * @param func the function to add\n   * @return this\n   */\n  addFunction(e) {\n    if (this.functions.has(e))\n      throw new Error(`ServiceDefinition already contains function for name ${e.name}`);\n    return this.functions.add(e), this;\n  }\n  /**\n   * Gets the fully qualified name for this {@link ServiceDefinition} which is the namespace + \".\" + name\n   * @return the fully qualified name for this {@link ServiceDefinition}\n   */\n  getQualifiedName() {\n    return this.namespace + \".\" + this.name;\n  }\n}\nclass Q extends c {\n  constructor() {\n    super(\"short\");\n  }\n}\nclass V extends c {\n  constructor() {\n    super(\"string\");\n  }\n}\nclass q extends u {\n  constructor(e, s, a, n) {\n    super(\"union\", e, s, a, n);\n    /**\n     * The types that are part of this union\n     * All types must have a field with the name of the discriminator\n     */\n    o(this, \"types\", []);\n  }\n}\nexport {\n  T as ArrayC3Type,\n  D as BooleanC3Type,\n  w as ByteC3Type,\n  h as C3Decorator,\n  c as C3Type,\n  S as CharC3Type,\n  u as ComplexC3Type,\n  b as DateC3Type,\n  N as DoubleC3Type,\n  v as EnumC3Type,\n  g as FloatC3Type,\n  E as FunctionDefinition,\n  P as IntC3Type,\n  $ as LongC3Type,\n  k as MapC3Type,\n  B as NamespaceDefinition,\n  x as NotNullDecorator,\n  F as ObjectC3Type,\n  y as ParameterDefinition,\n  m as PropertyDefinition,\n  j as ReferenceC3Type,\n  A as ServiceDefinition,\n  Q as ShortC3Type,\n  V as StringC3Type,\n  q as UnionC3Type,\n  f as VoidC3Type\n};\n//# sourceMappingURL=continuum-idl.js.map\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","var S = Object.defineProperty;\nvar m = (r, e, t) => e in r ? S(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;\nvar s = (r, e, t) => (m(r, typeof e != \"symbol\" ? e + \"\" : e, t), t);\nimport { C3Decorator as u, C3Type as p } from \"@kinotic/continuum-idl\";\nimport { AbstractIterablePage as h, Continuum as o, CrudServiceProxy as v } from \"@kinotic/continuum-client\";\nimport \"reflect-metadata\";\nclass L {\n  constructor(e, t, i, n) {\n    s(this, \"id\");\n    s(this, \"namespace\");\n    s(this, \"structure\");\n    s(this, \"namedQueries\");\n    this.id = e, this.namespace = t, this.structure = i, this.namedQueries = n;\n  }\n}\nclass G {\n  constructor(e, t, i) {\n    s(this, \"id\");\n    s(this, \"description\");\n    s(this, \"updated\");\n    this.id = e, this.description = t, this.updated = i;\n  }\n}\nclass q {\n  // do not ever set, system managed\n  constructor(e, t, i, n) {\n    s(this, \"id\");\n    s(this, \"namespace\");\n    s(this, \"name\");\n    s(this, \"entityDefinition\");\n    s(this, \"description\");\n    s(this, \"created\");\n    // do not ever set, system managed\n    s(this, \"updated\");\n    // do not ever set, system managed\n    s(this, \"published\");\n    // do not ever set, system managed\n    s(this, \"publishedTimestamp\");\n    this.namespace = e, this.name = t, this.entityDefinition = i, this.description = n;\n  }\n}\nclass H extends u {\n  constructor() {\n    super(), this.type = \"AutoGeneratedId\";\n  }\n}\nclass V extends u {\n  constructor() {\n    super();\n    s(this, \"propertyName\");\n    this.type = \"Discriminator\";\n  }\n  withPropertyName(t) {\n    return this.propertyName = t, this;\n  }\n}\nvar l = /* @__PURE__ */ ((r) => (r[r.NONE = 0] = \"NONE\", r[r.SHARED = 1] = \"SHARED\", r))(l || {});\nclass J extends u {\n  constructor() {\n    super();\n    s(this, \"multiTenancyType\", l.NONE);\n    this.type = \"Entity\";\n  }\n  withMultiTenancyType(t) {\n    return this.multiTenancyType = t, this;\n  }\n}\nclass j extends u {\n  constructor() {\n    super(), this.type = \"Flattened\";\n  }\n}\nclass z extends u {\n  constructor() {\n    super(), this.type = \"Id\";\n  }\n}\nclass K extends u {\n  constructor() {\n    super(), this.type = \"Nested\";\n  }\n}\nvar _ = /* @__PURE__ */ ((r) => (r[r.DOUBLE = 0] = \"DOUBLE\", r[r.FLOAT = 1] = \"FLOAT\", r[r.INT = 2] = \"INT\", r[r.LONG = 3] = \"LONG\", r[r.SHORT = 4] = \"SHORT\", r))(_ || {});\nclass W extends u {\n  constructor(t) {\n    super();\n    s(this, \"statements\");\n    this.type = \"Query\", this.statements = t;\n  }\n}\nclass X extends u {\n  constructor() {\n    super(), this.type = \"Text\";\n  }\n}\nclass Y extends p {\n  constructor() {\n    super(\"pageable\");\n  }\n}\nclass Z extends p {\n  constructor(t) {\n    super(\"page\");\n    /**\n     * The {@link ObjectC3Type} of the content of the page\n     * The actual page content will be a list of this type\n     */\n    s(this, \"contentType\");\n    this.contentType = t;\n  }\n}\nclass I extends h {\n  constructor(t, i, n, c) {\n    super(i, n);\n    s(this, \"structureId\");\n    s(this, \"entitiesService\");\n    this.entitiesService = t, this.structureId = c;\n  }\n  findNext(t) {\n    return this.entitiesService.findAllSinglePage(this.structureId, t);\n  }\n}\nclass x extends h {\n  constructor(t, i, n, c, a, d) {\n    super(i, n);\n    s(this, \"parameters\");\n    s(this, \"queryName\");\n    s(this, \"structureId\");\n    s(this, \"entitiesService\");\n    this.entitiesService = t, this.parameters = c, this.queryName = a, this.structureId = d;\n  }\n  findNext(t) {\n    return this.entitiesService.namedQuerySinglePage(this.structureId, this.queryName, this.parameters, t);\n  }\n}\nclass N extends h {\n  constructor(t, i, n, c, a) {\n    super(i, n);\n    s(this, \"searchText\");\n    s(this, \"structureId\");\n    s(this, \"entitiesService\");\n    this.entitiesService = t, this.searchText = c, this.structureId = a;\n  }\n  findNext(t) {\n    return this.entitiesService.searchSinglePage(this.structureId, this.searchText, t);\n  }\n}\nclass f {\n  constructor(e) {\n    s(this, \"serviceProxy\");\n    const t = \"org.kinotic.structures.api.services.JsonEntitiesService\";\n    this.serviceProxy = (e == null ? void 0 : e.serviceProxy(t)) || o.serviceProxy(t);\n  }\n  bulkSave(e, t) {\n    return this.serviceProxy.invoke(\"bulkSave\", [e, t]);\n  }\n  bulkUpdate(e, t) {\n    return this.serviceProxy.invoke(\"bulkUpdate\", [e, t]);\n  }\n  count(e) {\n    return this.serviceProxy.invoke(\"count\", [e]);\n  }\n  countByQuery(e, t) {\n    return this.serviceProxy.invoke(\"countByQuery\", [e, t]);\n  }\n  deleteById(e, t) {\n    return this.serviceProxy.invoke(\"deleteById\", [e, t]);\n  }\n  deleteByQuery(e, t) {\n    return this.serviceProxy.invoke(\"deleteByQuery\", [e, t]);\n  }\n  async findAll(e, t) {\n    const i = await this.findAllSinglePage(e, t);\n    return new I(this, t, i, e);\n  }\n  async findAllSinglePage(e, t) {\n    return this.serviceProxy.invoke(\"findAll\", [e, t]);\n  }\n  findById(e, t) {\n    return this.serviceProxy.invoke(\"findById\", [e, t]);\n  }\n  findByIds(e, t) {\n    return this.serviceProxy.invoke(\"findByIds\", [e, t]);\n  }\n  namedQuery(e, t, i) {\n    return this.serviceProxy.invoke(\"namedQuery\", [e, t, i]);\n  }\n  async namedQueryPage(e, t, i, n) {\n    const c = await this.namedQuerySinglePage(e, t, i, n);\n    return new x(this, n, c, i, t, e);\n  }\n  namedQuerySinglePage(e, t, i, n) {\n    return this.serviceProxy.invoke(\"namedQueryPage\", [e, t, i, n]);\n  }\n  save(e, t) {\n    return this.serviceProxy.invoke(\"save\", [e, t]);\n  }\n  async search(e, t, i) {\n    const n = await this.searchSinglePage(e, t, i);\n    return new N(this, i, n, t, e);\n  }\n  async searchSinglePage(e, t, i) {\n    return this.serviceProxy.invoke(\"search\", [e, t, i]);\n  }\n  update(e, t) {\n    return this.serviceProxy.invoke(\"update\", [e, t]);\n  }\n}\nconst P = new f();\nclass g {\n  constructor(e, t, i) {\n    s(this, \"structureNamespace\");\n    s(this, \"structureName\");\n    s(this, \"structureId\");\n    s(this, \"entitiesService\");\n    this.structureNamespace = e, this.structureName = t, this.structureId = (e + \".\" + t).toLowerCase(), this.entitiesService = i || P;\n  }\n  async bulkSave(e) {\n    const t = await this.beforeBulkSaveOrUpdate(e);\n    return this.entitiesService.bulkSave(this.structureId, t);\n  }\n  async bulkUpdate(e) {\n    const t = await this.beforeBulkSaveOrUpdate(e);\n    return this.entitiesService.bulkUpdate(this.structureId, t);\n  }\n  count() {\n    return this.entitiesService.count(this.structureId);\n  }\n  countByQuery(e) {\n    return this.entitiesService.countByQuery(this.structureId, e);\n  }\n  deleteById(e) {\n    return this.entitiesService.deleteById(this.structureId, e);\n  }\n  deleteByQuery(e) {\n    return this.entitiesService.deleteByQuery(this.structureId, e);\n  }\n  findAll(e) {\n    return this.entitiesService.findAll(this.structureId, e);\n  }\n  findById(e) {\n    return this.entitiesService.findById(this.structureId, e);\n  }\n  findByIds(e) {\n    return this.entitiesService.findByIds(this.structureId, e);\n  }\n  namedQuery(e, t) {\n    return this.entitiesService.namedQuery(this.structureId, e, t);\n  }\n  namedQueryPage(e, t, i) {\n    return this.entitiesService.namedQueryPage(this.structureId, e, t, i);\n  }\n  async save(e) {\n    const t = await this.beforeSaveOrUpdate(e);\n    return this.entitiesService.save(this.structureId, t);\n  }\n  search(e, t) {\n    return this.entitiesService.search(this.structureId, e, t);\n  }\n  async update(e) {\n    const t = await this.beforeSaveOrUpdate(e);\n    return this.entitiesService.update(this.structureId, t);\n  }\n  async beforeBulkSaveOrUpdate(e) {\n    return Promise.resolve(e);\n  }\n  async beforeSaveOrUpdate(e) {\n    return Promise.resolve(e);\n  }\n}\nclass E extends v {\n  constructor() {\n    super(o.serviceProxy(\"org.kinotic.structures.api.services.NamedQueriesService\"));\n  }\n}\nclass k extends v {\n  constructor() {\n    super(o.serviceProxy(\"org.kinotic.structures.api.services.NamespaceService\"));\n  }\n  createNamespaceIfNotExist(e, t) {\n    return this.serviceProxy.invoke(\"createNamespaceIfNotExist\", [e, t]);\n  }\n}\nclass Q extends v {\n  constructor() {\n    super(o.serviceProxy(\"org.kinotic.structures.api.services.StructureService\"));\n  }\n  findAllPublishedForNamespace(e, t) {\n    return this.serviceProxy.invoke(\"findAllPublishedForNamespace\", [e, t]);\n  }\n  countForNamespace(e) {\n    return this.serviceProxy.invoke(\"countForNamespace\", [e]);\n  }\n  publish(e) {\n    return this.serviceProxy.invoke(\"publish\", [e]);\n  }\n  unPublish(e) {\n    return this.serviceProxy.invoke(\"unPublish\", [e]);\n  }\n}\nconst b = new k(), B = new Q(), T = new f(), w = new E();\nvar y;\n((r) => {\n  function e() {\n    return b;\n  }\n  r.getNamespaceService = e;\n  function t() {\n    return B;\n  }\n  r.getStructureService = t;\n  function i() {\n    return T;\n  }\n  r.getEntitiesService = i;\n  function n() {\n    return w;\n  }\n  r.getNamedQueriesService = n;\n  function c(a, d) {\n    return new g(a, d);\n  }\n  r.createEntityService = c;\n})(y || (y = {}));\nvar A = /* @__PURE__ */ ((r) => (r.Entity = \"__structures-entity__\", r.Id = \"__structures-id__\", r.AutoGeneratedId = \"__structures-auto-generated-id__\", r.Flattened = \"__structures-flattened__\", r.Nested = \"__structures-nested__\", r.Text = \"__structures-text__\", r.NotNull = \"__structures-notnull__\", r.Precision = \"__structures-precision__\", r.Discriminator = \"__structures-discriminator__\", r.Query = \"__structures-query__\", r))(A || {});\nclass O {\n  constructor(e) {\n    s(this, \"multiTenancyType\");\n    this.multiTenancyType = e;\n  }\n}\nfunction $(r = l.NONE) {\n  return function(e) {\n    Reflect.defineMetadata(\"__structures-entity__\", new O(r), e);\n  };\n}\nfunction ee(r, e) {\n  Reflect.defineMetadata(\"__structures-id__\", {}, r, e);\n}\nfunction te(r, e) {\n  Reflect.defineMetadata(\"__structures-auto-generated-id__\", {}, r, e);\n}\nfunction re(r, e) {\n  Reflect.defineMetadata(\"__structures-flattened__\", {}, r, e);\n}\nfunction se(r, e) {\n  Reflect.defineMetadata(\"__structures-nested__\", {}, r, e);\n}\nfunction ie(r, e) {\n  Reflect.defineMetadata(\"__structures-text__\", {}, r, e);\n}\nfunction ne(r, e) {\n  Reflect.defineMetadata(\"__structures-notnull__\", {}, r, e);\n}\nfunction ce(r) {\n  return function(e, t, i) {\n    return Reflect.defineMetadata(\"__structures-query__\", r, e, t), i;\n  };\n}\nclass R {\n  constructor(e) {\n    s(this, \"precisionType\");\n    this.precisionType = e;\n  }\n}\nfunction ue(r = _.INT) {\n  return function(e, t) {\n    Reflect.defineMetadata(\"__structures-precision__\", new R(r), e, t);\n  };\n}\nclass C {\n  constructor(e) {\n    s(this, \"propertyName\");\n    this.propertyName = e;\n  }\n}\nfunction ae(r) {\n  return function(e, t) {\n    Reflect.defineMetadata(\"__structures-discriminator__\", new C(r), e, t);\n  };\n}\nexport {\n  te as AutoGeneratedId,\n  H as AutoGeneratedIdDecorator,\n  ae as Discriminator,\n  C as DiscriminatorConfig,\n  V as DiscriminatorDecorator,\n  f as EntitiesService,\n  P as EntitiesServiceSingleton,\n  $ as Entity,\n  O as EntityConfig,\n  J as EntityDecorator,\n  g as EntityService,\n  re as Flattened,\n  j as FlattenedDecorator,\n  ee as Id,\n  z as IdDecorator,\n  l as MultiTenancyType,\n  L as NamedQueriesDefinition,\n  E as NamedQueriesService,\n  G as Namespace,\n  k as NamespaceService,\n  se as Nested,\n  K as NestedDecorator,\n  ne as NotNull,\n  Z as PageC3Type,\n  Y as PageableC3Type,\n  ue as Precision,\n  R as PrecisionConfig,\n  _ as PrecisionType,\n  ce as Query,\n  W as QueryDecorator,\n  q as Structure,\n  Q as StructureService,\n  y as Structures,\n  A as StructuresDecorator,\n  ie as Text,\n  X as TextDecorator\n};\n//# sourceMappingURL=structures-api.js.map\n"],"sourceRoot":""}