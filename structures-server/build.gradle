plugins {
	id 'org.kinotic.java-application-conventions'
}

sourceSets {
    main {
        java {
            exclude '**/test/**'
        }
    }
}

dependencies {
	implementation project(':structures-core')
	implementation project(':structures-auth')

	// Additional Continuum Dependencies
	implementation "org.kinotic:continuum-core"
	implementation "org.kinotic:continuum-gateway"

	implementation 'com.github.ben-manes.caffeine:caffeine'
	
	implementation 'io.jsonwebtoken:jjwt-api'
	implementation 'io.jsonwebtoken:jjwt-impl'
	implementation 'io.jsonwebtoken:jjwt-jackson'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
	testImplementation "org.testcontainers:elasticsearch:${testContainersVersion}"
	testImplementation 'com.github.dasniko:testcontainers-keycloak:3.8.0'
	testImplementation 'junit:junit:4.13.1'
}

test {

	environment 'JAVA_TOOL_OPTIONS', '--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.in=ALL-UNNAMED'

	systemProperty 'spring.profiles.active', 'test'
    
}


tasks.named('processResources') {
	dependsOn ":structures-frontend-next:copyDist"
}

tasks.named('sourcesJar') {
	dependsOn ":structures-frontend-next:copyDist"
}
